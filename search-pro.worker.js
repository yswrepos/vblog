const V=Object.entries,et=Object.fromEntries,st="ENTRIES",L="KEYS",T="VALUES",_="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===_)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==_).join("")}value(){return E(this._path).node.get(_)}result(){switch(this._type){case T:return this.value();case L:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],nt=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return R(e,t,s,n,i,1,o,""),n},R=(e,t,s,n,o,u,i,r)=>{const d=u*i;t:for(const c of e.keys())if(c===_){const a=o[d-1];a<=s&&n.set(r,[e.get(c),a])}else{let a=u;for(let h=0;h<c.length;++h,++a){const g=c[h],m=i*a,p=m-i;let l=o[m];const f=Math.max(0,a-s-1),y=Math.min(i-1,a+s);for(let F=f;F<y;++F){const v=g!==t[F],z=o[p+F]+ +v,A=o[p+F+1]+1,w=o[m+F]+1,j=o[m+F+1]=Math.min(z,A,w);j<l&&(l=j)}if(l>s)continue t}R(e.get(c),t,s,n,o,a,i,r+c)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==_&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ot(this._tree,t)}entries(){return new D(this,st)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return nt(this._tree,t,s)}get(t){const s=k(this._tree,t);return s!==void 0?s.get(_):void 0}has(t){const s=k(this._tree,t);return s!==void 0&&s.has(_)}keys(){return new D(this,L)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,I(this._tree,t).set(_,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);return n.set(_,s(n.get(_))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);let o=n.get(_);return o===void 0&&n.set(_,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==_&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},k=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==_&&t.startsWith(s))return k(e.get(s),t.slice(s.length))},I=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==_&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const d=e.get(u);if(r===u.length)e=d;else{const c=new Map;c.set(u.slice(r),d),e.set(t.slice(n,n+r),c),e.delete(u),e=c}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ot=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(_),s.size===0)W(n);else if(s.size===1){const[o,u]=s.entries().next().value;q(n,o,u)}}},W=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)W(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==_&&q(e.slice(0,-1),n,o)}},q=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],ut=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},it=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,M="or",$="and",rt="and_not",ct=(e,t)=>{e.includes(t)||e.push(t)},N=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},P=({score:e},{score:t})=>t-e,lt=()=>new Map,b=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,ht={[M]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),N(n.terms,u)}}return e},[$]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);N(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[rt]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},dt=(e,t,s,n,o,u)=>{const{k:i,b:r,d}=u;return Math.log(1+(s-t+.5)/(t+.5))*(d+e*(i+1)/(e+i*(1-r+r*n/o)))},at=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},ft=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,lt),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},gt={k:1.2,b:.7,d:.5},mt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(it),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof console?.[e]=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:M,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:gt},pt={combineWith:$,prefix:(e,t,s)=>t===s.length-1},Ft={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},_t={...Ft,...U},K=Symbol("*"),yt=(e,t)=>{const s=new Map,n={...e._options.searchOptions,...t};for(const[o,u]of e._documentIds){const i=n.boostDocument?n.boostDocument(u,"",e._storedFields.get(o)):1;s.set(o,{score:i,terms:[],match:{}})}return s},X=(e,t=M)=>{if(e.length===0)return new Map;const s=t.toLowerCase(),n=ht[s];if(!n)throw new Error(`Invalid combination operator: ${t}`);return e.reduce(n)||new Map},S=(e,t,s,n,o,u,i,r,d=new Map)=>{if(o==null)return d;for(const c of Object.keys(u)){const a=u[c],h=e._fieldIds[c],g=o.get(h);if(g==null)continue;let m=g.size;const p=e._avgFieldLength[h];for(const l of g.keys()){if(!e._documentIds.has(l)){ft(e,h,l,s),m-=1;continue}const f=i?i(e._documentIds.get(l),s,e._storedFields.get(l)):1;if(!f)continue;const y=g.get(l),F=e._fieldLength.get(l)[h],v=dt(y,m,e._documentCount,F,p,r),z=n*a*f*v,A=d.get(l);if(A){A.score+=z,ct(A.terms,t);const w=G(A.match,s);w?w.push(c):A.match[s]=[c]}else d.set(l,{score:z,terms:[t],match:{[s]:[c]}})}}return d},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((l,f)=>({...l,[f]:G(n.boost,f)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:d}=n,{fuzzy:c,prefix:a}={...J.weights,...i},h=e._index.get(t.term),g=S(e,t.term,t.term,1,h,o,u,d);let m,p;if(t.prefix&&(m=e._index.atPrefix(t.term)),t.fuzzy){const l=t.fuzzy===!0?.2:t.fuzzy,f=l<1?Math.min(r,Math.round(t.term.length*l)):l;f&&(p=e._index.fuzzyGet(t.term,f))}if(m)for(const[l,f]of m){const y=l.length-t.term.length;if(!y)continue;p?.delete(l);const F=a*l.length/(l.length+.3*y);S(e,t.term,l,F,f,o,u,d,g)}if(p)for(const l of p.keys()){const[f,y]=p.get(l);if(!y)continue;const F=c*l.length/(l.length+y);S(e,t.term,l,F,f,o,u,d,g)}return g},Y=(e,t,s={})=>{if(t===K)return yt(e,s);if(typeof t!="string"){const a={...s,...t,queries:void 0},h=t.queries.map(g=>Y(e,g,a));return X(h,a.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:d}=i,c=r(t).flatMap(a=>d(a)).filter(a=>!!a).map(at(i)).map(a=>At(e,a,i));return X(c,i.combineWith)},Q=(e,t,s={})=>{const n=Y(e,t,s),o=[];for(const[u,{score:i,terms:r,match:d}]of n){const c=r.length||1,a={id:e._documentIds.get(u),score:i*c,terms:Object.keys(d),queryTerms:r,match:d};Object.assign(a,e._storedFields.get(u)),(s.filter==null||s.filter(a))&&o.push(a)}return t===K&&s.boostDocument==null&&e._options.searchOptions.boostDocument==null||o.sort(P),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of Q(e,t,s)){const r=i.join(" "),d=n.get(r);d!=null?(d.score+=u,d.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:d}]of n)o.push({suggestion:u,terms:r,score:i/d});return o.sort(P),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(t?.fields==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?_t:t.autoVacuum;this._options={...mt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...pt,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:d,serializationVersion:c},a)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const h=new Et(a);h._documentCount=t,h._nextId=s,h._documentIds=b(n),h._idToShortId=new Map,h._fieldIds=o,h._fieldLength=b(u),h._avgFieldLength=i,h._storedFields=b(r),h._dirtCount=d||0,h._index=new C;for(const[g,m]of h._documentIds)h._idToShortId.set(m,g);for(const[g,m]of e){const p=new Map;for(const l of Object.keys(m)){let f=m[l];c===1&&(f=f.ds),p.set(parseInt(l,10),b(f))}h._index.set(g,p)}return h},B=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(c,a=!1)=>{let h="";i===0?h=c.length>20?`… ${c.slice(-20)}`:c:a?h=c.length+i>100?`${c.slice(0,100-i)}… `:c:h=c.length>20?`${c.slice(0,20)} … ${c.slice(-20)}`:c,h&&o.push(h),i+=h.length,a||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let d=s.indexOf(n,u);if(d===-1)return null;for(;d>=0;){const c=d+n.length;if(r(e.slice(u,d)),u=c,i>100)break;d=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},wt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),xt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),Z=(e,t,s={})=>{const n={};return Q(t,e,{boost:{h:2,t:1,c:4},prefix:!0,...s}).forEach(o=>{const{id:u,terms:i,score:r}=o,d=u.includes("@"),c=u.includes("#"),[a,h]=u.split(/[#@]/),g=Number(a),m=i.sort((l,f)=>l.length-f.length).filter((l,f)=>i.slice(f+1).every(y=>!y.includes(l))),{contents:p}=n[g]??={title:"",contents:[]};if(d)p.push([{type:"customField",id:g,index:h,display:m.map(l=>o.c.map(f=>B(f,l))).flat().filter(l=>l!==null)},r]);else{const l=m.map(f=>B(o.h,f)).filter(f=>f!==null);if(l.length&&p.push([{type:c?"heading":"title",id:g,...c&&{anchor:h},display:l},r]),"t"in o)for(const f of o.t){const y=m.map(F=>B(f,F)).filter(F=>F!==null);y.length&&p.push([{type:"text",id:g,...c&&{anchor:h},display:y},r])}}}),V(n).sort(([,o],[,u])=>"max"==="total"?wt(o,u):xt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=ut(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},tt=(e,t,s={})=>Ct(t,e,{fuzzy:.2,maxFuzzy:3,...s}).map(({suggestion:n})=>n),bt=et(V(JSON.parse("{\"/\":{\"documentCount\":636,\"nextId\":636,\"documentIds\":{\"0\":\"0\",\"1\":\"1\",\"2\":\"1#rabbitmq-事务的基本操作\",\"3\":\"1#使用事务的步骤\",\"4\":\"1#事务的性能影响\",\"5\":\"1#替代方案-确认模式\",\"6\":\"1#总结\",\"7\":\"1#go使用rabbitmq的例子\",\"8\":\"2\",\"9\":\"2#功能\",\"10\":\"2#使用场景\",\"11\":\"2#数据一致性保证\",\"12\":\"2#rabbitmq可用于设计分布式系统的一致性\",\"13\":\"2#_1-使用事务消息\",\"14\":\"2#_2-最终一致性模型\",\"15\":\"2#_3-补偿事务-saga模式\",\"16\":\"2#_4-确认和重试机制\",\"17\":\"2#_5-幂等性设计\",\"18\":\"2#结论\",\"19\":\"3\",\"20\":\"3#redis-的单线程模型\",\"21\":\"3#并发连接和请求处理\",\"22\":\"3#总结\",\"23\":\"4\",\"24\":\"4#预处理-预编译\",\"25\":\"4#编译\",\"26\":\"4#汇编\",\"27\":\"4#链接\",\"28\":\"4#g-相关命令\",\"29\":\"5\",\"30\":\"5#内存分区\",\"31\":\"5#malloc、calloc、realoc\",\"32\":\"5#malloc\",\"33\":\"5#calloc\",\"34\":\"5#realoc\",\"35\":\"5#总结\",\"36\":\"6\",\"37\":\"6#int\",\"38\":\"6#short\",\"39\":\"6#long\",\"40\":\"6#char\",\"41\":\"6#_64位环境占用字节情况\",\"42\":\"6#获取某数据类型长度\",\"43\":\"7\",\"44\":\"7#字符串只读\",\"45\":\"8\",\"46\":\"9\",\"47\":\"9#基本语法\",\"48\":\"9#示例\",\"49\":\"9#注意事项\",\"50\":\"10\",\"51\":\"10#创建网络\",\"52\":\"10#启动redis\",\"53\":\"10#创建由3个redis-master节点构成的集群\",\"54\":\"10#连接集群查看集群状态\",\"55\":\"10#crc16简介\",\"56\":\"10#使用golang连接\",\"57\":\"10#docker中启动\",\"58\":\"10#dockerfile\",\"59\":\"10#构建dockerfile\",\"60\":\"10#启动go服务\",\"61\":\"11\",\"62\":\"12\",\"63\":\"13\",\"64\":\"14\",\"65\":\"14#workspaces是什么\",\"66\":\"14#举例说明\",\"67\":\"14#配置和使用\",\"68\":\"14#其它用法\",\"69\":\"14#npm-工作区-与-yarn-工作区\",\"70\":\"14#使用-lerna\",\"71\":\"14#参考\",\"72\":\"15\",\"73\":\"15#导读\",\"74\":\"15#url组成\",\"75\":\"15#参考\",\"76\":\"16\",\"77\":\"17\",\"78\":\"17#动态查找入口文件\",\"79\":\"17#动态查找以-index-开头的-js-文件\",\"80\":\"17#默认的入口文件-index-js-输出为-main-js\",\"81\":\"17#chunk-bundle的区别\",\"82\":\"17#chunk\",\"83\":\"17#bundle\",\"84\":\"17#区别\",\"85\":\"17#为什么这个区别重要\",\"86\":\"17#chunks的几个值\",\"87\":\"17#chunks-all-的具体含义\",\"88\":\"17#commons-chunk解析\",\"89\":\"17#chunks-initial\",\"90\":\"17#minchunks-2\",\"91\":\"17#maxinitialrequests-5\",\"92\":\"17#minsize-0\",\"93\":\"17#总结\",\"94\":\"17#使用webpack-bundle-analyzer-分析-bundle\",\"95\":\"17#示例-webpack-bundle-analyzer-配置\",\"96\":\"17#结论\",\"97\":\"17#webpack-conf-js示例\",\"98\":\"18\",\"99\":\"18#导读\",\"100\":\"18#添加一个子模块\",\"101\":\"18#初始化和拉取子模块更新\",\"102\":\"18#批量操作所有子模块\",\"103\":\"19\",\"104\":\"19#gitlab-和-gitlab-runner-简介\",\"105\":\"19#gitlab\",\"106\":\"19#gitlab-runner\",\"107\":\"19#搭建gitlab\",\"108\":\"19#使用docker-run运行gitlab\",\"109\":\"19#配置gitlab\",\"110\":\"19#使用docker-compose启动gitlab\",\"111\":\"19#搭建gitlab-runner\",\"112\":\"20\",\"113\":\"20#_1-创建并推送project1和project2到github\",\"114\":\"20#_2-在base仓库中添加子模块\",\"115\":\"20#_3-克隆base仓库及其子模块\",\"116\":\"20#注意事项\",\"117\":\"21\",\"118\":\"21#实现自定义注册逻辑-etcd版\",\"119\":\"21#实现自定义解析器-resolver\",\"120\":\"21#_1-实现-resolver-builder-接口\",\"121\":\"21#接口签名\",\"122\":\"21#_2-实现-resolver-resolver-接口\",\"123\":\"21#接口签名-1\",\"124\":\"21#_3-注册自定义-builder\",\"125\":\"21#详细叙述每一步的意义\",\"126\":\"21#实现-resolver-builder-接口\",\"127\":\"21#实现-resolver-resolver-接口\",\"128\":\"21#注册自定义-builder\",\"129\":\"21#代码示例\",\"130\":\"21#resolver-clientconn的作用\",\"131\":\"21#clientconn-接口的作用\",\"132\":\"21#注释的含义\",\"133\":\"21#为什么用回调函数\",\"134\":\"21#解析器为什么不设计成实现一个接口\",\"135\":\"21#_1-分离构建与解析逻辑\",\"136\":\"21#_2-提高扩展性和灵活性\",\"137\":\"21#_3-降低复杂性和提高可维护性\",\"138\":\"21#_4-适应不同的使用场景\",\"139\":\"21#_5-符合设计模式的最佳实践\",\"140\":\"22\",\"141\":\"22#排序算法介绍和示例\",\"142\":\"22#冒泡排序-bubble-sort\",\"143\":\"22#选择排序-selection-sort\",\"144\":\"22#插入排序-insertion-sort\",\"145\":\"22#快速排序-quick-sort\",\"146\":\"22#时间复杂度\",\"147\":\"22#冒泡排序-bubble-sort-1\",\"148\":\"22#选择排序-selection-sort-1\",\"149\":\"22#插入排序-insertion-sort-1\",\"150\":\"22#快速排序-quick-sort-1\",\"151\":\"22#快速排序和归并排序\",\"152\":\"22#区别\",\"153\":\"22#性能比较\",\"154\":\"22#归并排序示例\",\"155\":\"23\",\"156\":\"23#解释\",\"157\":\"23#用途\",\"158\":\"23#结论\",\"159\":\"24\",\"160\":\"25\",\"161\":\"25#内核空间-kernel-space\",\"162\":\"25#用户空间-user-space\",\"163\":\"25#为什么有这个概念\",\"164\":\"26\",\"165\":\"26#new\",\"166\":\"26#存储\",\"167\":\"26#获取\",\"168\":\"26#watch\",\"169\":\"27\",\"170\":\"27#实现分布式锁需要注意的事项\",\"171\":\"27#使用-etcd-实现分布式锁的步骤\",\"172\":\"27#使用示例\",\"173\":\"27#运行结果\",\"174\":\"28\",\"175\":\"28#etcd和redis的特点\",\"176\":\"28#etcd\",\"177\":\"28#redis\",\"178\":\"28#选择-etcd-还是-redis\",\"179\":\"28#强一致性和最终一致性\",\"180\":\"28#强一致性\",\"181\":\"28#最终一致性\",\"182\":\"28#etcd的持久化\",\"183\":\"28#持久化的体现\",\"184\":\"28#write-ahead-log-wal-预写日志\",\"185\":\"28#基本概念\",\"186\":\"28#工作原理\",\"187\":\"28#优点\",\"188\":\"28#应用\",\"189\":\"29\",\"190\":\"30\",\"191\":\"30#使用示例\",\"192\":\"30#使用场景\",\"193\":\"31\",\"194\":\"31#new\",\"195\":\"31#make\",\"196\":\"31#区别\",\"197\":\"31#选择使用哪一个\",\"198\":\"31#示例\",\"199\":\"31#切片本身指针的作用\",\"200\":\"31#修改切片本身\",\"201\":\"31#json反序列化\",\"202\":\"31#go中数据结构常用定义和使用的区别\",\"203\":\"31#append操作\",\"204\":\"31#string-builder中-var-vs-new\",\"205\":\"31#var-builder-strings-builder\",\"206\":\"31#builder-new-strings-builder\",\"207\":\"31#总结\",\"208\":\"32\",\"209\":\"32#长期存在的goroutine引用对象\",\"210\":\"32#全局变量引起的内存占用\",\"211\":\"32#未关闭的channel\",\"212\":\"32#循环引用\",\"213\":\"32#未关闭的context\",\"214\":\"32#defer语句在运行时间较长的函数中\",\"215\":\"32#其它\",\"216\":\"34\",\"217\":\"34#客户端\",\"218\":\"34#服务端\",\"219\":\"35\",\"220\":\"36\",\"221\":\"36#字符串和字节切片\",\"222\":\"36#字符串和字节切片之间的转换\",\"223\":\"36#一点转换的小技巧\",\"224\":\"36#转换风险\",\"225\":\"37\",\"226\":\"38\",\"227\":\"38#值接收者和指针接收者的一点区别\",\"228\":\"38#值接收者\",\"229\":\"38#指针接收者\",\"230\":\"38#本质区别\",\"231\":\"38#使用示例\",\"232\":\"38#两者实现的一点影响\",\"233\":\"38#确保结构体实现接口\",\"234\":\"38#指针类型实现接口的限制\",\"235\":\"38#接口指针的使用\",\"236\":\"38#结构体成员为接口的指针的使用示例\",\"237\":\"38#传递接口指针类型给结构体\",\"238\":\"38#使用结构体成员的接口指针\",\"239\":\"39\",\"240\":\"39#基本使用\",\"241\":\"40\",\"242\":\"40#grpc双向流\",\"243\":\"40#proto\",\"244\":\"40#服务端\",\"245\":\"40#客户端\",\"246\":\"40#grpc服务端流\",\"247\":\"40#proto-1\",\"248\":\"40#服务端-1\",\"249\":\"40#客户端-1\",\"250\":\"41\",\"251\":\"41#http协议断开的取决因素\",\"252\":\"41#http协议版本选择的取决因素\",\"253\":\"41#http2协议\",\"254\":\"41#使用gin和nginx提供http2协议的web服务\",\"255\":\"41#gin\",\"256\":\"41#nginx\",\"257\":\"41#服务端关闭连接\",\"258\":\"41#客户端主动关闭-http-连接\",\"259\":\"42\",\"260\":\"42#kubernetes-的主要组件\",\"261\":\"42#在-macos-上使用-kubernetes\",\"262\":\"42#使用-minikube\",\"263\":\"42#使用-docker-desktop\",\"264\":\"43\",\"265\":\"44\",\"266\":\"44#protoc命令详解\",\"267\":\"45\",\"268\":\"45#tcp压测工具-tcpkali\",\"269\":\"45#nc\",\"270\":\"45#tcpkali\",\"271\":\"46\",\"272\":\"47\",\"273\":\"48\",\"274\":\"48#内存的虚拟地址\",\"275\":\"48#页\",\"276\":\"48#虚拟地址和页的作用\",\"277\":\"48#虚拟地址和页的总结\",\"278\":\"48#文件读写过程\",\"279\":\"48#系统调用\",\"280\":\"48#内核处理\",\"281\":\"48#查找页缓存\",\"282\":\"48#数据传输\",\"283\":\"48#写操作\",\"284\":\"48#完成系统调用\",\"285\":\"48#错误处理\",\"286\":\"48#mmap\",\"287\":\"48#mmap的优势和特点\",\"288\":\"48#内存映射\",\"289\":\"48#随机访问\",\"290\":\"48#延迟加载\",\"291\":\"48#代码示例\",\"292\":\"48#普通读写文件\",\"293\":\"48#使用mmap\",\"294\":\"49\",\"295\":\"49#defer不会执行的情况\",\"296\":\"49#多个defer的执行顺序\",\"297\":\"49#defer不会执行的情况-1\",\"298\":\"49#defer和panic\",\"299\":\"49#buf-的意思\",\"300\":\"49#buf-的解释\",\"301\":\"49#超过-128-字节的情况\",\"302\":\"49#自定义固定缓存区和系统输入输出网络缓存区\",\"303\":\"49#输出网络缓存区\",\"304\":\"49#输入网络缓存区\",\"305\":\"49#数据的即时性\",\"306\":\"49#io-eof\",\"307\":\"49#在网络编程中的使用\",\"308\":\"49#示例\",\"309\":\"49#关键点\",\"310\":\"49#go哪些是引用类型\",\"311\":\"49#注意事项\",\"312\":\"49#make和new的区别\",\"313\":\"49#new在什么时候使用\",\"314\":\"49#示例-1\",\"315\":\"49#对比-new-和复合字面量\",\"316\":\"49#channel关闭判断方法\",\"317\":\"49#使用ok判断\",\"318\":\"49#range\",\"319\":\"49#r-parsemultipartform内存限制大小\",\"320\":\"50\",\"321\":\"50#nodejs例子\",\"322\":\"50#客户端\",\"323\":\"50#服务端\",\"324\":\"50#go流式上传例子\",\"325\":\"50#客户端-1\",\"326\":\"50#服务端-1\",\"327\":\"50#r-body-的性质\",\"328\":\"50#io-copy-的工作方式\",\"329\":\"50#流式处理的优点\",\"330\":\"51\",\"331\":\"51#返回-pb-greetresponse-结构体实例\",\"332\":\"51#返回-pb-greetresponse-结构体指针\",\"333\":\"52\",\"334\":\"52#导读\",\"335\":\"52#分析\",\"336\":\"52#扩展\",\"337\":\"52#参考\",\"338\":\"53\",\"339\":\"53#导读\",\"340\":\"53#内置注解\",\"341\":\"53#override\",\"342\":\"53#deprecated\",\"343\":\"53#suppresswarnings\",\"344\":\"53#元注解-作用于其它注解上的注解\",\"345\":\"53#retention\",\"346\":\"53#例子\",\"347\":\"53#target\",\"348\":\"53#例子-1\",\"349\":\"53#documented\",\"350\":\"53#inherited\",\"351\":\"53#safevarargs-java7支持\",\"352\":\"53#functionalinterface-java8支持\",\"353\":\"53#repeatable-java8支持\",\"354\":\"53#注解的架构\",\"355\":\"53#注解代码的组成\",\"356\":\"53#一个简单的例子\",\"357\":\"54\",\"358\":\"54#原因\",\"359\":\"54#spring无法找到对应controller\",\"360\":\"54#书写错误\",\"361\":\"55\",\"362\":\"55#可能原因\",\"363\":\"55#未引入相关依赖\",\"364\":\"55#缓存出错\",\"365\":\"56\",\"366\":\"56#如何使用springboot热启动\",\"367\":\"57\",\"368\":\"57#async的使用\",\"369\":\"57#async的实现\",\"370\":\"57#同步等待异步结果\",\"371\":\"57#异步处理执行结果\",\"372\":\"57#可靠性探讨\",\"373\":\"58\",\"374\":\"58#volatile简介\",\"375\":\"58#使用场景\",\"376\":\"58#注意事项\",\"377\":\"58#使用示例\",\"378\":\"58#确保操作完成的意义\",\"379\":\"58#示例解释\",\"380\":\"59\",\"381\":\"60\",\"382\":\"60#js函数的-私有变量-和-静态变量\",\"383\":\"60#prototype和-静态变量\",\"384\":\"60#构造函数\",\"385\":\"60#函数私有变量-vs-this\",\"386\":\"61\",\"387\":\"62\",\"388\":\"62#基本概念\",\"389\":\"62#使用-trap-的语法\",\"390\":\"62#示例\",\"391\":\"62#注意事项\",\"392\":\"63\",\"393\":\"64\",\"394\":\"64#配置linux转发\",\"395\":\"64#_1-启用-ip-转发\",\"396\":\"64#_2-设置网络接口\",\"397\":\"64#_3-配置-nat-网络地址转换\",\"398\":\"64#_4-保存您的-iptables-配置\",\"399\":\"64#_5-配置您的电脑\",\"400\":\"64#示例\",\"401\":\"64#_1-配置网络接口\",\"402\":\"64#_2-配置-ip-转发和-nat\",\"403\":\"64#_3-dhcp-和-dns-服务\",\"404\":\"64#_4-无线接入点\",\"405\":\"64#_5-重新启动网络服务\",\"406\":\"65\",\"407\":\"65#连接\",\"408\":\"65#查看无线设备\",\"409\":\"65#使用netplan连接wifi\",\"410\":\"65#加密\",\"411\":\"65#重启wlan0\",\"412\":\"65#查看\",\"413\":\"66\",\"414\":\"66#方法-1-使用-fstab-文件\",\"415\":\"66#方法-2-创建启动脚本\",\"416\":\"66#注意事项\",\"417\":\"67\",\"418\":\"67#使用直播软件-如obs-studio\",\"419\":\"67#使用ffmpeg进行高级处理\",\"420\":\"67#网络和硬件要求\",\"421\":\"67#注意事项\",\"422\":\"68\",\"423\":\"68#rtmp-real-time-messaging-protocol\",\"424\":\"68#hls-http-live-streaming\",\"425\":\"68#mpeg-dash-dynamic-adaptive-streaming-over-http\",\"426\":\"68#总结\",\"427\":\"69\",\"428\":\"69#编码-codec\",\"429\":\"69#视频格式-container-format\",\"430\":\"69#它们之间的关系\",\"431\":\"69#举例说明\",\"432\":\"69#为什么这种区分很重要\",\"433\":\"70\",\"434\":\"70#_1-sql插入操作在主服务器上执行\",\"435\":\"70#_2-从服务器请求数据变更\",\"436\":\"70#_3-应用数据变更到从服务器\",\"437\":\"70#_4-完成同步\",\"438\":\"70#同步模式\",\"439\":\"70#注意事项\",\"440\":\"70#半同步复制\",\"441\":\"70#工作原理\",\"442\":\"70#优点\",\"443\":\"70#缺点\",\"444\":\"70#使用场景\",\"445\":\"70#配置\",\"446\":\"70#主从复制过程\",\"447\":\"70#_1-建立复制连接\",\"448\":\"70#_2-读取二进制日志位置\",\"449\":\"70#_3-请求和接收二进制日志事件\",\"450\":\"70#_4-写入中继日志\",\"451\":\"70#_5-应用日志事件\",\"452\":\"70#技术细节\",\"453\":\"70#主服务器的bin-dump-thread的推送\",\"454\":\"70#二进制日志的推送过程\",\"455\":\"71\",\"456\":\"71#nat表\",\"457\":\"71#端口号的作用\",\"458\":\"71#数据包路由的例子\",\"459\":\"72\",\"460\":\"72#_1-创建桥接接口\",\"461\":\"72#_2-添加接口到桥接中\",\"462\":\"72#_3-创建并配置vlan\",\"463\":\"72#_4-配置ip地址-可选\",\"464\":\"72#_5-保存配置\",\"465\":\"72#网桥间的访问\",\"466\":\"72#创建新ssid并关联到桥接接口\",\"467\":\"72#控制桥接接口之间的访问\",\"468\":\"72#示例-设置防火墙规则以隔离网络\",\"469\":\"73\",\"470\":\"73#如何创建访客网络接口\",\"471\":\"73#注意事项\",\"472\":\"73#防火墙规则\",\"473\":\"73#_1-创建访客网络接口-可选\",\"474\":\"73#_2-配置dhcp服务\",\"475\":\"73#_3-配置防火墙规则\",\"476\":\"73#示例防火墙规则\",\"477\":\"73#_4-应用并测试防火墙规则\",\"478\":\"74\",\"479\":\"74#使用ip命令添加桥接接口\",\"480\":\"74#使用brctl命令添加桥接接口-如果可用\",\"481\":\"75\",\"482\":\"75#_1-创建桥接接口\",\"483\":\"75#_2-配置网络接口\",\"484\":\"75#_3-配置无线网络\",\"485\":\"75#_4-更新防火墙规则\",\"486\":\"75#_5-应用更改\",\"487\":\"75#注意\",\"488\":\"75@0\",\"489\":\"75@1\",\"490\":\"76\",\"491\":\"76#_1-使用include或require\",\"492\":\"76#_2-使用shell-exec-或exec\",\"493\":\"76#_3-使用proc-open-和相关函数\",\"494\":\"76#注意事项\",\"495\":\"77\",\"496\":\"77#创建-requirements-txt\",\"497\":\"77#理解-pip-install\",\"498\":\"77#使用虚拟环境\",\"499\":\"78\",\"500\":\"78#基本介绍\",\"501\":\"78#场景和使用\",\"502\":\"79\",\"503\":\"79#基本使用\",\"504\":\"79#常用api\",\"505\":\"80\",\"506\":\"81\",\"507\":\"81#方法1-直接过滤接口名称\",\"508\":\"81#方法2-过滤详细信息\",\"509\":\"81#方法3-使用ip命令\",\"510\":\"81#注意\",\"511\":\"82\",\"512\":\"83\",\"513\":\"83#为什么cap不能同时满足\",\"514\":\"84\",\"515\":\"84#举例\",\"516\":\"84#状态变化\",\"517\":\"85\",\"518\":\"85#导读\",\"519\":\"85#referer\",\"520\":\"85#构成\",\"521\":\"85#语法\",\"522\":\"85#例子\",\"523\":\"85#referrer-policy\",\"524\":\"85#在-html-里设置-referer-policy-信息\",\"525\":\"85#与-css-集成\",\"526\":\"85#参考\",\"527\":\"86\",\"528\":\"86#导读\",\"529\":\"86#场景需求\",\"530\":\"86#https通信过程\",\"531\":\"86#交流过程\",\"532\":\"86#如何生成服务器证书\",\"533\":\"86#总结\",\"534\":\"87\",\"535\":\"88\",\"536\":\"88#_1-准备docker-compose文件\",\"537\":\"88#_2-启动rabbitmq集群\",\"538\":\"88#_3-设置集群节点\",\"539\":\"88#_4-验证集群状态\",\"540\":\"88#rabbitmq-erlang-cookie\",\"541\":\"88#erlang-cookie的作用\",\"542\":\"88#如何使用\",\"543\":\"88#注意事项\",\"544\":\"88#rabbitmq-docker-run-方式\",\"545\":\"88#步骤1-创建网络\",\"546\":\"88#步骤2-启动rabbitmq节点\",\"547\":\"88#启动第一个节点-rabbitmq1\",\"548\":\"88#启动第二个节点-rabbitmq2\",\"549\":\"88#启动第三个节点-rabbitmq3\",\"550\":\"88#步骤3-配置rabbitmq集群\",\"551\":\"88#步骤4-验证集群状态\",\"552\":\"89\",\"553\":\"89#_1-证书获取\",\"554\":\"89#_2-证书检查\",\"555\":\"89#a-证书的有效期\",\"556\":\"89#b-证书颁发机构-ca\",\"557\":\"89#c-域名匹配\",\"558\":\"89#d-证书撤销列表-crl-和在线证书状态协议-ocsp\",\"559\":\"89#_3-证书链验证\",\"560\":\"89#_4-数字签名验证\",\"561\":\"89#_5-加密通信\",\"562\":\"90\",\"563\":\"90#线程死锁怎么产生-怎么避免\",\"564\":\"90#rabbitmq消息可靠性保证\",\"565\":\"90#rabbitmq事务\",\"566\":\"90#raocketmq的流式计算\",\"567\":\"90#面向soa\",\"568\":\"90#bilibili京东问题\",\"569\":\"90#github-java-learning\",\"570\":\"90#raft\",\"571\":\"90#_1-角色分配\",\"572\":\"90#_2-领导选举\",\"573\":\"90#_3-日志复制\",\"574\":\"90#_4-安全性和一致性\",\"575\":\"90#_5-客户端交互\",\"576\":\"90#raft一致性\",\"577\":\"90#rabbitmq集群\",\"578\":\"90#rabbitmq延迟队列\",\"579\":\"90#rabbitmq延迟队列的原理\",\"580\":\"90#使用ffmpeg解决视频时间戳错乱的问题【qs】\",\"581\":\"90#使用-vsync-修正时间戳问题\",\"582\":\"90#修正不连续或不规则时间戳\",\"583\":\"91\",\"584\":\"91#生产者到交换机\",\"585\":\"91#交换机到队列\",\"586\":\"91#队列中的消息\",\"587\":\"91#总结\",\"588\":\"92\",\"589\":\"92#集群的两种模式\",\"590\":\"92#事务简介\",\"591\":\"92#rabbitmq-事务的主要操作包括\",\"592\":\"92#使用场景和性能考虑\",\"593\":\"92#替代方案\",\"594\":\"92#镜像队列集群通信\",\"595\":\"93\",\"596\":\"94\",\"597\":\"94#序列化的意义\",\"598\":\"95\",\"599\":\"95#_1-使用单一消费者模式\",\"600\":\"95#_2-发布订单到所有骑手-但仅允许第一个响应的骑手获得订单\",\"601\":\"95#实现细节\",\"602\":\"95#优化\",\"603\":\"95#乐观锁如何保证原子性\",\"604\":\"95#如何保证原子性\",\"605\":\"95#处理并发更新\",\"606\":\"95#总结\",\"607\":\"96\",\"608\":\"96#指定-nostdin选项\",\"609\":\"96#重定向输入\",\"610\":\"96#命令解释\",\"611\":\"96#ffmepg的日志分级\",\"612\":\"97\",\"613\":\"97#导读\",\"614\":\"98\",\"615\":\"98#导读\",\"616\":\"98#何为-xss\",\"617\":\"98#如何产生-xss\",\"618\":\"98#一个-xss-攻击的例子\",\"619\":\"98#监测xss漏洞\",\"620\":\"98#防范-xss-攻击\",\"621\":\"98#其它安全措施\",\"622\":\"98#参考\",\"623\":\"99\",\"624\":\"99#导读\",\"625\":\"99#什么是数字证书和数字签名\",\"626\":\"99#创建ca颁发数字证书\",\"627\":\"99#生成服务器私钥\",\"628\":\"99#生成服务器证书申请文件\",\"629\":\"99#使用ca证书签名服务器证书文件\",\"630\":\"99#自签名证书\",\"631\":\"99#其它命令\",\"632\":\"99#查看证书申请文件\",\"633\":\"99#指定证书请求文件中的签名算法\",\"634\":\"99#验证请求文件的数字签名-验证文件是否被篡改\",\"635\":\"100\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1],\"1\":[1,10],\"2\":[2,13],\"3\":[1,15],\"4\":[1,10],\"5\":[2],\"6\":[1],\"7\":[1],\"8\":[1,11],\"9\":[1,25],\"10\":[1,16],\"11\":[1],\"12\":[1],\"13\":[2],\"14\":[2],\"15\":[4],\"16\":[2],\"17\":[2],\"18\":[1],\"19\":[1,16],\"20\":[2,23],\"21\":[1,25],\"22\":[1,14],\"23\":[2],\"24\":[2,3],\"25\":[1],\"26\":[1],\"27\":[1],\"28\":[1],\"29\":[1,7],\"30\":[1,18],\"31\":[3],\"32\":[1],\"33\":[1],\"34\":[1],\"35\":[1],\"36\":[1],\"37\":[1,23],\"38\":[1,2],\"39\":[1,3],\"40\":[1],\"41\":[1],\"42\":[2],\"43\":[1],\"44\":[1,29],\"45\":[1],\"46\":[2,13],\"47\":[1,44],\"48\":[1,11],\"49\":[1],\"50\":[2],\"51\":[1,7],\"52\":[1],\"53\":[2],\"54\":[1],\"55\":[1],\"56\":[1],\"57\":[1],\"58\":[1],\"59\":[1],\"60\":[1],\"61\":[2,40],\"62\":[1],\"63\":[2],\"64\":[2,2],\"65\":[2],\"66\":[1],\"67\":[1],\"68\":[1],\"69\":[4],\"70\":[2],\"71\":[1],\"72\":[3],\"73\":[1,5],\"74\":[1,12],\"75\":[1],\"76\":[1,51],\"77\":[2],\"78\":[1],\"79\":[3,67],\"80\":[2,12],\"81\":[2],\"82\":[1],\"83\":[1],\"84\":[1],\"85\":[1],\"86\":[1],\"87\":[2],\"88\":[2],\"89\":[1],\"90\":[1],\"91\":[1],\"92\":[1],\"93\":[1],\"94\":[3],\"95\":[3],\"96\":[1],\"97\":[3],\"98\":[1],\"99\":[1,4],\"100\":[1,10],\"101\":[1],\"102\":[1],\"103\":[1],\"104\":[4,10],\"105\":[1],\"106\":[2],\"107\":[1],\"108\":[2],\"109\":[1],\"110\":[2],\"111\":[2],\"112\":[1,8],\"113\":[4,11],\"114\":[3,28],\"115\":[3],\"116\":[1],\"117\":[2],\"118\":[3,60],\"119\":[3],\"120\":[3],\"121\":[1],\"122\":[3],\"123\":[1],\"124\":[2],\"125\":[2],\"126\":[2],\"127\":[2],\"128\":[1],\"129\":[1],\"130\":[1],\"131\":[1],\"132\":[1],\"133\":[1],\"134\":[1],\"135\":[2],\"136\":[2],\"137\":[2],\"138\":[2],\"139\":[2],\"140\":[1],\"141\":[1,5],\"142\":[4,39],\"143\":[4,43],\"144\":[4,40],\"145\":[4,45],\"146\":[1],\"147\":[4],\"148\":[4],\"149\":[4],\"150\":[4],\"151\":[1],\"152\":[2],\"153\":[2],\"154\":[1],\"155\":[1,15],\"156\":[1,10],\"157\":[1],\"158\":[1],\"159\":[1,18],\"160\":[1],\"161\":[4],\"162\":[4],\"163\":[1],\"164\":[2],\"165\":[1,30],\"166\":[1,16],\"167\":[1,33],\"168\":[1],\"169\":[1],\"170\":[1,16],\"171\":[3],\"172\":[1],\"173\":[1],\"174\":[2],\"175\":[1],\"176\":[1,22],\"177\":[1],\"178\":[4],\"179\":[1],\"180\":[1],\"181\":[1],\"182\":[1],\"183\":[1],\"184\":[6],\"185\":[1],\"186\":[1],\"187\":[1],\"188\":[1],\"189\":[3],\"190\":[3,47],\"191\":[2,54],\"192\":[2],\"193\":[2,9],\"194\":[1,25],\"195\":[1],\"196\":[1],\"197\":[1],\"198\":[1],\"199\":[1],\"200\":[1],\"201\":[1],\"202\":[1],\"203\":[1],\"204\":[5],\"205\":[4],\"206\":[6],\"207\":[1],\"208\":[1],\"209\":[1,17],\"210\":[1],\"211\":[1],\"212\":[1],\"213\":[1],\"214\":[1],\"215\":[1],\"216\":[1],\"217\":[1,72],\"218\":[1],\"219\":[1,9],\"220\":[1],\"221\":[1,17],\"222\":[1,24],\"223\":[1],\"224\":[1],\"225\":[1,21],\"226\":[1],\"227\":[1,10],\"228\":[1,9],\"229\":[1,12],\"230\":[1,21],\"231\":[1,19],\"232\":[1,4],\"233\":[1,18],\"234\":[1],\"235\":[1],\"236\":[1],\"237\":[1],\"238\":[1],\"239\":[1,26],\"240\":[1],\"241\":[1],\"242\":[1],\"243\":[1,22],\"244\":[1,89],\"245\":[1,90],\"246\":[1],\"247\":[1],\"248\":[1],\"249\":[1],\"250\":[1],\"251\":[1,44],\"252\":[1],\"253\":[1],\"254\":[1],\"255\":[1],\"256\":[1],\"257\":[1],\"258\":[3],\"259\":[3,20],\"260\":[2,21],\"261\":[4],\"262\":[2],\"263\":[3],\"264\":[1,27],\"265\":[1],\"266\":[1,13],\"267\":[2],\"268\":[2],\"269\":[1],\"270\":[1],\"271\":[2,57],\"272\":[1,93],\"273\":[1],\"274\":[1,13],\"275\":[2],\"276\":[1],\"277\":[1],\"278\":[1],\"279\":[1],\"280\":[1],\"281\":[1],\"282\":[1],\"283\":[1],\"284\":[1],\"285\":[1],\"286\":[1],\"287\":[1],\"288\":[2],\"289\":[2],\"290\":[2],\"291\":[1],\"292\":[1],\"293\":[1],\"294\":[1,15],\"295\":[1,9],\"296\":[2,13],\"297\":[1,26],\"298\":[1,54],\"299\":[2,52],\"300\":[2,31],\"301\":[3,22],\"302\":[1,1],\"303\":[1,19],\"304\":[1,4],\"305\":[1,11],\"306\":[2,20],\"307\":[1,15],\"308\":[1,17],\"309\":[1,12],\"310\":[1,40],\"311\":[1,27],\"312\":[1,67],\"313\":[1,40],\"314\":[1,26],\"315\":[2,21],\"316\":[1,1],\"317\":[1,7],\"318\":[1,26],\"319\":[2,29],\"320\":[1],\"321\":[1],\"322\":[1,28],\"323\":[1],\"324\":[1],\"325\":[1],\"326\":[1],\"327\":[1],\"328\":[1],\"329\":[1],\"330\":[1],\"331\":[5],\"332\":[5],\"333\":[5],\"334\":[1,7],\"335\":[1,9],\"336\":[1],\"337\":[1],\"338\":[1],\"339\":[1],\"340\":[1],\"341\":[2],\"342\":[2],\"343\":[2],\"344\":[3],\"345\":[2],\"346\":[2],\"347\":[2],\"348\":[2],\"349\":[2],\"350\":[2],\"351\":[3],\"352\":[3],\"353\":[3],\"354\":[1],\"355\":[1],\"356\":[1],\"357\":[5,6],\"358\":[1],\"359\":[1],\"360\":[1],\"361\":[6,9],\"362\":[1],\"363\":[1,8],\"364\":[1,19],\"365\":[1,4],\"366\":[2,48],\"367\":[2],\"368\":[2,53],\"369\":[2],\"370\":[1],\"371\":[1],\"372\":[1],\"373\":[1],\"374\":[1,13],\"375\":[1,18],\"376\":[1,21],\"377\":[1],\"378\":[1],\"379\":[1],\"380\":[1,27],\"381\":[1,31],\"382\":[5],\"383\":[3],\"384\":[1],\"385\":[3],\"386\":[1,14],\"387\":[2,11],\"388\":[1,23],\"389\":[2],\"390\":[1],\"391\":[1],\"392\":[1,11],\"393\":[1,47],\"394\":[1],\"395\":[4],\"396\":[2],\"397\":[5],\"398\":[4],\"399\":[2],\"400\":[1],\"401\":[2],\"402\":[5],\"403\":[5],\"404\":[2],\"405\":[2],\"406\":[1],\"407\":[1],\"408\":[1,2],\"409\":[1,9],\"410\":[1],\"411\":[1],\"412\":[1],\"413\":[1,10],\"414\":[4,10],\"415\":[3],\"416\":[1],\"417\":[1,12],\"418\":[4,43],\"419\":[1,11],\"420\":[1,4],\"421\":[1],\"422\":[1,6],\"423\":[6,23],\"424\":[5,21],\"425\":[8,17],\"426\":[1],\"427\":[1,10],\"428\":[3,12],\"429\":[4,13],\"430\":[1,10],\"431\":[1,14],\"432\":[2,7],\"433\":[1,15],\"434\":[2,12],\"435\":[2,13],\"436\":[2,8],\"437\":[2,5],\"438\":[1,19],\"439\":[1,7],\"440\":[1],\"441\":[1],\"442\":[1],\"443\":[1],\"444\":[1],\"445\":[1],\"446\":[1],\"447\":[2],\"448\":[2],\"449\":[2],\"450\":[2],\"451\":[2],\"452\":[1],\"453\":[3],\"454\":[1],\"455\":[1,7],\"456\":[1,17],\"457\":[1,7],\"458\":[1,30],\"459\":[1,11],\"460\":[2,25],\"461\":[2,15],\"462\":[2,21],\"463\":[4,16],\"464\":[2,27],\"465\":[1,14],\"466\":[1,17],\"467\":[1,19],\"468\":[2,34],\"469\":[1,15],\"470\":[1,45],\"471\":[1,17],\"472\":[1,10],\"473\":[4,8],\"474\":[2,6],\"475\":[2,13],\"476\":[1,36],\"477\":[2,9],\"478\":[3,7],\"479\":[2,30],\"480\":[4,29],\"481\":[1,5],\"482\":[2,12],\"483\":[2,29],\"484\":[2,24],\"485\":[2,33],\"486\":[2,12],\"487\":[1,12],\"488\":[null,null,1],\"489\":[null,null,1],\"490\":[1,4],\"491\":[3,14],\"492\":[3,21],\"493\":[3],\"494\":[1],\"495\":[2,11],\"496\":[1,19],\"497\":[1],\"498\":[1],\"499\":[1],\"500\":[1,37],\"501\":[1],\"502\":[1],\"503\":[1],\"504\":[1],\"505\":[1,38],\"506\":[1,6],\"507\":[2,10],\"508\":[2,16],\"509\":[3,16],\"510\":[1],\"511\":[6,11],\"512\":[1,25],\"513\":[1],\"514\":[1,9],\"515\":[1],\"516\":[1],\"517\":[2],\"518\":[1],\"519\":[1],\"520\":[1],\"521\":[1],\"522\":[1],\"523\":[2],\"524\":[6],\"525\":[3],\"526\":[1],\"527\":[1],\"528\":[1,10],\"529\":[1],\"530\":[1],\"531\":[1],\"532\":[2],\"533\":[1],\"534\":[1,41],\"535\":[2,7],\"536\":[3],\"537\":[2],\"538\":[2],\"539\":[2],\"540\":[3],\"541\":[3],\"542\":[2],\"543\":[2],\"544\":[4],\"545\":[2],\"546\":[2],\"547\":[3],\"548\":[3],\"549\":[3],\"550\":[2],\"551\":[2],\"552\":[3,3],\"553\":[2,4],\"554\":[2,2],\"555\":[2,4],\"556\":[4,5],\"557\":[2,7],\"558\":[6,7],\"559\":[2,10],\"560\":[2,10],\"561\":[2],\"562\":[1,3],\"563\":[3,21],\"564\":[2],\"565\":[1],\"566\":[1],\"567\":[1,12],\"568\":[1],\"569\":[3],\"570\":[1,12],\"571\":[2,16],\"572\":[2,21],\"573\":[2,17],\"574\":[2,19],\"575\":[2,10],\"576\":[1,49],\"577\":[1,39],\"578\":[1],\"579\":[1],\"580\":[3,17],\"581\":[2,28],\"582\":[1,41],\"583\":[1,9],\"584\":[1,18],\"585\":[1,33],\"586\":[1,17],\"587\":[1,13],\"588\":[1],\"589\":[1,37],\"590\":[1],\"591\":[3],\"592\":[2],\"593\":[2],\"594\":[1],\"595\":[1,6],\"596\":[1],\"597\":[1,19],\"598\":[1,9],\"599\":[2,6],\"600\":[3,23],\"601\":[2,20],\"602\":[2],\"603\":[1],\"604\":[1],\"605\":[1],\"606\":[1],\"607\":[1,7],\"608\":[2,23],\"609\":[1,27],\"610\":[1],\"611\":[1],\"612\":[1],\"613\":[1,5],\"614\":[1],\"615\":[1,5],\"616\":[3,11],\"617\":[2,11],\"618\":[3,16],\"619\":[1],\"620\":[3],\"621\":[1],\"622\":[1],\"623\":[1],\"624\":[1,4],\"625\":[1,7],\"626\":[1,16],\"627\":[1],\"628\":[1],\"629\":[1],\"630\":[1],\"631\":[1],\"632\":[1],\"633\":[1],\"634\":[3],\"635\":[1,3]},\"averageFieldLength\":[1.6356003196205788,17.52677228328472,0.004081632653061225],\"storedFields\":{\"0\":{\"h\":\"Home\"},\"1\":{\"h\":\"rabbitmq事务基本介绍和go的使用示例\",\"t\":[\"RabbitMQ 提供了基本的事务机制，允许生产者保证消息的发布过程中的原子性。这意味着你可以在发送消息之前开始一个事务，然后发送多条消息，并在最后提交这个事务。如果在事务中的任何点发生错误，你可以回滚事务，这样就好像这些消息从未被发送过一样。\"]},\"2\":{\"h\":\"RabbitMQ 事务的基本操作\",\"t\":[\"RabbitMQ 事务机制包含三个基本操作：\",\"txSelect：用于将当前channel（通道）标记为事务模式。\",\"txCommit：用于提交事务，确保所有在事务内发送的消息都被确认。\",\"txRollback：用于回滚事务，取消事务内进行的所有消息发送。\"]},\"3\":{\"h\":\"使用事务的步骤\",\"t\":[\"开启事务：首先，通过调用txSelect方法在一个channel上开启事务。\",\"发送消息：在事务模式下，你可以发送一条或多条消息到队列。\",\"提交或回滚：如果消息成功发送，你可以通过调用txCommit提交事务，这时消息会被实际发送到队列中。如果在发送消息时遇到任何问题，或者你出于某种原因需要取消发送的消息，可以调用txRollback来回滚事务，这样事务中的所有消息发送操作都会被取消。\"]},\"4\":{\"h\":\"事务的性能影响\",\"t\":[\"虽然事务提供了一种保证消息发送原子性的方法，但是它也有一定的性能影响。每次事务提交时，RabbitMQ 都需要将事务中的所有消息写入磁盘，这会导致相比非事务发送操作有较大的延迟。因此，如果你追求高吞吐量，使用事务可能不是最佳选择。\"]},\"5\":{\"h\":\"替代方案：确认模式\"},\"6\":{\"h\":\"总结\"},\"7\":{\"h\":\"Go使用RabbitMq的例子\"},\"8\":{\"h\":\"rabbitmq的使用场景\",\"t\":[\"RabbitMQ 是一个开源的消息队列系统，它遵循AMQP（高级消息队列协议）标准。RabbitMQ能够解决多种在应用程序和系统之间异步通信、系统解耦、负载均衡和分布式系统中的消息传递等问题。具体而言，RabbitMQ的功能和解决的问题包括：\"]},\"9\":{\"h\":\"功能\",\"t\":[\"异步处理：允许应用将耗时的任务委托给后台进程异步处理，从而响应用户请求更快。\",\"系统解耦：各个微服务或系统组件可以通过消息队列进行通信，而不是直接调用，减少了系统间的耦合。\",\"负载均衡：通过消息队列分配任务给多个工作节点，可以平衡负载，提高系统处理能力。\",\"消息持久化：支持将消息存储到磁盘，确保即使在系统故障的情况下也不会丢失消息。\",\"事务支持：提供了消息的事务机制，可以保证消息的安全可靠传输。\",\"多种消息模式：支持点对点、发布/订阅等多种消息通信模式。\",\"高可用和集群：支持部署为高可用性和集群模式，提高系统的可靠性和可用性。\"]},\"10\":{\"h\":\"使用场景\",\"t\":[\"异步处理任务：如发送电子邮件、生成报表、数据处理等耗时操作。\",\"应用解耦：在微服务架构中，通过消息队列来解耦各个服务之间的直接依赖。\",\"流量削峰：在高流量事件中，如秒杀活动，使用消息队列缓冲请求，避免系统过载。\",\"分布式事务管理：用于处理跨多个服务的操作，确保数据一致性。\"]},\"11\":{\"h\":\"数据一致性保证\"},\"12\":{\"h\":\"rabbitmq可用于设计分布式系统的一致性\"},\"13\":{\"h\":\"1. 使用事务消息\"},\"14\":{\"h\":\"2. 最终一致性模型\"},\"15\":{\"h\":\"3. 补偿事务（Saga模式）\"},\"16\":{\"h\":\"4. 确认和重试机制\"},\"17\":{\"h\":\"5. 幂等性设计\"},\"18\":{\"h\":\"结论\"},\"19\":{\"h\":\"redis单线程的一点理解\",\"t\":[\"Redis 的单线程模型是一个关键的特性，对于理解它的性能和行为至关重要。这里的“单线程”是指 Redis 的主要操作（如读取、写入、处理命令）是在单个线程中顺序执行的。不过，这并不意味着 Redis 不能处理并发连接或请求。让我们详细解释一下：\"]},\"20\":{\"h\":\"Redis 的单线程模型\",\"t\":[\"主操作在单线程中执行：\",\"Redis 的大部分操作，包括对数据的读取和写入，都是在单个线程中执行的。这意味着在任何给定时刻，只有一个操作在被处理。\",\"这种设计简化了数据处理，因为它避免了常见的多线程问题，如数据竞争和锁。\",\"高效的数据结构和算法：\",\"Redis 能够高效运行的关键在于其使用的数据结构和算法非常高效，这使得即使在单线程模型下，它也能提供极高的性能。\",\"I/O 多路复用：\",\"尽管数据操作是在单线程中进行的，Redis 使用 I/O 多路复用技术来同时处理多个网络连接。这意味着 Redis 能够在非阻塞模式下监听和接收来自多个客户端的请求。\"]},\"21\":{\"h\":\"并发连接和请求处理\",\"t\":[\"处理多个连接：\",\"Redis 能够同时接受和管理多个客户端连接。这是通过使用如 epoll 或 kqueue 这样的机制来实现的，这些机制允许 Redis 的单个线程有效地监控多个网络连接。\",\"请求的顺序执行：\",\"当这些请求到达时，它们会被放入队列中，并由 Redis 的单个线程按顺序处理。由于 Redis 操作通常非常快，大多数情况下客户端不会注意到任何延迟。\",\"资源抢占问题：\",\"在 Redis 中，通常不会出现资源抢占问题，因为所有操作都是由单个线程顺序执行的。这消除了传统多线程应用中的锁和竞争条件问题。\"]},\"22\":{\"h\":\"总结\",\"t\":[\"Redis 的单线程模型并不妨碍它处理高并发连接和请求。通过有效地使用 I/O 多路复用和高效的内部数据结构，Redis 能够以极高的性能处理大量请求。这使得 Redis 成为处理读取密集型和写入密集型应用的理想选择，尤其是在响应时间对于应用至关重要时。然而，对于长时间运行的计算密集型任务，Redis 的单线程模型可能不是最优选择。\"]},\"23\":{\"h\":\"C/C++编译过程\"},\"24\":{\"h\":\"预处理/预编译\",\"t\":[\"对目标代码进行文本处理和翻译，包括：\"]},\"25\":{\"h\":\"编译\"},\"26\":{\"h\":\"汇编\"},\"27\":{\"h\":\"链接\"},\"28\":{\"h\":\"g++相关命令\"},\"29\":{\"h\":\"C内存分配\",\"t\":[\"C 内存分配主要有 malloc、calloc、realoc 三个函数，以下简要介绍\"]},\"30\":{\"h\":\"内存分区\",\"t\":[\"内存里主要有几个划分，用一张表格表示\",\"内存分区\",\"内容\",\"权限\",\"栈区\",\"函数中的普通变量\",\"可读可写\",\"堆区\",\"动态申请的内存\",\"可读可写\",\"静态变量区\",\"static 修饰的变量\",\"可读可写\",\"数据区\",\"用于初始化变量的常量\",\"只读\",\"代码区\",\"代码指令\"]},\"31\":{\"h\":\"malloc、calloc、realoc\"},\"32\":{\"h\":\"malloc\"},\"33\":{\"h\":\"calloc\"},\"34\":{\"h\":\"realoc\"},\"35\":{\"h\":\"总结\"},\"36\":{\"h\":\"C语言常用类型占用大小\"},\"37\":{\"h\":\"int\",\"t\":[\"现代操作系统中，int一般占用4个字节(Byte), 共32位。若不考虑正负数， 当所有的位都为 1 时它的值最大，为 232-1 = 4,294,967,295 ≈ 43亿。 int建议为一个机器字长，32位机器字长为4字节，64位机器字长为8字节 16位环境下,int为2字节。\"]},\"38\":{\"h\":\"short\",\"t\":[\"短整型，占用2个字节\"]},\"39\":{\"h\":\"long\",\"t\":[\"长整型，16位和32位为4字节。\"]},\"40\":{\"h\":\"char\"},\"41\":{\"h\":\"64位环境占用字节情况\"},\"42\":{\"h\":\"获取某数据类型长度：\"},\"43\":{\"h\":\"memset替换字符串的注意点\"},\"44\":{\"h\":\"字符串只读\",\"t\":[\"memset 原型 void * memset( void * ptr, int value, size_t num )\",\"其中 size_t 即是 unsigned int\",\"参数说明 ptr 为要操作的内存的指针。 value 为要设置的值。你既可以向 value 传递 int 类型的值，也可以传递 char 类型的值，因为 int 和 char 可以根据 ASCII 码相互转换。 num 为 ptr 的前 num 个字节。\"]},\"45\":{\"h\":\"小程序支付资料\"},\"46\":{\"h\":\"css filter的基本使用\",\"t\":[\"CSS中的filter属性是一个强大且灵活的工具，允许您对元素（如图片、背景、边框等）应用图形效果，例如模糊、亮度调整、色彩饱和度调整、对比度调整、阴影和更多。这一属性为网页设计师提供了一种在不使用图像编辑软件的情况下直接通过CSS代码对元素进行视觉效果调整的方法。\"]},\"47\":{\"h\":\"基本语法\",\"t\":[\"selector { filter: none | <filter-function> [<filter-function>]*; } \",\"其中<filter-function>可以是以下几种：\",\"blur(radius)：应用模糊效果，radius定义模糊的程度。\",\"brightness(%)：调整元素的亮度。\",\"contrast(%)：调整元素的对比度。\",\"drop-shadow(h-shadow v-shadow blur spread color)：给元素添加阴影效果。\",\"grayscale(%)：将元素转换成灰度图像，0%表示无变化，而100%则是完全的灰色。\",\"hue-rotate(angle)：给图像应用色相旋转效果，angle定义旋转的角度。\",\"invert(%)：反转元素的颜色。\",\"opacity(%)：调整元素的透明度。\",\"saturate(%)：调整元素的饱和度。\",\"sepia(%)：将元素转换为深褐色，模仿老照片的风格。\"]},\"48\":{\"h\":\"示例\",\"t\":[\"img { filter: grayscale(100%); } \",\"这个例子会将所有img元素转换为灰度图像。\",\"div { filter: blur(5px) contrast(200%); } \"]},\"49\":{\"h\":\"注意事项\"},\"50\":{\"h\":\"docker redis集群\"},\"51\":{\"h\":\"创建网络\",\"t\":[\"docker network create redis-cluster-net \"]},\"52\":{\"h\":\"启动redis\"},\"53\":{\"h\":\"创建由3个redis master节点构成的集群\"},\"54\":{\"h\":\"连接集群查看集群状态\"},\"55\":{\"h\":\"crc16简介\"},\"56\":{\"h\":\"使用golang连接\"},\"57\":{\"h\":\"docker中启动\"},\"58\":{\"h\":\"dockerfile\"},\"59\":{\"h\":\"构建dockerfile\"},\"60\":{\"h\":\"启动go服务\"},\"61\":{\"h\":\"ENG-part1\",\"t\":[\"You exceeded[超出 v] your current quota\",\"insufficient[不足的 adj] quota[指标 配额 n]\",\"returning a string containing the data up to and including the delimiter\",\"“returning”是一个动名词，作为名词使用。它是句子的主语。\",\"“a string containing the data”是“returning”的直接宾语。\",\"“up to and including the delimiter”是一个介词短语，用来修饰“containing”。它描述了字符串包含数据的范围。\\n“up to”常用来表示一个限制或边界。这里，它指定了字符串内容从数据的开始一直延伸到某个点，这个点由“delimiter”定义。加上“and including”进一步明确了delimiter本身也是被返回字符串的一部分。\"]},\"62\":{\"h\":\"数学累加\"},\"63\":{\"h\":\"简单的go dockerfile\"},\"64\":{\"h\":\"NPM Workspaces简介\",\"t\":[\"npm在2020年10月发布的版本开始支持一个新功能：Workspaces\"]},\"65\":{\"h\":\"Workspaces是什么？\"},\"66\":{\"h\":\"举例说明\"},\"67\":{\"h\":\"配置和使用\"},\"68\":{\"h\":\"其它用法\"},\"69\":{\"h\":\"npm 工作区 与 Yarn 工作区\"},\"70\":{\"h\":\"使用 Lerna\"},\"71\":{\"h\":\"参考\"},\"72\":{\"h\":\"Git Submodule 简单使用\"},\"73\":{\"h\":\"导读\",\"t\":[\"URL由多部分构成，不同的语言解析URL函数得到的名称并不完全相同，恰巧在网上看到一篇不错关于URL组成的图形化描述，在此记录。\"]},\"74\":{\"h\":\"URL组成\",\"t\":[\"\\\"https://bob:bobby@www.lunatech.com:8080/file;p=1?q=2#third\\\" \"]},\"75\":{\"h\":\"参考\"},\"76\":{\"h\":\"csp\",\"t\":[\"在HTML的标签中设置Content-Security-Policy（内容安全策略）作为http-equiv的值，这实际上是一种在页面级别应用内容安全策略的方法。这样做可以让你定义哪些类型的资源（如脚本、图片、CSS文件等）可以被加载，以及它们可以从哪里加载。这是提高网站安全性的一个重要手段，可以帮助防止跨站脚本（XSS）攻击和其他安全威胁。\",\"通过标签设置CSP不会改变服务器的HTTP响应头部，但会让浏览器在处理页面时应用CSP规则。这是一种在客户端实施安全策略的方式，尤其适用于无法直接控制服务器响应头的情况。然而，通过HTTP响应头直接设置CSP通常被认为是更优的做法，因为它可以覆盖更广泛的场景，并且有些CSP功能（如违规报告）只能通过HTTP响应头来实现。\",\" add_header Content-Security-Policy \\\"default-src 'self'; img-src *; script-src 'self' https://trustedscripts.example1.com; style-src 'self';\\\"; \",\" # 静态文件服务 location / { root /usr/share/nginx/html; index index.html index.htm; add_header Content-Security-Policy \\\"default-src 'self'; img-src *; script-src 'self' https://trustedscripts.example.com; style-src 'self';\\\"; } \"]},\"77\":{\"h\":\"webpack chunk\"},\"78\":{\"h\":\"动态查找入口文件\"},\"79\":{\"h\":\"动态查找以 开头的 文件\",\"t\":[\"要查找 src 目录及其子目录下所有以 index 开头的 .js 文件，我们需要递归地遍历目录。这里是一个使用 Node.js 脚本来实现这个需求的示例：\",\"const fs = require('fs'); const path = require('path'); // 递归地查找文件 function findFiles(directory, pattern) { let results = []; const files = fs.readdirSync(directory, { withFileTypes: true }); files.forEach((dirent) => { const fullPath = path.join(directory, dirent.name); if (dirent.isDirectory()) { results = [...results, ...findFiles(fullPath, pattern)]; // 递归查找 } else if (pattern.test(dirent.name)) { results.push(fullPath); } }); return results; } // 定义入口目录和匹配模式 const srcDirectory = path.resolve(__dirname, 'src'); const pattern = /^index.*\\\\.js$/; // 匹配以 'index' 开头的 .js 文件 // 动态构建入口对象 const entryFiles = findFiles(srcDirectory, pattern); const entry = entryFiles.reduce((entries, file) => { const name = file.replace(srcDirectory, '').replace(/^\\\\/+/, '').replace(/\\\\.js$/, ''); entries[name] = file; return entries; }, {}); // Webpack 配置 const webpackConfig = { entry: entry, output: { filename: '[name].bundle.js', path: path.resolve(__dirname, 'dist'), }, // 其他配置... }; \",\"这段代码会递归地查找所有符合模式的文件，并为它们每一个构建一个入口。\"]},\"80\":{\"h\":\"默认的入口文件 输出为\",\"t\":[\"当你没有在 webpack 配置中明确指定输出文件的名称时，webpack 使用默认的输出配置。在很多情况下，如果你的入口点是单一的且未指定输出文件名，webpack 会将这个入口点的输出文件命名为 main.js。这是因为 webpack 的默认入口键名是 main。\"]},\"81\":{\"h\":\"chunk bundle的区别\"},\"82\":{\"h\":\"Chunk\"},\"83\":{\"h\":\"Bundle\"},\"84\":{\"h\":\"区别\"},\"85\":{\"h\":\"为什么这个区别重要\"},\"86\":{\"h\":\"chunks的几个值\"},\"87\":{\"h\":\"的具体含义：\"},\"88\":{\"h\":\"commons chunk解析\"},\"89\":{\"h\":\"\"},\"90\":{\"h\":\"\"},\"91\":{\"h\":\"\"},\"92\":{\"h\":\"\"},\"93\":{\"h\":\"总结\"},\"94\":{\"h\":\"使用 分析 bundle\"},\"95\":{\"h\":\"示例 配置：\"},\"96\":{\"h\":\"结论\"},\"97\":{\"h\":\"webpack.conf.js示例\"},\"98\":{\"h\":\"Git子模块简单使用\"},\"99\":{\"h\":\"导读\",\"t\":[\"有时候我们需要在一个项目中依赖一个更新中的公共库，或者在一个大型仓库中给不同的开发人员分配各自独立的仓库，这个时候Git的子模块就很有用了。\"]},\"100\":{\"h\":\"添加一个子模块\",\"t\":[\"我们假设你已经创建了一个远端仓库greet.git 那么可以添加这个仓库到主项目，使之成为一个子模块：\",\"git submodule add <remote_url> <path> \"]},\"101\":{\"h\":\"初始化和拉取子模块更新\"},\"102\":{\"h\":\"批量操作所有子模块\"},\"103\":{\"h\":\"gitlab和runner如何配置\"},\"104\":{\"h\":\"gitlab 和 gitlab-runner 简介\",\"t\":[\"GitLab 和 GitLab Runner 是 GitLab CI/CD（持续集成/持续交付）平台中的两个关键组件。\"]},\"105\":{\"h\":\"GitLab\"},\"106\":{\"h\":\"Gitlab Runner\"},\"107\":{\"h\":\"搭建Gitlab\"},\"108\":{\"h\":\"使用docker run运行Gitlab\"},\"109\":{\"h\":\"配置Gitlab\"},\"110\":{\"h\":\"使用docker-compose启动Gitlab\"},\"111\":{\"h\":\"搭建Gitlab-Runner\"},\"112\":{\"h\":\"git子模块基本使用\",\"t\":[\"通过使用Git的子模块（submodule）功能来管理这种结构。子模块允许在一个Git仓库中包含并管理指向其他Git仓库的引用。base仓库可以包含两个子模块：project1和project2。\",\"以下是具体步骤：\"]},\"113\":{\"h\":\"1. 创建并推送 和 到GitHub\",\"t\":[\"首先确保project1和project2各自已经是独立的Git仓库，并且已经推送到GitHub上。比如，您可能已经有了两个仓库的URL：\",\"https://github.com/yourusername/project1.git\",\"https://github.com/yourusername/project2.git\"]},\"114\":{\"h\":\"2. 在 仓库中添加子模块\",\"t\":[\"在您的本地base仓库中，您可以使用以下命令添加子模块：\",\"# 切换到base仓库的目录 cd path/to/base # 为project1添加子模块 git submodule add https://github.com/yourusername/project1.git project1 # 为project2添加子模块 git submodule add https://github.com/yourusername/project2.git project2 # 提交更改 git commit -m \\\"Added project1 and project2 as submodules.\\\" # 推送到GitHub git push \"]},\"115\":{\"h\":\"3. 克隆 仓库及其子模块\"},\"116\":{\"h\":\"注意事项\"},\"117\":{\"h\":\"GO GRPC自定义注册和解析\"},\"118\":{\"h\":\"实现自定义注册逻辑(ETCD版)\",\"t\":[\"实现自定义注册逻辑相对自由，没有接口实现的限制：\",\"package registrar import ( \\\"context\\\" \\\"fmt\\\" \\\"log\\\" \\\"time\\\" clientv3 \\\"go.etcd.io/etcd/client/v3\\\" ) type EtcdRegistrar struct { client *clientv3.Client leaseId clientv3.LeaseID } func NewEtcdRegistrar(endpoints []string) *EtcdRegistrar { cli, err := clientv3.New(clientv3.Config{ Endpoints: endpoints, DialTimeout: 5 * time.Second, }) if err != nil { log.Fatalf(\\\"Failed to connect to etcd: %v\\\", err) } return &EtcdRegistrar{ client: cli, } } // 往etcd注册服务名-地址 func (r *EtcdRegistrar) Register(serviceName string, addr string, ttl int64) error { leaseResp, err := r.client.Grant(context.Background(), ttl) if err != nil { return err } r.leaseId = leaseResp.ID _, err = r.client.Put(context.Background(), fmt.Sprintf(\\\"/%s/%s\\\", serviceName, addr), addr, clientv3.WithLease(r.leaseId)) return err } \"]},\"119\":{\"h\":\"实现自定义解析器(Resolver)\"},\"120\":{\"h\":\"1. 实现 接口\"},\"121\":{\"h\":\"接口签名\"},\"122\":{\"h\":\"2. 实现 接口\"},\"123\":{\"h\":\"接口签名\"},\"124\":{\"h\":\"3. 注册自定义\"},\"125\":{\"h\":\"详细叙述每一步的意义：\"},\"126\":{\"h\":\"实现 接口\"},\"127\":{\"h\":\"实现 接口\"},\"128\":{\"h\":\"注册自定义\"},\"129\":{\"h\":\"代码示例\"},\"130\":{\"h\":\"的作用\"},\"131\":{\"h\":\"接口的作用\"},\"132\":{\"h\":\"注释的含义\"},\"133\":{\"h\":\"为什么用回调函数\"},\"134\":{\"h\":\"解析器为什么不设计成实现一个接口\"},\"135\":{\"h\":\"1. 分离构建与解析逻辑\"},\"136\":{\"h\":\"2. 提高扩展性和灵活性\"},\"137\":{\"h\":\"3. 降低复杂性和提高可维护性\"},\"138\":{\"h\":\"4. 适应不同的使用场景\"},\"139\":{\"h\":\"5. 符合设计模式的最佳实践\"},\"140\":{\"h\":\"GO实现主要排序算法\"},\"141\":{\"h\":\"排序算法介绍和示例\",\"t\":[\"以下是对冒泡排序、选择排序、插入排序和快速排序的简要介绍，并附带使用Go语言实现的代码示例：\"]},\"142\":{\"h\":\"冒泡排序（Bubble Sort）：\",\"t\":[\"冒泡排序是一种简单的排序算法，它重复地遍历要排序的数列，一次比较两个元素，如果它们的顺序错误就把它们交换过来。\",\"Go语言实现：\",\"package main import \\\"fmt\\\" func bubbleSort(arr []int) { n := len(arr) for i := 0; i < n-1; i++ { for j := 0; j < n-i-1; j++ { if arr[j] > arr[j+1] { arr[j], arr[j+1] = arr[j+1], arr[j] } } } } func main() { arr := []int{64, 34, 25, 12, 22, 11, 90} fmt.Println(\\\"Unsorted array:\\\", arr) bubbleSort(arr) fmt.Println(\\\"Sorted array:\\\", arr) } \"]},\"143\":{\"h\":\"选择排序（Selection Sort）：\",\"t\":[\"选择排序是一种简单直观的排序算法。它的工作原理是每一次从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，然后再从剩余的未排序元素中寻找最小（或最大）的元素，然后放到已排序序列的末尾。\",\"Go语言实现：\",\"package main import \\\"fmt\\\" func selectionSort(arr []int) { n := len(arr) for i := 0; i < n-1; i++ { minIndex := i for j := i + 1; j < n; j++ { if arr[j] < arr[minIndex] { minIndex = j } } arr[i], arr[minIndex] = arr[minIndex], arr[i] } } func main() { arr := []int{64, 34, 25, 12, 22, 11, 90} fmt.Println(\\\"Unsorted array:\\\", arr) selectionSort(arr) fmt.Println(\\\"Sorted array:\\\", arr) } \"]},\"144\":{\"h\":\"插入排序（Insertion Sort）：\",\"t\":[\"插入排序是一种简单直观的排序算法。它的工作原理是构建有序序列，对于未排序数据，在已排序序列中从后向前扫描，找到相应位置并插入。\",\"Go语言实现：\",\"package main import \\\"fmt\\\" func insertionSort(arr []int) { n := len(arr) for i := 1; i < n; i++ { key := arr[i] j := i - 1 for j >= 0 && arr[j] > key { arr[j+1] = arr[j] j = j - 1 } arr[j+1] = key } } func main() { arr := []int{64, 34, 25, 12, 22, 11, 90} fmt.Println(\\\"Unsorted array:\\\", arr) insertionSort(arr) fmt.Println(\\\"Sorted array:\\\", arr) } \"]},\"145\":{\"h\":\"快速排序（Quick Sort）：\",\"t\":[\"快速排序是一种分治思想的排序算法。它的基本思想是通过一趟排序将要排序的数据分割成独立的两部分，其中一部分的所有元素都比另外一部分的所有元素都小，然后再按此方法对这两部分数据分别进行快速排序。\",\"Go语言实现：\",\"package main import \\\"fmt\\\" func quickSort(arr []int, low, high int) { if low < high { pi := partition(arr, low, high) quickSort(arr, low, pi-1) quickSort(arr, pi+1, high) } } func partition(arr []int, low, high int) int { pivot := arr[high] i := low - 1 for j := low; j < high; j++ { if arr[j] < pivot { i++ arr[i], arr[j] = arr[j], arr[i] } } arr[i+1], arr[high] = arr[high], arr[i+1] return i + 1 } func main() { arr := []int{64, 34, 25, 12, 22, 11, 90} fmt.Println(\\\"Unsorted array:\\\", arr) quickSort(arr, 0, len(arr)-1) fmt.Println(\\\"Sorted array:\\\", arr) } \"]},\"146\":{\"h\":\"时间复杂度\"},\"147\":{\"h\":\"冒泡排序（Bubble Sort）：\"},\"148\":{\"h\":\"选择排序（Selection Sort）：\"},\"149\":{\"h\":\"插入排序（Insertion Sort）：\"},\"150\":{\"h\":\"快速排序（Quick Sort）：\"},\"151\":{\"h\":\"快速排序和归并排序\"},\"152\":{\"h\":\"区别：\"},\"153\":{\"h\":\"性能比较：\"},\"154\":{\"h\":\"归并排序示例\"},\"155\":{\"h\":\"GO常量忽略的用法作用\",\"t\":[\"在 Go 语言中，这种写法 const _ = grpc.SupportPackageIsVersion7 通常用于确保正在使用的 gRPC 库的特定版本。这是一种编程模式，用于版本兼容性检查，确保编译器在编译时能够验证代码依赖的库版本。\"]},\"156\":{\"h\":\"解释\",\"t\":[\"const _：这是一个匿名常量，_ 在 Go 中被用作空白标识符。它用于忽略值或变量。在这种情况下，它被用来声明一个常量，但不将其赋给任何命名变量。\"]},\"157\":{\"h\":\"用途\"},\"158\":{\"h\":\"结论\"},\"159\":{\"h\":\"Go结构体初始化的几种方式\",\"t\":[\"在Go语言（又称Golang）中，初始化结构体的方式多样，以下是一些常用的方法：\",\"使用类型字面量：\",\"type MyStruct struct { Field1 int Field2 string } // 初始化一个结构体实例，字段使用零值 var s1 MyStruct \"]},\"160\":{\"h\":\"CPU的工作模式\"},\"161\":{\"h\":\"内核空间（Kernel Space）\"},\"162\":{\"h\":\"用户空间（User Space）\"},\"163\":{\"h\":\"为什么有这个概念\"},\"164\":{\"h\":\"etcd go的基本操作\"},\"165\":{\"h\":\"New\",\"t\":[\"package main import ( \\\"context\\\" \\\"log\\\" \\\"time\\\" clientv3 \\\"go.etcd.io/etcd/client/v3\\\" ) cli, err := clientv3.New(clientv3.Config{ Endpoints: []string{\\\"localhost:2379\\\"}, DialTimeout: 5 * time.Second, }) if err != nil { log.Fatal(err) } defer cli.Close() \"]},\"166\":{\"h\":\"存储\",\"t\":[\" // 存储 _, err = cli.Put(context.Background(), \\\"/temp-etcd-k\\\", \\\"temp-etcd-v\\\") if err != nil { log.Fatal(err) } \"]},\"167\":{\"h\":\"获取\",\"t\":[\" ctx, cancel := context.WithTimeout(context.Background(), 5*time.Second) defer cancel() // resp, err := cli.Get(ctx, \\\"/temp-etcd-k\\\") if err != nil { log.Fatal(err) } // 获取k,v的值 for _, ev := range resp.Kvs { log.Printf(\\\"%s: %s\\\\n\\\", ev.Key, ev.Value) } \"]},\"168\":{\"h\":\"watch\"},\"169\":{\"h\":\"etcd分布式锁\"},\"170\":{\"h\":\"实现分布式锁需要注意的事项\",\"t\":[\"锁的独占性： 确保任何时候只有一个客户端可以持有锁。\",\"死锁的预防： 如果持有锁的进程崩溃或失去连接，需要有机制释放锁，防止死锁。\",\"锁的可靠性： 确保在网络分区或节点故障的情况下，锁的行为是可预测和正确的。\",\"锁的公平性： 确保锁的分配是公平的，避免某些进程长时间无法获取锁。\",\"性能和可伸缩性： 锁服务应当能够高效处理请求，且能随着系统扩展而伸缩。\"]},\"171\":{\"h\":\"使用 etcd 实现分布式锁的步骤\"},\"172\":{\"h\":\"使用示例\"},\"173\":{\"h\":\"运行结果\"},\"174\":{\"h\":\"go etcd和redis的使用场景\"},\"175\":{\"h\":\"ETCD和Redis的特点\"},\"176\":{\"h\":\"etcd\",\"t\":[\"设计目标和特性：\",\"etcd 是一个分布式、可靠的键值存储，主要用于共享配置和服务发现。\",\"它是为分布式系统的关键值数据设计的，强调一致性（基于 Raft 算法）。\",\"支持事务、租约、监视变化、时间点查询等。\",\"提供强一致性保证和较高的可用性。\",\"通常不作为高性能数据缓存使用。\",\"适用场景：\",\"分布式系统的配置管理。\",\"服务发现。\",\"分布式锁、领导选举。\"]},\"177\":{\"h\":\"Redis\"},\"178\":{\"h\":\"选择 etcd 还是 Redis\"},\"179\":{\"h\":\"强一致性和最终一致性\"},\"180\":{\"h\":\"强一致性\"},\"181\":{\"h\":\"最终一致性\"},\"182\":{\"h\":\"ETCD的持久化\"},\"183\":{\"h\":\"持久化的体现\"},\"184\":{\"h\":\"Write-Ahead Log（WAL，预写日志）\"},\"185\":{\"h\":\"基本概念\"},\"186\":{\"h\":\"工作原理\"},\"187\":{\"h\":\"优点\"},\"188\":{\"h\":\"应用\"},\"189\":{\"h\":\"go context.WithValue使用结构体作为key\"},\"190\":{\"h\":\"go encoding glob的使用场景和实例\",\"t\":[\"encoding/gob 是 Go 语言标准库中的一个包，用于进行 Go 对象的编码和解码（即序列化和反序列化）。\\\"gob\\\" 是 \\\"Go binary\\\" 的缩写，指的是 Go 语言特定的二进制编码格式。\",\"encoding/gob 包提供了以下功能：\",\"序列化和反序列化：encoding/gob 提供了 Encoder 和 Decoder 结构体，可以将 Go 对象编码为字节流（序列化），以及将字节流解码为 Go 对象（反序列化）。\",\"自定义类型支持：可以注册自定义类型，以便正确地进行序列化和反序列化。\",\"高效性：encoding/gob 采用了一些技术来提高性能，例如采用了高效的二进制编码格式，以及一些内部优化策略。\",\"跨语言兼容性：虽然 encoding/gob 是针对 Go 对象的，但是也提供了一些支持，使得可以将 Go 对象序列化为二进制格式，然后与其他语言进行通信。\",\"总的来说，encoding/gob 是 Go 语言中用于处理对象序列化和反序列化的标准库包，它提供了一种高效、易用的方式来进行数据编码和解码。\",\"以下是 encoding/gob 包的一些使用示例和使用场景：\"]},\"191\":{\"h\":\"使用示例：\",\"t\":[\"序列化和反序列化 Go 对象：\",\"package main import ( \\\"bytes\\\" \\\"encoding/gob\\\" \\\"fmt\\\" ) type Person struct { Name string Age int } func main() { // 创建一个 Person 对象 person := Person{Name: \\\"Alice\\\", Age: 30} // 创建一个字节缓冲区用于存储序列化后的数据 var buffer bytes.Buffer // 创建编码器并将数据编码到缓冲区 encoder := gob.NewEncoder(&buffer) err := encoder.Encode(person) if err != nil { fmt.Println(\\\"Encode error:\\\", err) return } // 创建解码器并从缓冲区解码数据 var decodedPerson Person decoder := gob.NewDecoder(&buffer) err = decoder.Decode(&decodedPerson) if err != nil { fmt.Println(\\\"Decode error:\\\", err) return } // 打印解码后的 Person 对象 fmt.Println(decodedPerson) } \",\"自定义类型的序列化和反序列化：\",\"package main import ( \\\"bytes\\\" \\\"encoding/gob\\\" \\\"fmt\\\" ) type Point struct { X, Y int } func main() { // 注册自定义类型 gob.Register(Point{}) // 创建一个 Point 对象 point := Point{X: 10, Y: 20} // 创建一个字节缓冲区用于存储序列化后的数据 var buffer bytes.Buffer // 创建编码器并将数据编码到缓冲区 encoder := gob.NewEncoder(&buffer) err := encoder.Encode(point) if err != nil { fmt.Println(\\\"Encode error:\\\", err) return } // 创建解码器并从缓冲区解码数据 var decodedPoint Point decoder := gob.NewDecoder(&buffer) err = decoder.Decode(&decodedPoint) if err != nil { fmt.Println(\\\"Decode error:\\\", err) return } // 打印解码后的 Point 对象 fmt.Println(decodedPoint) } \"]},\"192\":{\"h\":\"使用场景：\"},\"193\":{\"h\":\"go new和make的区别\",\"t\":[\"在 Go 语言中，new 和 make 都是用来分配内存的，但它们用于不同类型并且行为有所不同。\"]},\"194\":{\"h\":\"new\",\"t\":[\"new(T) 用于创建一个 T 类型的新项，并返回指向它的指针（*T）。\",\"分配的是零值。对于结构体，意味着每个字段都被初始化为其类型的零值。\",\"适用于所有类型，包括基本类型（如 int、float）、复合类型（如 array、struct）、指针、接口等。\",\"str := new(string) // 分配一个字符串，初始化为零值 \\\"\\\"，返回 *string \"]},\"195\":{\"h\":\"make\"},\"196\":{\"h\":\"区别\"},\"197\":{\"h\":\"选择使用哪一个\"},\"198\":{\"h\":\"示例\"},\"199\":{\"h\":\"切片本身指针的作用\"},\"200\":{\"h\":\"修改切片本身\"},\"201\":{\"h\":\"JSON反序列化\"},\"202\":{\"h\":\"GO中数据结构常用定义和使用的区别\"},\"203\":{\"h\":\"append操作\"},\"204\":{\"h\":\"string.Builder中 var vs new\"},\"205\":{\"h\":\"var builder strings.Builder\"},\"206\":{\"h\":\"builder := new(strings.Builder)\"},\"207\":{\"h\":\"总结\"},\"208\":{\"h\":\"go内存泄漏的几种可能\"},\"209\":{\"h\":\"长期存在的goroutine引用对象\",\"t\":[\"func leakyFunction(){ data := make([]int, 1000) go func() { // 这个goroutine不会退出，因此它引用的data永远不会被回收 for { time.Sleep(time.Hour) _ = data[0] // 保持对data的引用 } } } \"]},\"210\":{\"h\":\"全局变量引起的内存占用\"},\"211\":{\"h\":\"未关闭的channel\"},\"212\":{\"h\":\"循环引用\"},\"213\":{\"h\":\"未关闭的context\"},\"214\":{\"h\":\"defer语句在运行时间较长的函数中\"},\"215\":{\"h\":\"其它\"},\"216\":{\"h\":\"go上传和接收指定文件\"},\"217\":{\"h\":\"客户端\",\"t\":[\"package main import ( \\\"bytes\\\" \\\"fmt\\\" \\\"io\\\" \\\"mime/multipart\\\" \\\"net/http\\\" \\\"os\\\" \\\"path\\\" ) func main() { // 读取参数 if len(os.Args) < 2 { fmt.Println(\\\"Usage: go run client.go <file_path>\\\") return } filepath := os.Args[1] // 获取命令行输入的文件路径 // 打开要上传的文件 file, err := os.Open(filepath) if err != nil { panic(err) } defer file.Close() // var body bytes.Buffer // writer := multipart.NewWriter(&body) // 创建一个新的表单数据缓冲 body := &bytes.Buffer{} writer := multipart.NewWriter(body) // field fileKey fileName part, err := writer.CreateFormFile(\\\"file\\\", path.Base(filepath)) if err != nil { panic(err) } // 将文件复制到表单 io.Copy(part, file) writer.Close() // 发送POST请求 request, err := http.NewRequest(\\\"POST\\\", \\\"http://localhost:8080/upload\\\", body) if err != nil { panic(err) } request.Header.Add(\\\"Content-Type\\\", writer.FormDataContentType()) client := &http.Client{} response, err := client.Do(request) if err != nil { panic(err) } defer response.Body.Close() // 输出响应状态 io.Copy(os.Stdout, response.Body) } \"]},\"218\":{\"h\":\"服务端\"},\"219\":{\"h\":\"go函数体实现接口\",\"t\":[\" type Invoker interface { Call(p interface{}) } type FnCaller func(interface{}) func (f FnCaller) Call(p interface{}){ f(p) } \"]},\"220\":{\"h\":\"go字符串和字节数组的转换\"},\"221\":{\"h\":\"字符串和字节切片\",\"t\":[\"Go 中的字符串是不可变的，这意味着一旦一个字符串被创建，它包含的字节序列就不能被改变。在底层，一个字符串通常由两部分组成：一个指向底层数组的指针和一个表示字符串长度的整数。 字节切片底层也是字节序列，但它们是完全不同的两种类型，内部表示也不同。所以将字节切片（[]byte）转换为字符串（string）时，通常会发生内存的重新分配。\"]},\"222\":{\"h\":\"字符串和字节切片之间的转换\",\"t\":[\"虽然字符串和字节切片在底层都是字节序列，但由于字符串的不可变性，它们之间的转换需要复制底层的数据：\",\"将字符串转换为字节切片（[]byte(str)） 会创建一个新的字节切片，并将字符串的内容复制到这个新切片中。\",\"将字节切片转换为字符串（string(bytes)） 也会创建一个新的字符串，并将字节切片的内容复制到这个新字符串中。\",\"byteSlice := []byte{104, 101, 108, 108, 111} // byte slice containing \\\"hello\\\" str := string(byteSlice) // 创建一个新的字符串 \\\"hello\\\" \"]},\"223\":{\"h\":\"一点转换的小技巧\"},\"224\":{\"h\":\"转换风险\"},\"225\":{\"h\":\"go常用写法\",\"t\":[\"// 使用path.Base提取文件名 硬编码的字符串足够了 baseName := path.Base(p) fmt.Println(\\\"Using path.Base:\\\", baseName) // 使用filepath.Base提取文件名; 会自动处理不同操作系统中的路径分隔符差异。在处理用户输入的路径或者从操作系统获取的路径更合适 filepathBaseName := filepath.Base(p) fmt.Println(\\\"Using filepath.Base:\\\", filepathBaseName) \",\"var _ SomeInterface = (*MyService)(nil) \"]},\"226\":{\"h\":\"go接口指针的一些注意点\"},\"227\":{\"h\":\"值接收者和指针接收者的一点区别\",\"t\":[\"在Go语言中值接收者和指针接收者有一些区别：方法可以通过指针接收者（Pointer Receiver）或值接收者（Value Receiver）来定义。这两种接收者在使用时有本质的不同，主要体现在对原始数据的操作方式和效率上。\"]},\"228\":{\"h\":\"值接收者\",\"t\":[\"值接收者在方法调用时，使用的是原始值的一个副本。\",\"对于值接收者的任何修改都不会影响到原始数据。\",\"适用于小结构体或基本数据类型的情况，因为这样做的开销较小。\",\"使用值接收者定义的方法，可以通过值调用也可以通过指针调用，Go会自动进行转换。\"]},\"229\":{\"h\":\"指针接收者\",\"t\":[\"指针接收者在方法调用时，使用的是原始值的内存地址。\",\"通过指针接收者做的任何修改都会直接影响到原始数据。\",\"适用于大结构体或需要修改接收者中数据的情况，因为这样可以避免大量的数据复制，提高效率。\",\"使用指针接收者定义的方法，同样可以通过值调用（如果是可寻址的）和指针调用，Go会自动进行转换。\"]},\"230\":{\"h\":\"本质区别\",\"t\":[\"修改能力：指针接收者允许直接修改原始数据，而值接收者的修改是在副本上进行，不会影响原始数据。\",\"性能考虑：对于大型结构体或需要频繁修改的场景，使用指针接收者可以减少数据复制的开销，提高性能。\",\"自动转换：Go语言在调用方法时，会根据方法定义的接收者类型（值接收者或指针接收者），自动转换调用方式，这提高了语言的灵活性和易用性。\",\"总结来说，选择值接收者还是指针接收者，需要根据实际情况考虑数据的大小、是否需要修改原始数据以及性能影响等因素。在实际开发中，推荐根据具体需求灵活选择。\"]},\"231\":{\"h\":\"使用示例\",\"t\":[\"type MyService struct{} // 值实现 func (ms MyService) Run() error { log.Println(\\\"Run method called\\\") return nil } func main(){ ms := MyService{} ms.Run() pms := &MyService{} pms.Run() } // 指针实现 func (ms *MyService) Run() error { log.Println(\\\"Run method called\\\") return nil } ms := MyService{} ms.Run() pms := &MyService{} pms.Run() \"]},\"232\":{\"h\":\"两者实现的一点影响\",\"t\":[\"虽然不管调用主体是值还是指针，GO会自动转换调用方式。 但是在使用上还是有一点影响和区别：\"]},\"233\":{\"h\":\"确保结构体实现接口\",\"t\":[\"var _ CrawlerServiceServer = (*MyService)(nil) \",\"以上代码强转(*MyService)确保了MyService 或 *MyService必须实现CrawlerServiceServer接口, 但反过来不行，即：\",\"值接收者方法：当你为一个类型定义了一个方法，该方法的接收者是非指针类型（即值接收者），那么这个方法既属于这个类型，也属于这个类型的指针。\"]},\"234\":{\"h\":\"指针类型实现接口的限制\"},\"235\":{\"h\":\"接口指针的使用\"},\"236\":{\"h\":\"结构体成员为接口的指针的使用示例\"},\"237\":{\"h\":\"传递接口指针类型给结构体\"},\"238\":{\"h\":\"使用结构体成员的接口指针\"},\"239\":{\"h\":\"go选择合适的数据存储金额\",\"t\":[\"在Go语言中存储金额时，最佳实践通常是使用整数类型来存储金额的最小货币单位（例如，以分来存储而不是以元），或者使用固定精度的数值类型，如big.Int或big.Rat（在math/big包中），因为它们可以精确表示大数或有理数，避免了浮点数类型在金融计算中可能出现的精度问题。\",\"以下是一些处理金额的方式：\",\"使用整数类型（如int64）来存储金额的最小单位，例如分、厘等。这种方法可以避免浮点数运算中的舍入误差。\",\"var amount int64 = 100 // 表示1元 \"]},\"240\":{\"h\":\"基本使用\"},\"241\":{\"h\":\"grpc的几种分类\"},\"242\":{\"h\":\"GRPC双向流\"},\"243\":{\"h\":\"proto\",\"t\":[\"syntax = \\\"proto3\\\"; package pb; option go_package=\\\"./;pb\\\"; service NotificationService { // 双向流式RPC rpc Connect (stream ClientRequest) returns (stream ServerResponse); } message ClientRequest { string message = 1; } message ServerResponse { string notification = 1; } \"]},\"244\":{\"h\":\"服务端\",\"t\":[\"package main import ( \\\"io\\\" \\\"log\\\" \\\"net\\\" \\\"strconv\\\" \\\"sync/atomic\\\" \\\"temp/grpc_stream/pb\\\" \\\"google.golang.org/grpc\\\" ) type server struct { pb.UnimplementedNotificationServiceServer } var clientIDCounter int64 // 用于生成唯一客户端ID func (s *server) Connect(stream pb.NotificationService_ConnectServer) error { // 生成客户端ID clientID := atomic.AddInt64(&clientIDCounter, 1) clientLogPrefix := \\\"Client \\\" + strconv.FormatInt(clientID, 10) + \\\": \\\" // 可以选择在此处添加逻辑来处理元数据（metadata） for { in, err := stream.Recv() if err == io.EOF { // 客户端关闭连接 log.Println(clientLogPrefix + \\\"Connection closed\\\") return nil // 正常关闭连接 } if err != nil { log.Printf(clientLogPrefix+\\\"Failed to receive a note: %v\\\", err) return err // 返回错误，但不关闭服务器 } log.Println(clientLogPrefix + in.GetMessage()) // 基于客户端请求或其他逻辑，服务器可以随时发送通知 if err := stream.Send(&pb.ServerResponse{Notification: \\\"New Notification\\\"}); err != nil { log.Printf(clientLogPrefix+\\\"Failed to send a notification: %v\\\", err) return err // 同样，返回错误但不关闭服务器 } } } func main() { lis, err := net.Listen(\\\"tcp\\\", \\\":50051\\\") if err != nil { log.Fatalf(\\\"failed to listen: %v\\\", err) } s := grpc.NewServer() pb.RegisterNotificationServiceServer(s, &server{}) if err := s.Serve(lis); err != nil { log.Fatalf(\\\"failed to serve: %v\\\", err) } } \"]},\"245\":{\"h\":\"客户端\",\"t\":[\"package main import ( \\\"context\\\" \\\"fmt\\\" \\\"io\\\" \\\"log\\\" \\\"temp/grpc_stream/pb\\\" \\\"time\\\" \\\"google.golang.org/grpc\\\" \\\"google.golang.org/grpc/credentials/insecure\\\" ) func main() { conn, err := grpc.Dial(\\\"localhost:50051\\\", grpc.WithTransportCredentials(insecure.NewCredentials()), grpc.WithBlock()) if err != nil { log.Fatalf(\\\"did not connect: %v\\\", err) } defer conn.Close() c := pb.NewNotificationServiceClient(conn) stream, err := c.Connect(context.Background()) if err != nil { log.Fatalf(\\\"could not connect: %v\\\", err) } go func() { // 创建一个5秒后发送当前时间的通道 timeout := time.After(5 * time.Second) // for { // // 发送请求到服务器 // if err := stream.Send(&pb.ClientRequest{Message: \\\"Hello\\\"}); err != nil { // log.Fatalf(\\\"Failed to send a message: %v\\\", err) // } // time.Sleep(time.Second) // } for { select { case <-timeout: // 5秒后停止发送消息 log.Println(\\\"Timeout reached, stop sending messages\\\") // 此方法会发送io.EOF err := stream.CloseSend() if err != nil { log.Fatalf(\\\"Failed to close stream: %v\\\", err) } return // 使用return来退出goroutine default: // 发送请求到服务器 if err := stream.Send(&pb.ClientRequest{Message: \\\"Hello\\\"}); err != nil { log.Fatalf(\\\"Failed to send a message: %v\\\", err) } time.Sleep(time.Second) } } }() fmt.Println(\\\"干\\\") for { // 接收来自服务器的通知 in, err := stream.Recv() if err == io.EOF { // 服务器关闭连接 break } if err != nil { log.Fatalf(\\\"Failed to receive a notification : %v\\\", err) } log.Printf(\\\"Received notification %s\\\", in.Notification) } } \"]},\"246\":{\"h\":\"GRPC服务端流\"},\"247\":{\"h\":\"proto\"},\"248\":{\"h\":\"服务端\"},\"249\":{\"h\":\"客户端\"},\"250\":{\"h\":\"http协议断开时机\"},\"251\":{\"h\":\"http协议断开的取决因素\",\"t\":[\"HTTP 连接断开的时机主要取决于 HTTP 协议的版本（如 HTTP/1.1 或 HTTP/2）以及特定的服务器和客户端配置。这里有几种常见的情况：\",\"HTTP/1.0 默认行为：在 HTTP/1.0 中，默认情况下，每个请求完成后连接都会关闭。这意味着对于每个新请求，客户端都需要建立一个新的连接。\",\"HTTP/1.1 持久连接：HTTP/1.1 引入了持久连接（也称为连接复用），在这种情况下，连接在发送和接收多个请求/响应后仍然保持打开状态。这样做可以减少建立和关闭连接的开销。除非显式使用 Connection: close 头部指示关闭，否则连接将保持开启。\",\"超时：无论是 HTTP/1.1 还是 HTTP/2，服务器和客户端通常都有一个超时设置。如果在指定的超时时间内没有数据传输，连接将自动关闭。\",\"服务器或客户端主动关闭：服务器或客户端可以随时通过发送适当的信号来主动关闭连接。\",\"错误或异常：在发生错误或异常情况（如网络故障、协议错误等）时，连接可能会被迫关闭。\"]},\"252\":{\"h\":\"http协议版本选择的取决因素\"},\"253\":{\"h\":\"HTTP2协议\"},\"254\":{\"h\":\"使用Gin和Nginx提供http2协议的web服务\"},\"255\":{\"h\":\"Gin\"},\"256\":{\"h\":\"Nginx\"},\"257\":{\"h\":\"服务端关闭连接\"},\"258\":{\"h\":\"客户端主动关闭 HTTP 连接\"},\"259\":{\"h\":\"go/k8s简介及基本操作.md\",\"t\":[\"Kubernetes（通常简称为 K8s）是一个开源的容器编排系统，用于自动化部署、扩展和管理容器化应用程序。它最初由 Google 设计并捐赠给了 Cloud Native Computing Foundation。下面我会简要介绍 Kubernetes 的主要组件，并提供在 macOS 系统上使用 Kubernetes 的基本指导。\"]},\"260\":{\"h\":\"Kubernetes 的主要组件\",\"t\":[\"控制平面（Control Plane）: \",\"API 服务器（API Server）: Kubernetes API 的核心，是控制平面与其他组件交互的接口。\",\"调度器（Scheduler）: 负责调度 Pod 到合适的节点上。\",\"控制器管理器（Controller Manager）: 管理控制器，负责节点、Pod、服务等的状态。\"]},\"261\":{\"h\":\"在 macOS 上使用 Kubernetes\"},\"262\":{\"h\":\"使用 Minikube\"},\"263\":{\"h\":\"使用 Docker Desktop\"},\"264\":{\"h\":\"menus递归的一点点改进\",\"t\":[\"一般的menus递归我们采用以下函数:\",\" type Item struct { id int pid int name string children []Item } func genTree(menus []Item, id int) []Item { var items = make([]Item, 0) for _, i := range menus { if i.pid == id { iChildren := genTree(menus, i.id) i.children = iChildren items = append(items, i) } } return items } \"]},\"265\":{\"h\":\"protoc命令\"},\"266\":{\"h\":\"protoc命令详解\",\"t\":[\"# --go_out=.会在当前目录生成一个命令空间的文件夹 加paths=source_relative则生成到当前目录i protoc -I=. --go_out=paths=source_relative:. --go-grpc_out=paths=source_relative:. greeter.proto \"]},\"267\":{\"h\":\"go tcp服务器+mac压测\"},\"268\":{\"h\":\"TCP压测工具 tcpkali\"},\"269\":{\"h\":\"nc\"},\"270\":{\"h\":\"tcpkali\"},\"271\":{\"h\":\"一个简单的go tcp回显服务器示例\",\"t\":[\" package main import ( \\\"bufio\\\" \\\"fmt\\\" \\\"net\\\" \\\"os\\\" ) func main() { // 监听TCP端口 listener, err := net.Listen(\\\"tcp\\\", \\\":8080\\\") if err != nil { fmt.Println(\\\"Error listening:\\\", err.Error()) os.Exit(1) } defer listener.Close() fmt.Println(\\\"Listening on :8080\\\") for { // 接受新的连接 conn, err := listener.Accept() if err != nil { fmt.Println(\\\"Error accepting: \\\", err.Error()) continue } // 为每个连接启动一个新的协程 go handleRequest(conn) } } // handleRequest 处理连接上的请求 func handleRequest(conn net.Conn) { defer conn.Close() reader := bufio.NewReader(conn) writer := bufio.NewWriter(conn) for { // 读取客户端的数据 message, err := reader.ReadString('\\\\n') if err != nil { if err != net.ErrClosed { fmt.Println(\\\"Error reading:\\\", err.Error()) } break } // 处理数据（这里简单地回显） fmt.Print(\\\"Message Received:\\\", string(message)) writer.WriteString(message) writer.Flush() } } \"]},\"272\":{\"h\":\"一致性哈希的Go实现\",\"t\":[\"一致性哈希算法是为了解决分布式系统中的动态伸缩问题而提出的。它的基本思想是将哈希空间组织成一个虚拟的圆环，假设哈希函数的范围是0到2^32-1（构成一个圆环），每个服务器在这个圆环上占据一个位置，这个位置根据服务器的哈希值决定。每个要存储的键也会被哈希到这个圆环上的某个位置，然后从这个位置顺时针找到的第一个服务器就是该键所属的服务器。\",\"当系统需要添加或移除服务器时，只会影响到环上顺时针方向紧邻的下一个服务器，而其他服务器存储的数据不会受到影响。这样就大大减少了因服务器增减导致的数据迁移量，只有少部分数据需要迁移。\",\"package main import ( \\\"crypto/sha1\\\" \\\"sort\\\" \\\"strconv\\\" \\\"fmt\\\" ) // 定义一致性哈希的结构 type ConsistentHashing struct { nodes []int // 存储所有节点的哈希值 circle map[int]string // 哈希值到节点名称的映射 } // 创建一致性哈希实例 func NewConsistentHashing() *ConsistentHashing { return &ConsistentHashing{ circle: make(map[int]string), } } // 生成哈希值 func (ch *ConsistentHashing) generateHash(key string) int { h := sha1.New() h.Write([]byte(key)) hash := h.Sum(nil) return int(hash[0])<<24 | int(hash[1])<<16 | int(hash[2])<<8 | int(hash[3]) } // 添加节点 func (ch *ConsistentHashing) AddNode(node string) { hash := ch.generateHash(node) ch.nodes = append(ch.nodes, hash) ch.circle[hash] = node sort.Ints(ch.nodes) // 保持哈希值有序 } // 移除节点 func (ch *ConsistentHashing) RemoveNode(node string) { hash := ch.generateHash(node) index := sort.SearchInts(ch.nodes, hash) if index < len(ch.nodes) && ch.circle[ch.nodes[index]] == node { ch.nodes = append(ch.nodes[:index], ch.nodes[index+1:]...) delete(ch.circle, hash) } } // 获取键的节点 func (ch *ConsistentHashing) GetNode(key string) string { if len(ch.nodes) == 0 { return \\\"\\\" } hash := ch.generateHash(key) index := sort.Search(len(ch.nodes), func(i int) bool { return ch.nodes[i] >= hash }) if index == len(ch.nodes) { // 如果超过范围，表示应该映射到第一个节点 index = 0 } return ch.circle[ch.nodes[index]] } func main() { ch := NewConsistentHashing() ch.AddNode(\\\"Node1\\\") ch.AddNode(\\\"Node2\\\") ch.AddNode(\\\"Node3\\\") fmt.Println(\\\"存储在节点：\\\", ch.GetNode(\\\"myKey1\\\")) fmt.Println(\\\"存储在节点：\\\", ch.GetNode(\\\"myKey2\\\")) fmt.Println(\\\"存储在节点：\\\", ch.GetNode(\\\"myKey3\\\")) ch.AddNode(\\\"Node4\\\") fmt.Println(\\\"添加Node4后，存储在节点：\\\", ch.GetNode(\\\"myKey1\\\")) ch.RemoveNode(\\\"Node2\\\") fmt.Println(\\\"移除Node2后，存储在节点：\\\", ch.GetNode(\\\"myKey1\\\")) } \"]},\"273\":{\"h\":\"内存基础\"},\"274\":{\"h\":\"内存的虚拟地址\",\"t\":[\"在现代计算机系统中，虚拟地址是指操作系统为程序提供的地址空间。\",\"这种地址空间是由操作系统和CPU的**内存管理单元（Memory Management Unit, MMU）**共同管理的，它与物理内存（RAM）中的实际地址是分开的。\"]},\"275\":{\"h\":\"“页”\"},\"276\":{\"h\":\"虚拟地址和页的作用\"},\"277\":{\"h\":\"虚拟地址和页的总结\"},\"278\":{\"h\":\"文件读写过程\"},\"279\":{\"h\":\"系统调用\"},\"280\":{\"h\":\"内核处理\"},\"281\":{\"h\":\"查找页缓存\"},\"282\":{\"h\":\"数据传输\"},\"283\":{\"h\":\"写操作\"},\"284\":{\"h\":\"完成系统调用\"},\"285\":{\"h\":\"错误处理\"},\"286\":{\"h\":\"mmap\"},\"287\":{\"h\":\"mmap的优势和特点\"},\"288\":{\"h\":\"内存映射：\"},\"289\":{\"h\":\"随机访问：\"},\"290\":{\"h\":\"延迟加载：\"},\"291\":{\"h\":\"代码示例\"},\"292\":{\"h\":\"普通读写文件\"},\"293\":{\"h\":\"使用mmap\"},\"294\":{\"h\":\"基本问题\",\"t\":[\"后进先出（LIFO）的顺序执行，即最后一个defer语句会首先执行，第一个defer语句最后执行。\",\"func main() { defer fmt.Println(\\\"first\\\") defer fmt.Println(\\\"second\\\") defer fmt.Println(\\\"third\\\") } \",\"依次打印\",\"third second first \"]},\"295\":{\"h\":\"defer不会执行的情况\",\"t\":[\"在Go语言中，defer语句会将其后的函数调用推迟到包含该defer语句的函数返回之前执行。如果一个函数中有多个defer语句，它们会以后进先出（LIFO）的顺序执行，即最后一个defer语句会首先执行，第一个defer语句最后执行。\"]},\"296\":{\"h\":\"多个 的执行顺序\",\"t\":[\"考虑以下示例：\",\"func main() { defer fmt.Println(\\\"first\\\") defer fmt.Println(\\\"second\\\") defer fmt.Println(\\\"third\\\") } \",\"在这个例子中，输出将会是：\",\"third second first \",\"这展示了defer语句的LIFO执行顺序。\"]},\"297\":{\"h\":\"不会执行的情况\",\"t\":[\"虽然defer语句是非常可靠的，但在某些情况下，defer可能不会执行：\",\"程序异常退出：如果Go程序因为一个未被捕获的panic而异常退出，那么在panic发生后声明的defer语句将不会被执行。然而，已经声明的defer语句在panic向上传递到它们的函数时仍然会执行。\",\"使用os.Exit退出：调用os.Exit会立即终止程序，不会执行任何defer语句。\",\"所在的协程（goroutine）发生panic且未恢复（recover）：如果一个协程发生panic，并且这个panic没有被恢复（即没有使用recover），那么这个协程中的defer语句可能不会全部执行。\",\"defer语句后的函数调用发生panic：如果defer后跟随的函数调用本身发生panic，且未被捕获，那么后续的defer语句也不会执行。\"]},\"298\":{\"h\":\"defer和panic\",\"t\":[\"func main1() { // 这个defer不会被执行，因为它在panic之后声明 panic(\\\"something bad happened\\\") defer fmt.Println(\\\"This defer won't be executed.\\\") } func main2() { // defer会执行 因为在panic之前 defer fmt.Println(\\\"This defer will be executed, even after a panic.\\\") panic(\\\"something bad happened\\\") } func main() { // 只有在defer函数内部调用recover才能捕获到panic defer func() { if r := recover(); r != nil { fmt.Println(\\\"Recovered in defer:\\\", r) } }() fmt.Println(\\\"Calling panic...\\\") panic(\\\"something bad happened\\\") // 注意，这里的defer不会执行，因为它在panic之后声明。 defer fmt.Println(\\\"This defer won't be executed.\\\") } \",\"执行结果如下：\",\"Calling panic... Recovered in defer: something bad happened \",\"这表明，通过在defer函数中恢复panic，程序可以避免因为panic而直接崩溃。然而，如果在panic发生之后再声明defer，这个新的defer是不会被执行的，因为程序的控制流在遇到panic时已经被改变了。\",\"**要注意的是，recover只有在defer函数中调用时才有效。如果你在没有发生panic的正常执行路径中调用recover，它将不会有任何作用。此外，一旦使用recover处理了panic，程序将继续在panic调用之后的点继续执行，但这是指在相同的函数内，如果panic发生在defer之后，则那些defer仍然不会执行。 **\"]},\"299\":{\"h\":\"buf[:]的意思\",\"t\":[\"func process(conn net.Conn) { defer conn.Close() // 关闭连接 for { reader := bufio.NewReader(conn) // 自己定义的固定缓冲区 var buf [128]byte n, err := reader.Read(buf[:]) // 读取数据 if err != nil { fmt.Println(\\\"read from client failed, err:\\\", err) break } recvStr := string(buf[:n]) fmt.Println(\\\"收到client端发来的数据：\\\", recvStr) conn.Write([]byte(recvStr)) // 发送数据 } } func main() { listen, err := net.Listen(\\\"tcp\\\", \\\"127.0.0.1:20000\\\") if err != nil { fmt.Println(\\\"listen failed, err:\\\", err) return } for { conn, err := listen.Accept() // 建立连接 if err != nil { fmt.Println(\\\"accept failed, err:\\\", err) continue } go process(conn) // 启动一个goroutine处理连接 } }。 \"]},\"300\":{\"h\":\"buf[:]的解释\",\"t\":[\"buf[:] 用于创建一个从 buf 的首字节到最后一个字节的切片。buf 是一个固定大小的数组，这里是 [128]byte 类型，表示它可以容纳 128 个字节。\",\"buf[:] 实际上是一个切片操作。它从数组 buf 创建一个新的切片，这个切片引用了相同的底层数组。这意味着通过这个切片对底层数组所做的任何更改都会反映在原始数组 buf 上。\",\"在 n, err := reader.Read(buf[:]) 行，buf[:] 被传递给 Read 方法。这意味着 Read 方法会从连接中读取数据，最多填充这个切片的长度，即 128 字节。\"]},\"301\":{\"h\":\"超过 128 字节的情况\",\"t\":[\"如果从 conn 读取的数据超过 128 字节，Read 方法只会读取前 128 字节的数据到 buf 数组中。剩余的数据仍然保留在内部的网络缓冲区中，等待下一次读取。\",\"在每次循环迭代中，最多只能读取 128 字节。如果有更多的数据，它们将在后续的迭代中被读取。\",\"这意味着如果客户端发送一个超过 128 字节的消息，该消息将被分割成多个部分，每部分最多 128 字节，在多次迭代中被逐渐读取并处理。\"]},\"302\":{\"h\":\"自定义固定缓存区和系统输入输出网络缓存区\",\"t\":[\"上面的buf数组即是自定义固定缓存区\"]},\"303\":{\"h\":\"输出网络缓存区\",\"t\":[\"调用 conn.Write([]byte(recvStr)) 时，数据首先被复制到操作系统的发送缓冲区。这个缓冲区是由操作系统管理的，用于处理网络I/O。这个缓冲区的存在意味着数据不是立即发送到网络的。操作系统会根据网络状况、缓冲区的填充情况以及其他因素来决定何时实际发送数据。\",\"网络延迟和吞吐量会影响数据包的发送。例如，如果网络延迟较高，操作系统可能会倾向于等待更多数据到达缓冲区后再发送，以减少总体延迟。\"]},\"304\":{\"h\":\"输入网络缓存区\",\"t\":[\"当数据到达您的服务器时，它们首先被存放在接收缓冲区中，然后您的程序可以从这个缓冲区中读取数据。\"]},\"305\":{\"h\":\"数据的即时性\",\"t\":[\"在某些情况下，如果发送缓冲区不是满的，数据可能会被相对快速地发送出去，但这并不是保证的。 在高性能或实时性要求较高的应用中，开发人员可能需要调用特定的系统调用（如在某些系统中的tcp_nodelay选项），来影响数据包的发送策略，例如减少延迟。\"]},\"306\":{\"h\":\"io.EOF\",\"t\":[\"在 Go 语言中，io.EOF 是一个特殊的错误值，用于表示文件或流的结尾（End Of File）。这个值在 io 包中定义，通常在处理文件读取、网络数据读取等场合遇到。它是用来指示没有更多的数据可以读取了，通常并不是一个真正的“错误”，而是一个正常的信号，表示数据读取已经完成。\"]},\"307\":{\"h\":\"在网络编程中的使用\",\"t\":[\"在处理网络连接时，当你从连接中读取数据，io.EOF 会在没有更多数据可读时返回。例如，在你的 process 函数中，如果客户端关闭了连接，reader.Read 方法将返回 io.EOF。这通常是处理网络连接中断或结束的一个重要信号。\"]},\"308\":{\"h\":\"示例\",\"t\":[\"n, err := reader.Read(buf) if err != nil { if err == io.EOF { // 处理文件或流的结尾 break // 或者进行其他适当的处理 } else { // 处理其他错误 } } \"]},\"309\":{\"h\":\"关键点\",\"t\":[\"io.EOF 不是一个表示故障的错误，而是表示没有更多数据可以读取的状态。\",\"正确处理 io.EOF 对于确保程序正确理解输入结束非常重要，尤其是在文件读取或网络通信中。\",\"在很多场合，遇到 io.EOF 是循环读取的终止条件，表示数据传输或文件读取已经完成。\"]},\"310\":{\"h\":\"go哪些是引用类型\",\"t\":[\"在 Go 语言中，有几种类型通常被认为是引用类型。这意味着当这些类型的变量被赋值给另一个变量时，新变量实际上是指向原始数据的引用，而不是数据的副本。以下是 Go 语言中的主要引用类型：\",\"切片（Slices）：切片是对数组的引用，它提供了一个动态大小的、灵活的视图。对切片的任何修改都会影响其底层数组。\",\"映射（Maps）：映射是存储键值对的数据结构，其中键是唯一的。映射内部使用哈希表实现，赋值和传递映射变量实际上是在传递对映射数据结构的引用。\",\"通道（Channels）：用于在不同的 Goroutines 之间进行通信。当通道被传递时，传递的是对原始通道的引用。\",\"接口（Interfaces）：接口类型是一组方法的集合。一个变量如果是接口类型，那么它实际上是指向满足这个接口的具体类型和值的引用。\",\"函数类型（Function types）：在 Go 中，函数也可以被视为引用类型。函数变量实际上是对函数实现的引用。\"]},\"311\":{\"h\":\"注意事项\",\"t\":[\"尽管这些类型在技术上是引用类型，但 Go 语言并没有像一些其他语言那样显式使用指针。相反，这些引用类型的行为更像是内置的指针，但在使用上更为简便。\",\"指针（Pointers） 本身不是引用类型，但它们存储了对其他变量的直接引用。在 Go 中，你可以创建任何类型的指针，这使得即使是值类型（如 int 或 struct）也可以通过引用传递。\",\"虽然这些类型被归类为引用类型，但它们的赋值和传递行为在一些情况下仍然需要谨慎处理，特别是涉及到并发和数据共享的时候。\",\"总的来说，理解 Go 中的引用类型和它们的行为对于编写高效且正确的程序非常重要。\"]},\"312\":{\"h\":\"make和new的区别\",\"t\":[\"在 Go 语言中，make 和 new 是两个用于分配和初始化内存的内置函数，但它们在使用上有一些重要的区别：\",\"make 函数：用于初始化内建的引用类型，即切片（slice）、映射（map）和通道（channel）。当你使用 make(chan os.Signal, 1) 时，它创建了一个实际的通道实例并返回一个通道类型的引用（即一个指向该通道的指针）。这个通道是已经初始化好的，可以直接使用。\",\"new 函数：用于分配内存，对于任何类型 T，new(T) 分配类型 T 的零值内存并返回一个指向它的指针，即 *T 类型的值。如果你使用 new(chan os.Signal)，它会返回一个指向 chan os.Signal 的指针，这个指针指向的通道是 nil，也就是说它没有指向任何实际的通道实例。你需要在使用之前对它进行初始化。\",\"在处理通道的情况下，通常推荐使用 make 而不是 new，因为 make 会返回一个已经初始化好的、可以直接使用的通道，而 new 返回的是指向 nil 通道的指针，这通常不是你想要的。\",\"例如：\",\"// 使用 make 创建和初始化通道 stopChan := make(chan os.Signal, 1) // 使用 new 会创建一个指向 nil 通道的指针 // 这通常不是你想要的，因为你需要一个已经初始化好的通道 stopChanPtr := new(chan os.Signal) \",\"在上面的第二种情况中，如果你尝试通过 stopChanPtr 发送或接收数据，将会导致运行时错误，因为 stopChanPtr 指向的通道是 nil。因此，对于创建通道，推荐使用 make。\"]},\"313\":{\"h\":\"new在什么时候使用\",\"t\":[\"在 Go 语言中，new 函数的使用场景相对较少，主要是因为 Go 提供了更方便的方式来初始化变量。不过，还是有一些情况下 new 会被使用：\",\"当你需要一个指向类型零值的指针时：new(T) 创建一个类型为 T 的新项，初始化为 T 的零值，并返回其地址，即一个 *T 类型的值。这在你需要一个指向某类型零值的指针，但又不需要立即分配或初始化更复杂的数据时是有用的。\",\"编写泛型代码时：在某些泛型编程场景中，你可能不知道具体的类型，但需要一个指向该类型的指针。在这种情况下，new 可以用来创建这样的指针。\",\"当显式指针操作更清晰时：尽管在 Go 中直接使用值类型（如结构体）是常见的，有时显式地处理指针（如通过 new 创建）可以使代码的意图更加明确，尤其是在涉及到共享数据或优化性能（例如减少大型结构体的复制）的情况下。\"]},\"314\":{\"h\":\"示例\",\"t\":[\"假设你有一个结构体 MyStruct，以下是使用 new 的一个例子：\",\"type MyStruct struct { Field1 int Field2 string } // 使用 new 创建 MyStruct 的指针 ptr := new(MyStruct) // 此时 ptr 是指向 MyStruct 的指针，MyStruct 的字段都被初始化为零值 \",\"在这个例子中，ptr 指向一个新分配的 MyStruct，其字段 Field1 和 Field2 被初始化为它们各自类型的零值（0 和 \\\"\\\"）。\"]},\"315\":{\"h\":\"对比 和复合字面量\",\"t\":[\"在 Go 中，更常见的做法是使用复合字面量（结构体字面量）来创建并初始化结构体，如下所示：\",\"// 直接初始化 var s MyStruct // 使用复合字面量创建结构体的指针 ptr := &MyStruct{} \",\"这种方法更加直观，并且允许你在创建时就初始化结构体的字段。因此，除非你有特定的理由需要使用 new，否则通常推荐使用复合字面量语法。\"]},\"316\":{\"h\":\"channel关闭判断方法\",\"t\":[\"关闭channel会自动发送一个零值到channel\"]},\"317\":{\"h\":\"使用ok判断\",\"t\":[\"val, ok := <-ch \",\"ok为false时channel关闭，此时val为零值\"]},\"318\":{\"h\":\"range\",\"t\":[\"使用Range后会循环到channel关闭，但无法接受到关闭channel后自动发送的零值。\",\"func getC(ch chan struct{}) { // range只循环一次 for v := range ch { fmt.Println(v) wg.Done() } // 关闭后还有一个零值 fmt.Println(<-ch) wg.Done() } func main() { wg.Add(2) ch := make(chan struct{}) go getC(ch) ch <- struct{}{} close(ch) wg.Wait() } \"]},\"319\":{\"h\":\"r.ParseMultipartForm内存限制大小\",\"t\":[\"r表示httpFunc的request\",\"r.ParseMultipartForm(10 << 20) 不能直接限制上传文件的大小。这个函数调用设定的是服务器处理multipart/form-data请求时允许存储在内存中的最大数据量。当请求中的文件和表单数据的总大小超过这个限制时，多余的数据会自动被写入到服务器的临时文件系统中，而不是被拒绝或导致错误。\",\"这个“超出写入临时文件”的逻辑是由Go的http包内部实现的。当你调用ParseMultipartForm方法时，这个方法会检查请求体的大小。如果请求体的内容（即上传的文件和其他表单数据）超过你指定的内存限制（在这个例案中是10MB），那么超出部分的数据会被存储到服务器的临时文件中。\",\"这个过程是自动进行的，无需开发者手动编写任何额外的代码来处理超出限制的数据。Go的标准库会负责管理这些临时文件，包括在适当的时候删除它们，以避免占用过多的磁盘空间。\"]},\"320\":{\"h\":\"文件流式上传\"},\"321\":{\"h\":\"NodeJS例子\"},\"322\":{\"h\":\"客户端\",\"t\":[\"<!DOCTYPE html> <html> <body> <h2>File Upload Example</h2> <input type=\\\"file\\\" id=\\\"fileInput\\\"> <button onclick=\\\"uploadFile()\\\">Upload</button> <script src=\\\"script.js\\\"></script> </body> </html> \"]},\"323\":{\"h\":\"服务端\"},\"324\":{\"h\":\"GO流式上传例子\"},\"325\":{\"h\":\"客户端\"},\"326\":{\"h\":\"服务端\"},\"327\":{\"h\":\"的性质\"},\"328\":{\"h\":\"的工作方式\"},\"329\":{\"h\":\"流式处理的优点\"},\"330\":{\"h\":\"GO返回参数结构体是否该用指针\"},\"331\":{\"h\":\"返回 pb.GreetResponse（结构体实例）:\"},\"332\":{\"h\":\"返回 *pb.GreetResponse（结构体指针）:\"},\"333\":{\"h\":\"Java <T> T 和 T的区别\"},\"334\":{\"h\":\"导读\",\"t\":[\"最近在看Java的过程中对形如public <T> T get(...)的写法感到困惑，在网上很难找到合理解释。\"]},\"335\":{\"h\":\"分析\",\"t\":[\"public <T> T readObjectData(ByteBuffer buffer, Class<T> type) \"]},\"336\":{\"h\":\"扩展\"},\"337\":{\"h\":\"参考\"},\"338\":{\"h\":\"Java注解\"},\"339\":{\"h\":\"导读\"},\"340\":{\"h\":\"内置注解\"},\"341\":{\"h\":\"@Override\"},\"342\":{\"h\":\"@Deprecated\"},\"343\":{\"h\":\"@SuppressWarnings\"},\"344\":{\"h\":\"元注解（作用于其它注解上的注解）\"},\"345\":{\"h\":\"@Retention\"},\"346\":{\"h\":\"例子：\"},\"347\":{\"h\":\"@Target\"},\"348\":{\"h\":\"例子：\"},\"349\":{\"h\":\"@Documented\"},\"350\":{\"h\":\"@Inherited\"},\"351\":{\"h\":\"@SafeVarargs (Java7支持)\"},\"352\":{\"h\":\"@FunctionalInterface（Java8支持）\"},\"353\":{\"h\":\"@Repeatable（Java8支持）\"},\"354\":{\"h\":\"注解的架构\"},\"355\":{\"h\":\"注解代码的组成\"},\"356\":{\"h\":\"一个简单的例子\"},\"357\":{\"h\":\"SpringBoot报错\\\"Whitelabel Error Page\\\"\",\"t\":[\"今天在调试Spring的时候出现了一个\\\"Whitelabel Error Page\\\"页面，如图\"]},\"358\":{\"h\":\"原因\"},\"359\":{\"h\":\"Spring无法找到对应\"},\"360\":{\"h\":\"书写错误\"},\"361\":{\"h\":\"SpringBoot提示\\\"Cannot resolve symbol RestController\\\"\",\"t\":[\"最近在用maven生成springboot项目时，会报一个Cannot resolve symbol RestController的简单错误，但是对于初学者来说，Java的重量级配置错误常常会让人抓狂，这里记录如何解决这个报错。\"]},\"362\":{\"h\":\"可能原因\"},\"363\":{\"h\":\"未引入相关依赖\",\"t\":[\"这是最常见的原因，@ResetController定义在springboot中的spring-boot-starter-web这个artifact中,但是我的pom.xml里已经有了这个依赖却依然报错。\"]},\"364\":{\"h\":\"缓存出错\",\"t\":[\"由于之前idea可能发生配置错误，编辑器缓存了一些配置，导致idea一直提示此错误，我就是这种情况，折腾了很久才发现这个问题。\\n方法是点击菜单中的\\\"File\\\" >> \\\"Invalidate Caches\\\" >> 勾选\\\"file system cache and local history\\\"确定后重启idea报错消失。\"]},\"365\":{\"h\":\"Springboot打开热部署\",\"t\":[\"最近在使用Springboot热启动的时候，参照了网上很多方法，但发现很多不全。\"]},\"366\":{\"h\":\"如何使用 热启动\",\"t\":[\"pom.xml添加依赖spring-boot-devtools\",\" <!-- spring-boot hot refresh --> <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-devtools</artifactId> <scope>runtime</scope> </dependency> \",\"spring-boot-maven-plugin添加配置项fork: true\",\"<plugin> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-maven-plugin</artifactId> <!-- set ture to enable hot start of devtools --> <configuration> <fork>true</fork> </configuration> </plugin> \",\"打开Preferences(Mac cmd + ，)找到Build, Exception, Deployme下的compiler,单击Compiler,在右边Build project automatically选项框内打勾。\"]},\"367\":{\"h\":\"java @Async的执行\"},\"368\":{\"h\":\"@Async的使用\",\"t\":[\"在 Spring Boot 中实现异步操作通常使用 @Async 注解。@Async 注解可以应用于方法级别，用于表示该方法是异步执行的，即方法的调用将在一个单独的线程中执行，而不会阻塞当前线程。\",\"要启用 Spring Boot 中的异步操作，通常需要以下几个步骤：\",\"在 Spring Boot 应用程序的配置类上启用异步支持：你需要确保在 Spring Boot 应用程序的配置类上启用异步支持。可以通过在配置类上添加 @EnableAsync 注解来实现。这个注解告诉 Spring Boot 启用异步执行支持。\",\"在要执行异步操作的方法上添加 @Async 注解：你需要在想要异步执行的方法上添加 @Async 注解。这个注解告诉 Spring Boot 将这个方法的调用放在一个独立的线程中执行。\",\"下面是一个简单的示例：\",\"import org.springframework.boot.SpringApplication; import org.springframework.boot.autoconfigure.SpringBootApplication; import org.springframework.scheduling.annotation.EnableAsync; import org.springframework.scheduling.annotation.Async; @SpringBootApplication @EnableAsync public class MyApplication { public static void main(String[] args) { SpringApplication.run(MyApplication.class, args); } } @Service public class MyService { @Async public CompletableFuture<String> doSomethingAsync() { // 这里执行异步操作 return CompletableFuture.completedFuture(\\\"Async operation completed\\\"); } } \"]},\"369\":{\"h\":\"@Async的实现\"},\"370\":{\"h\":\"同步等待异步结果\"},\"371\":{\"h\":\"异步处理执行结果\"},\"372\":{\"h\":\"可靠性探讨\"},\"373\":{\"h\":\"volatile的使用\"},\"374\":{\"h\":\"volatile简介\",\"t\":[\"volatile 关键字是一种在编程中用于声明变量的修饰符，它告诉编译器这个变量的值可能会被某些编译器无法检测的因素（比如并行执行的线程）改变。在Java和C/C++等语言中，volatile的使用和意义略有不同，但核心概念相似——防止编译器对这些变量进行优化，确保每次访问变量时都直接从内存中读取，而不是从寄存器或其他地方读取可能已经过时的值。\"]},\"375\":{\"h\":\"使用场景\",\"t\":[\"多线程环境下的变量共享：在多线程程序中，一个线程对非volatile变量的修改可能对其他线程不可见，导致程序行为出现错误。使用volatile可以确保当一个线程修改了变量的值时，其他线程能够立即看到这个变化。\",\"防止指令重排序：现代编译器和处理器为了优化性能，可能会对指令序列进行重排序。volatile变量的读写操作可以作为一个内存屏障，防止特定类型的重排序，确保在volatile变量读写操作之前的所有操作都在内存中完成。\",\"表示变量可能被未知因素修改：在某些硬件相关的编程中，比如操作系统的开发或嵌入式系统编程中，某些内存位置可能由硬件事件改变而非软件控制的代码路径。volatile声明这些变量可以防止编译器做出不正确的假设和优化。\"]},\"376\":{\"h\":\"注意事项\",\"t\":[\"不是同步机制：虽然volatile可以确保变量读写的可见性，但它本身并不提供互斥或原子性保证。例如，在增加或比较并交换等复合操作中，仅使用volatile是不足以防止并发问题的。\",\"性能考量：使用volatile会禁止编译器对这些变量进行某些优化，可能会对性能产生一定影响。因此，应当仅在必要时使用volatile关键字。\",\"有限的使用场景：随着Java和其他语言中并发编程工具的发展，比如在Java中的java.util.concurrent包，volatile的使用场景相对减少。这些工具提供了更丰富的同步机制，对于复杂并发控制来说，通常是更好的选择。\"]},\"377\":{\"h\":\"使用示例\"},\"378\":{\"h\":\"确保操作完成的意义\"},\"379\":{\"h\":\"示例解释\"},\"380\":{\"h\":\"js判断对象的三种方法\",\"t\":[\"使用 typeof 和 null 检查:\",\"typeof 运算符对于对象（包括函数和数组）都会返回 'object'。但是，null 也被认为是一个对象类型，所以需要额外检查。\",\"function isObject(value) { return value !== null && typeof value === 'object'; } \",\"使用 Object.prototype.toString.call():\",\"这是一个更精确的方法，可以区分对象、数组、函数和null。\",\"function isObject(value) { return Object.prototype.toString.call(value) === '[object Object]'; } \"]},\"381\":{\"h\":\"js模拟私有变量和静态变量\",\"t\":[\"这是一个js类的写法：\",\"class Router { constructor() { this.callBack = () => {}; } beforeEach(callBack) { if (callBack instanceof Function) this.callBack = callBack; } push(to) { this.callBack('navigateTo', to); } redirectTo(to) { this.callBack('redirectTo', to); } reLaunch(to) { this.callBack('reLaunch', to); } switchTab(to) { this.callBack('switchTab', to); } back(delta) { // #ifdef H5 history.back(); // #endif // #ifndef H5 uni.navigateBack({ delta }); // #endif } } export default new Router(); \"]},\"382\":{\"h\":\"js函数的“私有变量”和“静态变量”\"},\"383\":{\"h\":\"prototype和“静态变量”\"},\"384\":{\"h\":\"构造函数\"},\"385\":{\"h\":\"函数私有变量 vs this\"},\"386\":{\"h\":\"vue注册全局组件\",\"t\":[\"假设有三个组件A, B, C。\",\"为了将这三个组件（A, B, C）注册为全局组件并创建一个Vue插件，你可以按照以下步骤操作：\",\"创建插件文件: 首先，创建一个新的文件，例如 GlobalComponents.js。\"]},\"387\":{\"h\":\"linux trap命令简介\",\"t\":[\"在 Linux 系统中，trap 是一个用于在接收到特定信号时执行指定命令或脚本的 Bash 命令。它是一个非常有用的工具，尤其是在脚本编程中，用于处理意外情况或清理工作。\"]},\"388\":{\"h\":\"基本概念\",\"t\":[\"信号（Signals）：信号是 Unix 和类 Unix 系统中进程间通信的一种方式。信号是一种小的消息，通知进程某个事件已经发生。\",\"常见信号：例如 SIGINT（由 Ctrl+C 触发），SIGTERM（一种终止进程的请求），SIGKILL（强制终止进程），SIGHUP（挂起信号，通常用于重启进程）等。\"]},\"389\":{\"h\":\"使用 的语法\"},\"390\":{\"h\":\"示例\"},\"391\":{\"h\":\"注意事项\"},\"392\":{\"h\":\"linux设置dns\",\"t\":[\"resolvectl status \",\"使用 systemd-resolve 命令：\",\"systemd-resolve --status | grep \\\"DNS Servers\\\" \"]},\"393\":{\"h\":\"linux设置为路由器\",\"t\":[\"Linux服务器可以被配置为路由器，这是由于Linux内核具有灵活的网络功能，包括路由、防火墙、流量控制、网络地址转换（NAT）等。以下是使Linux服务器作为路由器的几个关键步骤：\",\"内核支持：确保Linux内核支持IP转发。这是通过修改内核参数/proc/sys/net/ipv4/ip_forward来实现的，将其设置为1开启IP转发。\",\"网络接口配置：配置Linux服务器上的网络接口。服务器需要至少两个网络接口：一个连接到外部网络（如互联网），另一个连接到内部网络（如局域网）。\",\"静态路由设置：根据网络环境配置静态路由，或者使用路由协议如RIP、OSPF等，让路由器动态学习和宣告路由。\",\"防火墙和NAT：使用iptables等工具配置防火墙规则和网络地址转换，这可以提供安全保护并允许多个设备共享一个公网IP地址。\",\"DHCP服务：可选地，可以在服务器上运行DHCP服务，自动为内部网络的设备分配IP地址。\",\"DNS服务：可选地，在服务器上配置DNS服务，提供域名解析服务。\",\"高级配置：根据需要配置高级网络服务，如VPN、负载均衡、带宽管理等。\"]},\"394\":{\"h\":\"配置linux转发\"},\"395\":{\"h\":\"1. 启用 IP 转发\"},\"396\":{\"h\":\"2. 设置网络接口\"},\"397\":{\"h\":\"3. 配置 NAT（网络地址转换）\"},\"398\":{\"h\":\"4. 保存您的 iptables 配置\"},\"399\":{\"h\":\"5. 配置您的电脑\"},\"400\":{\"h\":\"示例\"},\"401\":{\"h\":\"1. 配置网络接口\"},\"402\":{\"h\":\"2. 配置 IP 转发和 NAT\"},\"403\":{\"h\":\"3. DHCP 和 DNS 服务\"},\"404\":{\"h\":\"4. 无线接入点\"},\"405\":{\"h\":\"5. 重新启动网络服务\"},\"406\":{\"h\":\"linux设置wifi\"},\"407\":{\"h\":\"连接\"},\"408\":{\"h\":\"查看无线设备\",\"t\":[\"iwconfig \"]},\"409\":{\"h\":\"使用netplan连接wifi\",\"t\":[\"sudo apt update # 安装必要软件 sudo apt install wpasupplicant net-tools \"]},\"410\":{\"h\":\"加密\"},\"411\":{\"h\":\"重启wlan0\"},\"412\":{\"h\":\"查看\"},\"413\":{\"h\":\"mac挂载额外盘符\",\"t\":[\"在 macOS 上，外部硬盘通常只有在用户登录并进入桌面后才自动挂载。为了实现在启动时即使没有用户登录也能挂载外部硬盘，你需要进行一些额外的配置。请注意，这些方法可能需要对系统级的设置进行更改，因此需要谨慎操作。\"]},\"414\":{\"h\":\"方法 1：使用 文件\",\"t\":[\"识别硬盘： \",\"首先，你需要找出外置硬盘的唯一标识符。可以通过 diskutil 命令来实现：\",\"diskutil info /Volumes/YourVolumeName \"]},\"415\":{\"h\":\"方法 2：创建启动脚本\"},\"416\":{\"h\":\"注意事项\"},\"417\":{\"h\":\"obs混流基本方案\",\"t\":[\"个体主播转发其他直播流并添加自己的字幕、人像和声音，这种操作通常涉及到视频流的捕获、编辑和重新编码过程。这可以通过使用直播软件（如OBS Studio）、视频编辑软件或专业的流媒体处理工具（如FFmpeg）来实现。下面是实现这一过程的一些基本步骤和概念：\"]},\"418\":{\"h\":\"使用直播软件（如OBS Studio）\",\"t\":[\"OBS Studio是一款广泛使用的开源直播软件，它允许用户捕获视频源，添加多种媒体元素（如图像、文字、视频捕获设备等），并将其作为一个合成的视频流直播或录制。个体主播可以使用OBS Studio按以下步骤操作：\",\"捕获视频流：首先，主播需要捕获想要转发的直播流。这可以通过“媒体源”来实现，将直播流地址作为输入源添加到OBS中。\",\"添加个人元素：\",\"字幕：可以使用OBS的“文本（GDI+）”源添加实时字幕或注释。\",\"人像：通过添加“视频捕获设备”源，主播可以将自己的人像（通常是使用摄像头捕获的）叠加到视频流上。\",\"声音：通过“音频输入捕获”源，可以添加主播的声音，通常是通过麦克风捕获。\",\"混流与直播：在OBS中，主播可以对这些元素进行布局和混合，然后选择一个直播平台作为输出目的地，使用“开始直播”功能将合成的视频流直播出去。\"]},\"419\":{\"h\":\"使用FFmpeg进行高级处理\",\"t\":[\"对于更复杂的流处理需求，如实时转码、混流或添加复杂的视频/音频效果，FFmpeg是一个强大的命令行工具，能够进行高度定制化的视频处理。使用FFmpeg，主播可以编写脚本来自动化处理视频流，包括捕获、添加个人元素和编码等步骤。\"]},\"420\":{\"h\":\"网络和硬件要求\",\"t\":[\"带宽：转发并处理视频流需要较高的上传带宽，尤其是当你以高分辨率和帧率直播时。\"]},\"421\":{\"h\":\"注意事项\"},\"422\":{\"h\":\"三种不同流媒体传输协议简介\",\"t\":[\"RTMP、HLS和MPEG-DASH是三种流行的流媒体传输协议，它们各自有不同的特点和应用场景。下面是对这三种协议的简要介绍以及它们的地址格式示例：\"]},\"423\":{\"h\":\"RTMP (Real-Time Messaging Protocol)\",\"t\":[\"特点：RTMP是由Adobe开发的一种设计用于高性能传输音频、视频和数据的协议，主要用于实时直播。RTMP基于TCP，能够提供稳定的连接和低延迟传输，但由于它不是基于HTTP，因此可能会被某些防火墙或网络设备阻挡。\",\"应用场景：主要用于直播流的推送（从编码器到服务器）和一些要求低延迟的应用。\",\"地址格式：\",\"rtmp://server-address/app/stream \",\"例如: rtmp://example.com/live/stream123\"]},\"424\":{\"h\":\"HLS (HTTP Live Streaming)\",\"t\":[\"特点：HLS是由Apple开发的基于HTTP的流媒体传输协议，支持动态比特率适配，这意味着视频可以根据用户的网络速度动态调整质量。HLS通过将视频分割成一系列小的基于HTTP的文件来工作，每个文件包含一小段视频内容。\",\"应用场景：广泛用于各种设备和浏览器的视频点播和直播，特别是在需要适应不同网络条件和跨平台兼容性的场景。\",\"地址格式：\",\"http://server-address/path/playlist.m3u8 \",\"例如: http://example.com/live/stream123.m3u8\"]},\"425\":{\"h\":\"MPEG-DASH (Dynamic Adaptive Streaming over HTTP)\",\"t\":[\"特点：MPEG-DASH是一个国际标准，支持从简单的视频点播到高质量的直播。与HLS类似，DASH也是基于HTTP的自适应比特率流媒体传输协议，允许高质量的流媒体通过互联网传输。\",\"应用场景：适用于需要高度自定义和支持广泛设备的视频点播和直播服务。\",\"地址格式：\",\"http://server-address/path/manifest.mpd \"]},\"426\":{\"h\":\"总结\"},\"427\":{\"h\":\"视频编码和视频格式的区别\",\"t\":[\"编码（Codec）和视频格式（Container Format）是数字视频技术中两个基本但不同的概念，它们共同决定了视频文件的存储、传输和播放方式。理解这两者之间的关系有助于更好地管理和使用视频文件。\"]},\"428\":{\"h\":\"编码（Codec）\",\"t\":[\"编码是指压缩和解压视频或音频数据的方法。编码器在创建视频文件时压缩数据，而解码器则在播放时解压数据。编码的目的是减小文件大小和传输带宽的需求，同时尽量保持原始数据的质量。常见的视频编码标准包括H.264、H.265（HEVC）、VP9等。\"]},\"429\":{\"h\":\"视频格式（Container Format）\",\"t\":[\"视频格式，也称为容器格式，是定义了如何存储编码后的视频、音频以及其他数据（如字幕、元数据）的结构。容器格式包裹着编码的数据流，并且可能包含多种不同类型的数据。常见的视频容器格式包括MP4、AVI、MKV等。\"]},\"430\":{\"h\":\"它们之间的关系\",\"t\":[\"容器是用来包含和组织视频、音频以及可能的其他数据（如字幕）的“盒子”。容器格式定义了如何存储这些信息以及它们之间的关系。\",\"编码则是容器中实际视频和音频数据的压缩格式。编码决定了数据如何被压缩和解压缩，影响文件的大小和质量。\"]},\"431\":{\"h\":\"举例说明\",\"t\":[\"MP4和H.264的关系：在这个例子中，MP4是容器格式，它可以包含使用H.264编码的视频数据流。同时，MP4容器还可以包含音频（如AAC编码的音频）、字幕和元数据等。H.264是视频数据的压缩标准，而MP4是将这些数据组织起来的容器。\"]},\"432\":{\"h\":\"为什么这种区分很重要？\",\"t\":[\"兼容性和灵活性：不同的设备和播放器支持不同的容器格式和编码。了解视频文件的容器和编码可以帮助确保视频能够在目标平台上正确播放。\",\"性能和需求：不同的编码标准有不同的压缩效率和质量损失特性。选择正确的编码可以在满足质量要求的同时最小化文件大小。\"]},\"433\":{\"h\":\"主从同步过程\",\"t\":[\"MySQL的主从同步过程涉及将主服务器（Master）上的数据变更复制到一个或多个从服务器（Slave）上，以保持数据库的一致性。这个过程主要通过二进制日志（Binary Log）和中继日志（Relay Log）实现。下面是一个详细的步骤描述，包括当一个SQL插入语句在主服务器上执行时发生的事情：\"]},\"434\":{\"h\":\"1. SQL插入操作在主服务器上执行\",\"t\":[\"当一个插入（INSERT）语句在主服务器上执行时：\",\"执行语句：MySQL首先执行这个插入语句，将新的数据行添加到相应的表中。\",\"写入二进制日志：执行的插入语句和所产生的数据变更被记录到主服务器的二进制日志中。二进制日志是MySQL数据修改的记录，包括但不限于插入、更新和删除操作。\"]},\"435\":{\"h\":\"2. 从服务器请求数据变更\",\"t\":[\"从服务器通过以下步骤与主服务器同步数据：\",\"读取二进制日志：从服务器上的I/O线程连接到主服务器，并请求从上次同步后的二进制日志位置开始的所有新的二进制日志条目。\",\"接收并写入中继日志：从服务器接收到二进制日志后，I/O线程会将这些日志写入本地的中继日志（Relay Log）。中继日志是从服务器上的二进制日志的一个副本。\"]},\"436\":{\"h\":\"3. 应用数据变更到从服务器\",\"t\":[\"从服务器将二进制日志中的数据变更应用到自己的数据库中：\",\"读取中继日志：从服务器上的SQL线程读取中继日志中的事件。\",\"执行日志事件：SQL线程执行中继日志中的事件，包括插入操作，将数据变更应用到从服务器的数据库中。\"]},\"437\":{\"h\":\"4. 完成同步\",\"t\":[\"一旦SQL线程完成了中继日志中所有事件的执行，这次的数据同步过程就完成了。此时，从服务器上的数据应该与主服务器上的数据保持一致。\"]},\"438\":{\"h\":\"同步模式\",\"t\":[\"MySQL支持几种不同的复制模式，主要包括同步复制（Synchronous Replication）和异步复制（Asynchronous Replication）。在默认配置下，MySQL使用的是异步复制，这意味着主服务器在将事件写入二进制日志后就立即返回，不会等待从服务器确认已接收和应用了这些变更。这可能导致在某些情况下（如主服务器突然崩溃）主从数据不一致的情况。为了解决这个问题，MySQL还提供了半同步复制（Semi-Synchronous Replication）作为一种可选配置，以提高数据一致性。\"]},\"439\":{\"h\":\"注意事项\",\"t\":[\"数据延迟：在高负载或网络延迟的情况下，从服务器可能会与主服务器出现延时，即从服务器上的数据可能暂时落后于主服务器。\",\"配置和监控：正确配置主从复制并监控复制过程对于确保数据的一致性和可用性至关重要。\"]},\"440\":{\"h\":\"半同步复制\"},\"441\":{\"h\":\"工作原理\"},\"442\":{\"h\":\"优点\"},\"443\":{\"h\":\"缺点\"},\"444\":{\"h\":\"使用场景\"},\"445\":{\"h\":\"配置\"},\"446\":{\"h\":\"主从复制过程\"},\"447\":{\"h\":\"1. 建立复制连接\"},\"448\":{\"h\":\"2. 读取二进制日志位置\"},\"449\":{\"h\":\"3. 请求和接收二进制日志事件\"},\"450\":{\"h\":\"4. 写入中继日志\"},\"451\":{\"h\":\"5. 应用日志事件\"},\"452\":{\"h\":\"技术细节\"},\"453\":{\"h\":\"主服务器的bin dump thread的推送\"},\"454\":{\"h\":\"二进制日志的推送过程\"},\"455\":{\"h\":\"NAT基本流程简述\",\"t\":[\"路由器通过使用NAT（网络地址转换）机制来区分并正确地将入站的数据包路由到内部网络中的特定设备（如设备A或设备B）。这里涉及两个关键概念：NAT表和端口号。\"]},\"456\":{\"h\":\"NAT表\",\"t\":[\"NAT表是路由器用来跟踪内部网络设备（私有IP地址）与其对应的外部通信会话的关键数据结构。当设备A和设备B向外部世界发送数据包时，路由器会在NAT表中创建条目，记录以下信息：\",\"内部源IP地址：发送数据包的设备的私有IP地址。\",\"内部源端口：发送数据包使用的端口号。\",\"外部源IP地址：路由器的公共IP地址（NAT转换后的地址）。\",\"外部源端口：路由器分配给该会话的唯一端口号，用于区分不同的通信会话。\"]},\"457\":{\"h\":\"端口号的作用\",\"t\":[\"当路由器将内部IP地址转换为公共IP地址时，它会为每个会话分配一个唯一的外部端口号。这样，当从外部网络返回的数据包到达路由器时，路由器会查看该数据包的目标端口号，并通过NAT表中的映射来确定这个数据包应该被发送到内部网络中的哪个设备。\"]},\"458\":{\"h\":\"数据包路由的例子\",\"t\":[\"假设设备A（私有IP：192.168.1.10）和设备B（私有IP：192.168.1.11）分别与互联网上的服务器建立了通信会话。设备A可能使用端口12345与外部世界通信，而设备B使用端口54321。当这些设备通过路由器发送数据包时，路由器将使用其公共IP地址（假设为198.51.100.1），但为每个会话分配不同的外部端口号（例如，设备A的会话可能使用端口10000，设备B的会话使用端口20000）。\",\"入站数据包到设备A：当服务器回复设备A的请求，发送数据包到198.51.100.1:10000时，路由器检查NAT表，发现这个端口号与设备A的通信会话匹配，然后将数据包的目标IP和端口转换为192.168.1.10:12345，并转发给设备A。\"]},\"459\":{\"h\":\"创建vlan并连接到bridge\",\"t\":[\"要在一个基于Linux的系统上（比如OpenWrt）新建一个名为br3的桥接接口，并创建一个虚拟局域网（VLAN），你需要执行几个步骤。这些步骤包括创建桥接接口、将物理接口或已有的虚拟接口添加到桥接中，以及配置VLAN。以下是一个基本的指南：\"]},\"460\":{\"h\":\"1. 创建桥接接口\",\"t\":[\"首先，你需要安装bridge-utils包（如果尚未安装），它提供了管理桥接接口的工具。在OpenWrt上，你通常不需要手动安装，因为它内置了相应的功能。\",\"opkg update opkg install bridge-utils \",\"然后，创建桥接接口br3：\",\"ip link add name br3 type bridge ip link set br3 up \",\"这些命令创建了一个新的桥接接口br3并启动了它。\"]},\"461\":{\"h\":\"2. 添加接口到桥接中\",\"t\":[\"如果你想将一个或多个物理接口（比如eth0）或已有的虚拟接口（比如一个已配置的VLAN接口eth0.100）加入到桥接中，使用如下命令：\",\"ip link set eth0 master br3 # 或者对于一个VLAN接口 ip link set eth0.100 master br3 \"]},\"462\":{\"h\":\"3. 创建并配置VLAN\",\"t\":[\"创建VLAN通常意味着你在物理接口上创建一个带VLAN ID的虚拟接口。例如，如果你想在eth0接口上创建VLAN ID为100的VLAN，可以这样做：\",\"ip link add link eth0 name eth0.100 type vlan id 100 \",\"然后，你可以将这个VLAN接口添加到桥接中：\",\"ip link set eth0.100 master br3 \"]},\"463\":{\"h\":\"4. 配置IP地址（可选）\",\"t\":[\"你可能还想为br3接口配置一个IP地址，使其能够在网络中通信：\",\"ip addr add 192.168.3.1/24 dev br3 \",\"这里，192.168.3.1/24是桥接接口br3的IP地址和子网掩码，你应该根据你的网络配置来调整这个地址。\"]},\"464\":{\"h\":\"5. 保存配置\",\"t\":[\"在OpenWrt上，你需要使用/etc/config/network文件或uci命令来保存这些更改，以确保在重启后配置仍然有效。例如，使用uci命令设置桥接接口和VLAN：\",\"uci set network.br3=interface uci set network.br3.type='bridge' uci set network.br3.ifname='eth0.100' uci commit network /etc/init.d/network restart \",\"请注意，具体的命令和步骤可能会根据你的系统和版本有所不同。上述步骤提供了一个基本的指导，你可能需要根据你的具体需求调整命令。\"]},\"465\":{\"h\":\"网桥间的访问\",\"t\":[\"创建一个新的桥接接口br3并设置一个虚拟局域网（VLAN）本身不会自动产生一个新的SSID（Service Set Identifier，服务集标识符）。SSID通常与无线网络相关，是无线局域网的名称。要在OpenWrt等路由器操作系统上创建一个新的SSID并将其与特定的桥接接口（比如br3）关联，你需要进行一些额外的配置。\"]},\"466\":{\"h\":\"创建新SSID并关联到桥接接口\",\"t\":[\"配置无线网络：在OpenWrt上，你可以通过编辑/etc/config/wireless文件或使用uci命令来配置无线网络。你需要为新的SSID指定无线接口配置，并将其绑定到你的新桥接接口br3。\",\"无线接口与桥接：无线接口配置中，你可以通过设置option network 'br3'来指定该无线网络应该关联的桥接接口，确保无线客户端连接到这个SSID时，其流量会通过br3进行路由。\"]},\"467\":{\"h\":\"控制桥接接口之间的访问\",\"t\":[\"是否一个桥接接口（比如br3）能访问其他桥接接口（比如br0或br1）主要由路由和防火墙规则决定：\",\"路由规则：控制数据包从一个网络接口到另一个网络接口的流动。如果没有特定的路由规则来禁止或允许流量，那么这些桥接接口之间的通信将取决于默认的路由策略。\",\"防火墙规则：在OpenWrt等系统中，防火墙规则是用来细致控制网络间通信的。你可以设置规则来允许或阻止来自某个桥接接口的流量访问另一个接口。通过配置这些规则，你可以实现网络隔离，比如阻止访客网络（通过新的SSID连接的设备）访问内部网络。\"]},\"468\":{\"h\":\"示例：设置防火墙规则以隔离网络\",\"t\":[\"你可以使用OpenWrt的/etc/config/firewall文件或uci命令来创建防火墙规则，以防止br3上的设备访问br0上的设备。例如，创建一个规则禁止从br3到br0的所有流量：\",\"uci add firewall rule uci set firewall.@rule[-1].name=\\\"Deny-Access-From-br3-to-br0\\\" uci set firewall.@rule[-1].src=\\\"br3\\\" uci set firewall.@rule[-1].dest=\\\"br0\\\" uci set firewall.@rule[-1].proto=\\\"all\\\" uci set firewall.@rule[-1].target=\\\"REJECT\\\" uci commit firewall /etc/init.d/firewall restart \",\"请注意，具体的配置可能需要根据你的网络设置和OpenWrt版本进行调整。确保在应用任何改动之前备份相关配置文件。\"]},\"469\":{\"h\":\"post\",\"t\":[\"网络接口通常通过配置文件（如 /etc/config/network）进行定义和管理。当您创建一个新的网络（例如，一个专门为访客设计的无线网络）时，您会指定一个接口名称。这个名称随后用于系统的其他配置部分，包括防火墙规则、DHCP配置等。\"]},\"470\":{\"h\":\"如何创建访客网络接口\",\"t\":[\"在OpenWrt中添加网络接口：您可以通过Web界面（LuCI）或直接编辑配置文件来添加新的网络接口。例如，为访客网络添加一个新的无线网络SSID，并将其关联到一个新的网络接口（例如，br-guest）。\",\"配置文件示例：\",\"编辑 /etc/config/network 文件，添加如下配置以创建新的桥接接口（如果适用）：\",\"config interface 'guest' option type 'bridge' option ifname 'eth0.3' option proto 'static' option ipaddr '192.168.3.1' option netmask '255.255.255.0' \",\"这里，interface 'guest' 定义了一个新的网络接口名为 guest，您可以将其理解为 br-guest（如果您希望使用这个特定的名称，只需相应地修改配置即可）。\",\"更新防火墙配置：之后，您需要根据新创建的接口名（如 guest 或您选择的任何名称）更新防火墙配置，确保访客网络的隔离。\"]},\"471\":{\"h\":\"注意事项\",\"t\":[\"接口名称（如 br-guest）通常用于区分不同的网络（如主网络、访客网络、管理网络等）。\",\"在配置网络和防火墙规则时，确保使用正确的接口名称，以保障规则的正确应用。\",\"如果您通过Web界面（LuCI）操作，创建和配置网络接口的过程会更直观，系统会自动生成配置文件的相关条目。\"]},\"472\":{\"h\":\"防火墙规则\",\"t\":[\"要使用防火墙规则在同一网段内创建一个访客网络，您需要在网络层面上确保所有设备都可以获取IP地址（比如通过同一个DHCP服务器），同时在防火墙层面上隔离访客设备与主网络的通信。这种配置通常在企业或高级家庭网络中使用，允许访客接入网络而不访问内网资源。以下是一个基于OpenWrt（或类似系统）的示例步骤：\"]},\"473\":{\"h\":\"1. 创建访客网络接口（可选）\",\"t\":[\"如果您的设备允许，在同一个物理接口上创建一个虚拟接口（例如，一个新的SSID用于无线访客网络）。这一步骤不是必须的，因为您的目标是在相同的网段上实现隔离，但它有助于组织和管理目的。\"]},\"474\":{\"h\":\"2. 配置DHCP服务\",\"t\":[\"确保访客设备能够从同一个DHCP服务器获取IP地址。您可能需要配置DHCP服务器，以便为所有设备（包括访客设备）分配同一网段的IP地址。\"]},\"475\":{\"h\":\"3. 配置防火墙规则\",\"t\":[\"关键步骤在于配置防火墙规则，以隔离访客设备。您需要创建规则，以阻止访客网络中的设备访问主网络中的资源，但允许它们访问外部互联网。使用OpenWrt，您可以通过编辑/etc/config/firewall文件或使用Web界面（如果可用）来完成此操作。\"]},\"476\":{\"h\":\"示例防火墙规则\",\"t\":[\"以下是一个简单的例子，说明如何阻止访客网络访问内网资源：\",\"# 允许访客网络访问外部互联网 iptables -I FORWARD -i br-guest -o eth0 -j ACCEPT # 阻止访客网络访问内网（192.168.1.0/24为内网IP范围） iptables -I FORWARD -i br-guest -d 192.168.1.0/24 -j REJECT # 允许访客网络访问DHCP和DNS（如果需要） iptables -I INPUT -i br-guest -p udp --dport 67 -j ACCEPT iptables -I INPUT -i br-guest -p udp --dport 53 -j ACCEPT iptables -I INPUT -i br-guest -p tcp --dport 53 -j ACCEPT \",\"在这个例子中，br-guest是访客网络接口的名称，eth0是连接到互联网的外部接口。您需要根据实际情况调整接口名称和IP地址范围。\"]},\"477\":{\"h\":\"4. 应用并测试防火墙规则\",\"t\":[\"应用您的防火墙配置后，重启防火墙服务，然后测试配置以确保访客设备不能访问主网络，但可以正常上网。\",\"这种配置的关键在于正确设置防火墙规则，以实现网络隔离的同时保持网络通信的需要。务必在实际部署前彻底测试配置，以确保网络安全性和功能性符合预期。\"]},\"478\":{\"h\":\"创建虚拟网桥(bridge)接口\",\"t\":[\"在系统中增加一个新的桥接接口（比如br2）可以通过以下步骤完成。根据你的系统配置和可用的工具，你可以选择使用ip命令或brctl命令来完成这个任务。下面分别介绍这两种方法：\"]},\"479\":{\"h\":\"使用 命令添加桥接接口\",\"t\":[\"创建桥接接口： 使用ip link add命令创建一个新的桥接接口br2。\",\"sudo ip link add name br2 type bridge \",\"启用桥接接口： 创建接口后，需要将其启用。\",\"sudo ip link set br2 up \",\"（可选）分配IP地址： 如果需要，你可以为这个新的桥接接口分配IP地址。\",\"sudo ip addr add 192.168.2.1/24 dev br2 \",\"替换192.168.2.1/24为适合你网络环境的IP地址和子网掩码。\"]},\"480\":{\"h\":\"使用 命令添加桥接接口（如果可用）\",\"t\":[\"如果你的系统中安装有bridge-utils包，你也可以使用brctl工具来添加桥接接口。\",\"创建桥接接口：\",\"sudo brctl addbr br2 \",\"启用桥接接口： 接口创建后，同样需要启用它。这可以通过ip命令完成。\",\"sudo ip link set br2 up \",\"（可选）分配IP地址： 如需要，分配IP地址给新的桥接接口。\",\"sudo ip addr add 192.168.2.1/24 dev br2 \"]},\"481\":{\"h\":\"虚拟网桥创建网络示例\",\"t\":[\"在OpenWrt系统上创建一个名为br3的新桥接接口并在其上启动一个访客网络涉及几个步骤，包括配置网络接口、设置无线接入点和定义防火墙规则以隔离访客网络。以下是一个基本的步骤指南：\"]},\"482\":{\"h\":\"1. 创建桥接接口\",\"t\":[\"首先，确保br3接口尚未创建。如果需要创建，你可以参考之前关于如何添加桥接接口的说明。对于OpenWrt，通常你会直接在Web界面（LuCI）中操作或编辑/etc/config/network文件。\"]},\"483\":{\"h\":\"2. 配置网络接口\",\"t\":[\"编辑/etc/config/network文件，添加一个新的接口配置段落。例如，为br3创建一个新的接口并配置其为静态IP或DHCP客户端（根据你的网络需求）。\",\"config interface 'guest' option type 'bridge' option ifname 'br3' option proto 'static' option ipaddr '192.168.3.1' option netmask '255.255.255.0' option delegate '0' # 禁用IPv6分配，如果需要的话 \"]},\"484\":{\"h\":\"3. 配置无线网络\",\"t\":[\"接下来，在/etc/config/wireless文件中添加一个新的无线网络配置段落，将其绑定到刚刚创建的接口。你可能需要根据实际的无线硬件配置适当调整此部分。\",\"config wifi-iface 'guest_wifi' option device 'radio0' # 或你的无线设备标识符 option network 'guest' option mode 'ap' option ssid 'GuestNetwork' option encryption 'psk2' option key 'APasswordForGuests' \"]},\"485\":{\"h\":\"4. 更新防火墙规则\",\"t\":[\"为了隔离访客网络，你需要在/etc/config/firewall文件中添加相应的规则。这将确保访客网络的用户只能访问互联网，而不能访问你的主网络。\",\"config zone option name 'guest' option network 'guest' option input 'REJECT' option output 'ACCEPT' option forward 'REJECT' config forwarding option src 'guest' option dest 'wan' # 阻止访客网络访问私有IP地址（可选） config rule option name 'Guest LAN Isolation' option src 'guest' option dest 'lan' option proto 'all' option target 'DROP' \"]},\"486\":{\"h\":\"5. 应用更改\",\"t\":[\"修改配置文件后，需要重启网络和防火墙服务，使更改生效。\",\"/etc/init.d/network restart /etc/init.d/firewall restart \",\"或者，你也可以通过重启OpenWrt设备来应用更改。\"]},\"487\":{\"h\":\"注意\",\"t\":[\"请确保在操作之前备份所有相关的配置文件。\",\"根据你的OpenWrt版本和具体硬件，上述步骤中的一些选项可能需要调整。\",\"如果你不熟悉命令行操作，OpenWrt的Web界面（LuCI）提供了图形化的配置选项，可以通过它来完成大部分上述操作。\",\"这个基本指南应该能帮助你在OpenWrt系统上为访客创建一个隔离的网络环境。根据你的具体需求，你可能还需要进一步调整和优化网络配置。\"]},\"488\":{\"c\":[\"haha\"]},\"489\":{\"c\":[\"haha\"]},\"490\":{\"h\":\"php调用脚本的几种方法\",\"t\":[\"在PHP中调用并运行另一个PHP脚本的常见方法有几种，每种方法适用于不同的场景和需求。下面是几种实现方式：\"]},\"491\":{\"h\":\"1. 使用 或\",\"t\":[\"如果你需要另一个脚本中的代码直接在当前脚本中执行，并且希望共享变量和上下文，可以使用include或require语句。\",\"include 'path/to/another_script.php'; // 或者 require 'path/to/another_script.php'; \",\"这种方法适用于脚本之间密切相关，需要共享变量或执行环境的情况。\"]},\"492\":{\"h\":\"2. 使用 或\",\"t\":[\"如果你需要在后台运行一个独立的PHP脚本，可以使用shell_exec()或exec()函数。这将在命令行环境中启动一个新的PHP进程来运行指定的脚本。\",\"$output = shell_exec('php path/to/another_script.php'); echo $output; \",\"或者\",\"exec('php path/to/another_script.php', $output, $return_var); echo implode(\\\"\\\\n\\\", $output); \"]},\"493\":{\"h\":\"3. 使用 和相关函数\"},\"494\":{\"h\":\"注意事项\"},\"495\":{\"h\":\"python requirements记录依赖\",\"t\":[\"在Python中，使用pip install安装依赖不会在您的项目目录中创建任何文件来记录依赖。Python与Node.js不同，它没有一个与package.json直接对应的文件来跟踪项目依赖。不过，您可以通过创建一个requirements.txt文件来手动管理依赖。\"]},\"496\":{\"h\":\"创建\",\"t\":[\"记录依赖：您可以手动创建一个requirements.txt文件，在其中列出项目所需的所有包及其版本。例如：\",\"beautifulsoup4==4.9.3 requests==2.25.1 \",\"自动生成依赖列表：您也可以通过以下命令自动生成当前环境中所有已安装包的列表：\",\"pip freeze > requirements.txt \"]},\"497\":{\"h\":\"理解\"},\"498\":{\"h\":\"使用虚拟环境\"},\"499\":{\"h\":\"python反序列化字节流\"},\"500\":{\"h\":\"基本介绍\",\"t\":[\"pickle.loads() 是 Python 中用于从字节流中加载序列化对象的函数。pickle 是 Python 中的一种序列化模块，它能够将 Python 对象转换为字节流（即序列化），并在需要时将其重新加载为 Python 对象（即反序列化）。loads() 函数是 pickle 模块中用于反序列化操作的函数，它接受一个包含序列化对象的字节流，并返回相应的 Python 对象。\",\"以下是一个简单的示例，演示如何使用 pickle.loads() 来反序列化一个对象：\",\"import pickle # 定义一个字典对象 data = {'name': 'John', 'age': 30, 'city': 'New York'} # 将对象序列化为字节流 serialized_data = pickle.dumps(data) # 从字节流中加载对象 loaded_data = pickle.loads(serialized_data) print(loaded_data) \"]},\"501\":{\"h\":\"场景和使用\"},\"502\":{\"h\":\"常用beautifulsoup4操作\"},\"503\":{\"h\":\"基本使用\"},\"504\":{\"h\":\"常用API\"},\"505\":{\"h\":\"cat与重定向连用\",\"t\":[\"看到一段cat的用法：\",\"cat >>$HOME/.bash_profile <<EOF alias test=\\\"sudo /sbin/ifconfig en0 ether \\\\\\\\\\\\`openssl rand -hex 6 | sed 's/\\\\(..\\\\)/\\\\1:/g; s /.$//'\\\\\\\\\\\\`\\\" EOF \",\"cat >/etc/sudoers.d/test <<EOF Cmnd_Alias CMD_TEST = /sbin/ifconfig en0 ether * ALL ALL=NOPASSWD: CMD_TEST EOF \"]},\"506\":{\"h\":\"筛选ifconfig信息\",\"t\":[\"如果你只想查看带有br前缀的桥接接口的信息，可以使用ifconfig命令结合管道符（|）和grep命令来过滤输出。这里有两种常用方法来实现这一点：\"]},\"507\":{\"h\":\"方法1：直接过滤接口名称\",\"t\":[\"使用ifconfig命令列出所有接口，然后用grep命令过滤出以br开头的行：\",\"ifconfig | grep -E '^br' \",\"这个命令会列出所有以br开头的接口名称，但不会显示接口的详细信息。\"]},\"508\":{\"h\":\"方法2：过滤详细信息\",\"t\":[\"如果你想要看到这些接口的详细信息，可以先用ifconfig命令获取所有接口的详细信息，然后使用grep的上下文显示功能：\",\"ifconfig | grep -E -A 8 '^br' \",\"这里，-A 8选项告诉grep在匹配行之后显示额外的8行，因为接口的详细信息通常会跨越多行。调整-A后的数字可以根据你的需要显示更多或更少的上下文行。\"]},\"509\":{\"h\":\"方法3：使用 命令\",\"t\":[\"另外，如果你的系统中ip命令可用，它通常提供更现代和灵活的网络配置和查询功能。你可以使用ip命令结合grep来达到类似的目的：\",\"ip addr show | grep -E '^[0-9]+: br' \"]},\"510\":{\"h\":\"注意\"},\"511\":{\"h\":\"Vscode Could not create temporary directory\",\"t\":[\"sudo chown $USER ~/Library/Caches/com.microsoft.VSCode.ShipIt \"]},\"512\":{\"h\":\"CAP为什么不能同时满足\",\"t\":[\"CAP定理是分布式计算中的一个重要概念，由Eric Brewer在2000年提出。CAP代表一致性（Consistency）、可用性（Availability）、和分区容忍性（Partition tolerance）。简而言之，CAP定理指出，在一个分布式系统中，不可能同时满足以下三个条件：\",\"一致性（Consistency）：在分布式系统中，一致性指的是所有数据副本在同一时间内是否具有相同的值。也就是说，任何时刻，所有的客户端都能看到相同的数据。\",\"可用性（Availability）：可用性意味着每个请求都能收到一个响应，不管响应是成功还是失败。系统中的每个请求都能在有限的时间内得到处理，并且返回结果。\"]},\"513\":{\"h\":\"为什么CAP不能同时满足\"},\"514\":{\"h\":\"CPU缓存一致性\",\"t\":[\"CPU的缓存一致性问题指的是在多核CPU系统中，确保各个CPU核心的缓存中存储的相同内存地址的数据是一致的问题。这是并发计算中一个非常重要的概念，因为现代计算机系统中通常有多个处理器或核心，每个处理器都有自己的本地缓存。如果多个处理器同时对同一内存位置进行读写操作，而不进行适当的同步，就会导致数据不一致的问题。\"]},\"515\":{\"h\":\"举例\"},\"516\":{\"h\":\"状态变化\"},\"517\":{\"h\":\"HTTP Headers之Referer\"},\"518\":{\"h\":\"导读\"},\"519\":{\"h\":\"Referer\"},\"520\":{\"h\":\"构成\"},\"521\":{\"h\":\"语法\"},\"522\":{\"h\":\"例子\"},\"523\":{\"h\":\"Referrer-Policy\"},\"524\":{\"h\":\"在 HTML 里设置 referer Policy 信息\"},\"525\":{\"h\":\"与 CSS 集成\"},\"526\":{\"h\":\"参考\"},\"527\":{\"h\":\"HTTPS精要讲解\"},\"528\":{\"h\":\"导读\",\"t\":[\"HTTPS是HTTP基于TLS/SSL安全套阶层的安全通信标准，关于它的定义、结构不在本文讨论范围之内，HTTPS的精髓在于理解它是如何工作的，在这一点上网上多数博文长篇阔论，给人一种好像看了很多，但还是在很多细节上没有彻底理解的错觉。而本文主要就是要解决这些细节问题。\"]},\"529\":{\"h\":\"场景需求\"},\"530\":{\"h\":\"HTTPS通信过程\"},\"531\":{\"h\":\"交流过程\"},\"532\":{\"h\":\"如何生成服务器证书？\"},\"533\":{\"h\":\"总结\"},\"534\":{\"h\":\"cdn原理示例\",\"t\":[\"CDN（Content Delivery Network）是一种网络架构，旨在提高网络内容的交付速度和性能。其原理如下：\",\"内容缓存和分发：CDN在世界各地建立了多个分布式的数据中心（也称为边缘节点），这些节点存储了网站、应用程序或其他网络内容的副本。当用户请求访问某个内容时，CDN会将内容从最接近用户的边缘节点提供，而不是直接从源服务器提供。这样可以减少响应时间和网络拥塞，提高用户体验。\",\"就近访问：CDN的分布式架构使得用户能够就近访问内容，因为数据中心通常分布在全球各地的主要城市和网络枢纽。这样可以减少数据传输的延迟和丢包率。\",\"负载均衡：CDN会根据当前网络流量和边缘节点的负载情况，智能地将用户请求分配到最合适的节点。这样可以确保各个节点的负载均衡，避免单一节点过载。\",\"缓存更新：CDN会定期检查源服务器上的内容更新，并将新内容缓存到边缘节点。此外，CDN还会通过一些技术手段（如内容预取、内容预加载等）提前获取和缓存可能被请求的内容，以进一步提高性能。\",\"安全性增强：CDN通常提供一些安全功能，如DDoS攻击缓解、SSL加密等，以保护内容和用户数据安全。\"]},\"535\":{\"h\":\"docker rabbitmq集群搭建\",\"t\":[\"要使用Docker创建一个RabbitMQ集群，并将日志等重要文件映射到本机，你可以遵循以下步骤。这个过程涉及到使用Docker Compose来配置和启动RabbitMQ容器的集群，以及如何设置数据卷以映射重要文件。\"]},\"536\":{\"h\":\"1. 准备Docker Compose文件\"},\"537\":{\"h\":\"2. 启动RabbitMQ集群\"},\"538\":{\"h\":\"3. 设置集群节点\"},\"539\":{\"h\":\"4. 验证集群状态\"},\"540\":{\"h\":\"RABBITMQ_ERLANG_COOKIE\"},\"541\":{\"h\":\"Erlang Cookie的作用：\"},\"542\":{\"h\":\"如何使用：\"},\"543\":{\"h\":\"注意事项：\"},\"544\":{\"h\":\"RabbitMQ Docker Run 方式\"},\"545\":{\"h\":\"步骤1: 创建网络\"},\"546\":{\"h\":\"步骤2: 启动RabbitMQ节点\"},\"547\":{\"h\":\"启动第一个节点（rabbitmq1）\"},\"548\":{\"h\":\"启动第二个节点（rabbitmq2）\"},\"549\":{\"h\":\"启动第三个节点（rabbitmq3）\"},\"550\":{\"h\":\"步骤3: 配置RabbitMQ集群\"},\"551\":{\"h\":\"步骤4: 验证集群状态\"},\"552\":{\"h\":\"https(ssl)证书验证过程\",\"t\":[\"HTTPS证书验证是确保网络通信安全的关键步骤，主要涉及以下几个阶段：\"]},\"553\":{\"h\":\"1. 证书获取\",\"t\":[\"当用户通过浏览器访问一个HTTPS网站时，浏览器首先会向服务器请求其SSL/TLS证书。\"]},\"554\":{\"h\":\"2. 证书检查\",\"t\":[\"浏览器收到证书后进行以下检查：\"]},\"555\":{\"h\":\"a. 证书的有效期\",\"t\":[\"浏览器检查证书的有效期，确保证书当前是有效的，没有过期。\"]},\"556\":{\"h\":\"b. 证书颁发机构（CA）\",\"t\":[\"浏览器检查证书是否由一个受信任的证书颁发机构（CA）签发。浏览器和操作系统内置了受信任的CA列表。\"]},\"557\":{\"h\":\"c. 域名匹配\",\"t\":[\"浏览器检查证书中的主题备用名称（SAN）或者通用名称（CN）是否与请求的域名匹配。这确保了证书是为当前正在访问的网站颁发的。\"]},\"558\":{\"h\":\"d. 证书撤销列表（CRL）和在线证书状态协议（OCSP）\",\"t\":[\"浏览器可能会检查证书是否被撤销。这可以通过查询证书撤销列表（CRL）或使用在线证书状态协议（OCSP）来完成。\"]},\"559\":{\"h\":\"3. 证书链验证\",\"t\":[\"SSL/TLS证书可能由一个证书链组成，其中包括多个证书，从网站的证书（叶节点）到根CA证书。浏览器需要验证整个证书链，确保每个证书都由上一级证书签发。最顶层的根证书需要是浏览器内置信任的根证书。\"]},\"560\":{\"h\":\"4. 数字签名验证\",\"t\":[\"一旦证书链验证通过，浏览器将验证证书的数字签名。这是通过使用证书链中上一级证书的公钥来完成的。通过验证数字签名，浏览器可以确保证书是由CA签发的，并且自签发以来没有被篡改。\",\"使用CA的公钥解密证书中的签名，得到一个哈希值。\",\"浏览器对证书中除签名外的所有内容进行同样的哈希运算。\"]},\"561\":{\"h\":\"5. 加密通信\"},\"562\":{\"h\":\"interviewer\",\"t\":[\"多协程ffmpeg\",\"sync.Once原理\"]},\"563\":{\"h\":\"线程死锁怎么产生？怎么避免？\",\"t\":[\"死锁产生的四个必要条件：\",\"互斥：一个资源每次只能被一个进程使用\",\"请求与保持：一个进程因请求资源而阻塞时，不释放获得的资源\",\"不剥夺：进程已获得的资源，在未使用之前，不能强行剥夺\",\"循环等待：进程之间循环等待着资源\",\"避免死锁的方法：\",\"互斥条件不能破坏，因为加锁就是为了保证互斥\",\"一次性申请所有的资源，避免线程占有资源而且在等待其他资源\",\"占有部分资源的线程进一步申请其他资源时，如果申请不到，主动释放它占有的资源\",\"按序申请资源\"]},\"564\":{\"h\":\"rabbitmq消息可靠性保证？\"},\"565\":{\"h\":\"rabbitmq事务\"},\"566\":{\"h\":\"raocketmq的流式计算\"},\"567\":{\"h\":\"面向SOA\",\"t\":[\"简单对象访问协议（SOAP） • RESTful HTTP • Apache Thrift • Apache ActiveMQ • Java Message Service（JMS）\"]},\"568\":{\"h\":\"bilibili京东问题\"},\"569\":{\"h\":\"github java-learning\"},\"570\":{\"h\":\"raft\",\"t\":[\"Raft 协议是一种用于实现分布式系统中的一致性的算法，它被设计为易于理解和实现。Raft 协议的目标是确保集群中的多个节点能够在状态和数据上保持一致，即便在部分节点发生故障的情况下也能维持系统的正常运行。Raft 实现了一种称为 \\\"共识\\\" 的机制，通过共识，集群中的所有节点最终能够同意特定的值或状态。\",\"Raft 协议的工作过程可以概括为以下几个关键点：\"]},\"571\":{\"h\":\"1. 角色分配\",\"t\":[\"Raft 协议将集群中的节点分为三种角色：Leader（领导者）、Follower（跟随者）和Candidate（候选人）。集群在任何时候只能有一个 Leader，它负责处理客户端请求和数据复制。Follower 通常处于被动接收状态，而 Candidate 用于在 Leader 故障时选举新的 Leader。\"]},\"572\":{\"h\":\"2. 领导选举\",\"t\":[\"选举启动：当 Follower 在一定时间内没有收到来自 Leader 的消息时，它会变成 Candidate 并发起一次新的选举。\",\"投票：Candidate 为自己投票，并向其他节点请求投票。如果一个节点在当前的 \\\"选举期\\\" 内还没有投票，则它可以投票给 Candidate。\",\"选举成功：如果 Candidate 获得了集群大多数节点的投票，它就成为新的 Leader。\"]},\"573\":{\"h\":\"3. 日志复制\",\"t\":[\"日志条目：Leader 接收来自客户端的请求，将请求作为日志条目追加到自己的日志中。\",\"复制给 Follower：然后 Leader 将这些日志条目并行地复制到所有 Follower 节点上，并等待大多数 Follower 确认收到。\",\"提交条目：一旦这些条目被大多数节点接收，Leader 将条目标记为已提交，并通知 Follower 提交这些条目。\"]},\"574\":{\"h\":\"4. 安全性和一致性\",\"t\":[\"任期（Term）：Raft 通过任期概念来避免旧 Leader 的干扰。每次选举都会增加任期的计数，节点在投票时检查任期，确保数据的一致性和安全性。\",\"日志匹配：在日志复制过程中，Leader 会确保 Follower 的日志与自己的保持一致。如果发现不一致，Leader 会逐步回退其日志索引，直到找到一致的点，然后从那里开始重新复制。\"]},\"575\":{\"h\":\"5. 客户端交互\",\"t\":[\"客户端请求通常只能通过 Leader 进行处理。如果客户端连接到的是 Follower，Follower 会重定向请求到当前的 Leader。\",\"Raft 协议通过这些机制提供了一种相对简单且有效的方式来实现分布式系统的共识，确保了分布式系统中数据的一致性和系统的高可用性。\"]},\"576\":{\"h\":\"raft一致性\",\"t\":[\"Raft 协议体现强一致性主要通过以下几个关键机制：\",\"领导者选举与任期机制：Raft 通过任期概念（Term）来防止过时的领导者信息干扰当前的领导者和集群状态。每个任期开始时都会选举出一个新的领导者。这保证了在任何给定的任期内，最多只有一个领导者被选举出来，确保了领导者的唯一性。当节点接收到来自领导者的请求时，它们会检查请求中的任期号。如果请求的任期号小于节点的当前任期号，请求会被拒绝。这确保了只有当前任期的领导者能够影响集群状态，从而维护了一致性。\",\"日志复制：领导者将客户端的请求作为日志条目追加到自己的日志中，然后负责将这些日志条目复制到集群中的所有跟随者。只有当大多数节点都已复制了日志条目，领导者才会将该条目标记为已提交。这种机制确保了集群中大多数节点存有相同的日志副本，进一步保证了一致性。\",\"日志一致性检查：在日志复制过程中，领导者还负责确保自己的日志和跟随者的日志保持一致。领导者在复制新的日志条目之前，会检查跟随者的日志是否与自己的日志相匹配。如果发现不匹配，领导者会逐步减少复制的日志索引，直到找到匹配的日志条目为止。这确保了所有的跟随者最终将具有与领导者相同的日志顺序，进一步强化了数据的一致性。\",\"提交与应用日志条目：日志条目只有在被大多数节点复制后才会被提交，这保证了即使在发生故障转移的情况下，已提交的日志条目也不会丢失，因为任何新的领导者都会包含大多数节点已复制的所有提交条目。这意味着系统的状态变更（基于日志条目的应用）只有在保证了跨集群多数节点的一致性后才会发生。\",\"通过这些机制，Raft 协议确保了即使在网络分区、节点故障等不稳定的环境下，集群也能够维持强一致性，保证任何时刻系统状态的一致性，从而使得分布式系统作为一个整体运行，对外提供一致且可靠的服务。\"]},\"577\":{\"h\":\"rabbitmq集群\",\"t\":[\"Erlang 分布式系统：RabbitMQ 节点运行在一个 Erlang 节点上，这些 Erlang 节点形成一个分布式系统。在这个系统中，节点可以直接通过 Erlang 的消息传递机制相互通信。这种通信机制是透明的，允许跨节点的进程间通信就像是同一个节点上的进程间通信一样。\",\"队列镜像：当在 RabbitMQ 集群中配置镜像队列时，队列的主副本将位于创建队列的节点上，而其他节点可以有一个或多个镜像副本。这些副本会订阅到主副本的状态变更事件，包括消息的发布、确认和删除。\",\"消息同步：当生产者向镜像队列发送消息时，消息首先被发送到拥有队列主副本的节点。然后，这个节点负责将消息分发到其他拥有镜像副本的节点。这通过 Erlang 的分布式消息传递系统完成，确保所有副本都有相同的消息顺序和内容。\",\"故障转移和选举：如果持有队列主副本的节点失败，集群中的其他节点会通过一种选举机制来选出一个新的节点作为队列的主副本。这个过程同样依赖于 Erlang 的通信机制来协调和同步状态。\",\"心跳和健康检查：RabbitMQ 节点通过发送心跳消息来检测彼此的可达性和健康状态。这些心跳也是通过 Erlang 的分布式系统机制来实现的，帮助系统及时发现和响应节点故障。\"]},\"578\":{\"h\":\"rabbitmq延迟队列\"},\"579\":{\"h\":\"rabbitmq延迟队列的原理\"},\"580\":{\"h\":\"使用ffmpeg解决视频时间戳错乱的问题【QS】\",\"t\":[\"ffmpeg 提供了多种方式来处理和修正视频文件中的时间戳问题。虽然 -vsync 0 参数指示 ffmpeg 不对帧进行额外的同步（即，尽可能地保留源中的所有帧，包括那些可能导致时间戳问题的帧），但这并不意味着它会修正时间戳问题。相反，-vsync 参数的其他值可以用于处理不同的时间戳和帧率问题，从而间接地“修正”时间戳问题。\"]},\"581\":{\"h\":\"使用 修正时间戳问题\",\"t\":[\"-vsync 1 或 -vsync cfr（默认值）：这会使 ffmpeg 生成恒定帧率（CFR）的输出，通过在必要时重复或丢弃帧来确保每个输出帧都有连续的时间戳。这对于确保输出视频与预期的帧率匹配非常有用，特别是当源视频的时间戳不连续或不规则时。\",\"-vsync 2 或 -vsync vfr：这允许 ffmpeg 生成变帧率（VFR）的输出，保持源帧的原始时间戳。这在源视频的帧率确实变化时有用，但需要确保目标播放器或设备支持 VFR 视频。\",\"-vsync drop：这指示 ffmpeg 丢弃在视频转码过程中多余的帧，用于避免时间戳重叠或其他同步问题。这可能有助于修正源视频中由于帧过多而导致的时间戳不连续问题。\"]},\"582\":{\"h\":\"修正不连续或不规则时间戳\",\"t\":[\"如果目的是直接修正源视频中的时间戳不连续或不规则问题，可以考虑以下策略：\",\"重新封装（不重新编码）：通过使用 ffmpeg 仅重新封装视频流而不重新编码，有时可以解决轻微的时间戳问题。这可以通过指定与源相同的编解码器但输出到新容器实现，例如：\",\"ffmpeg -i input.mp4 -c copy output.mp4 \",\"强制恒定帧率：对于时间戳严重不连续的视频，强制将视频转码为恒定帧率（CFR）可能有助于“平滑”时间戳，并确保输出视频的播放更加平稳。这需要重新编码：\",\"ffmpeg -i input.mp4 -r 30 -vsync cfr output.mp4 \",\"在这里，-r 30 指定了希望的输出帧率为 30fps。\",\"总的来说，ffmpeg 提供了灵活的选项来处理时间戳问题，但最佳的处理方法取决于问题的具体性质和目标视频的要求。在某些情况下，简单的重新封装就足够了；在其他情况下，则可能需要更复杂的处理，如重新编码。\"]},\"583\":{\"h\":\"rabbitmq消息的可靠性保证\",\"t\":[\"确保RabbitMQ中消息的可靠性涉及到多个环节：生产者发送消息、消息在交换机（Exchange）中的路由，以及消息在队列中的存储。每个环节都可能存在消息丢失的风险，但可以通过一系列的配置和设计选择来最小化这种风险。\"]},\"584\":{\"h\":\"生产者到交换机\",\"t\":[\"确认机制（Publisher Confirms）：生产者可以开启确认机制，这样当消息被RabbitMQ服务器接收后，生产者将收到一个确认（Ack），这确保了消息已经成功到达服务器。如果消息未被确认，生产者可以选择重新发送。\",\"事务（Transactions）：虽然使用事务可以确保消息的可靠发送，但它会显著降低消息吞吐量。在大多数情况下，推荐使用发布确认（Publisher Confirms）而不是事务。\"]},\"585\":{\"h\":\"交换机到队列\",\"t\":[\"持久化消息（Message Durability）：将消息标记为持久化（通过设置消息的delivery_mode属性为2），这样即使RabbitMQ服务器重启，消息也不会丢失。需要注意的是，仅当队列也被声明为持久化时，消息的持久化才有效。\",\"持久化队列：声明队列时，确保队列是持久化的，这意味着队列将在服务器重启后继续存在。\",\"备份交换机（Alternate Exchange）：如果消息无法路由到任何队列（没有匹配的绑定），可以配置一个备份交换机，未路由的消息将被发送到这个备份交换机，从而避免丢失。\",\"死信队列（Dead Letter Exchanges）：对于无法处理的消息（例如，消息被拒绝或过期），可以将其路由到一个死信队列，而不是直接丢弃。\"]},\"586\":{\"h\":\"队列中的消息\",\"t\":[\"镜像队列（Mirrored Queues）：为了提高队列中消息的可用性，可以使用镜像队列将消息复制到集群中的多个节点。这样即使一个节点失败，消息仍然可以从另一个节点上的镜像队列中恢复。\",\"消息确认（Message Acknowledgments）：消费者处理消息后应发送确认（Ack）。这确保了消息一旦被消费者成功处理，就不会被RabbitMQ再次投递。可以配置消息的重试机制，以处理消费者处理消息失败的情况。\"]},\"587\":{\"h\":\"总结\",\"t\":[\"使用发布确认和事务确保生产者到交换机的消息可靠性。\",\"通过设置持久化消息和持久化队列，确保交换机到队列的消息不会因为服务器重启而丢失。\",\"使用备份交换机和死信队列处理无法路由的消息或无法处理的消息，避免消息丢失。\",\"利用镜像队列和消息确认机制来保证队列中的消息可靠性和高可用性。\",\"结合上述策略可以大大提高RabbitMQ中消息的可靠性，减少消息丢失的风险。然而，设计高可靠性的消息传递系统时，需要权衡性能与可靠性的需求，以及可能的资源开销。\"]},\"588\":{\"h\":\"rabbitmq集群简介\"},\"589\":{\"h\":\"集群的两种模式\",\"t\":[\"RabbitMQ 支持多种集群模式，主要为了提高消息中间件的可用性和扩展性。两种常见的 RabbitMQ 集群类型是：\",\"普通集群（Cluster）：在普通集群模式下，所有的 RabbitMQ 节点共享相同的 Erlang 分布式数据库，使得每个节点都能访问到完整的队列、交换器和绑定信息。消息队列的实际内容（消息）存储在创建队列的节点上，如果需要从其他节点访问队列中的消息，这些消息会通过集群内部的网络传输。这种模式主要提高了系统的可用性和负载均衡能力，但并不提供消息或队列的冗余。\",\"镜像队列集群（Mirrored Queues）：镜像队列是 RabbitMQ 提供的一种高可用性方案。在这种模式下，队列中的消息会被复制到集群中的其他节点，创建出队列的镜像。如果持有队列主副本的节点发生故障，集群中的一个镜像可以自动接管，成为新的主副本，保证消息的可用性。这种模式提高了消息的可靠性，但可能会增加消息传输的延迟，并且对网络带宽和节点之间的同步有更高的要求。\"]},\"590\":{\"h\":\"事务简介\"},\"591\":{\"h\":\"RabbitMQ 事务的主要操作包括：\"},\"592\":{\"h\":\"使用场景和性能考虑：\"},\"593\":{\"h\":\"替代方案：\"},\"594\":{\"h\":\"镜像队列集群通信\"},\"595\":{\"h\":\"WORDS\",\"t\":[\"Coherence /koʊˈhɪrəns/ n: 一致性\",\"Cache Coherence 缓存一致性\"]},\"596\":{\"h\":\"序列化的作用\"},\"597\":{\"h\":\"序列化的意义\",\"t\":[\"在内存中，结构体确实是以一种特定的方式（通常是字节）存储的，但是当您需要将数据传输到网络、保存到文件或者在不同的系统之间进行交互时，就需要考虑如何以一种通用的格式来表示和存储数据。这就是序列化的作用。\",\"具体来说，序列化是将数据转换为一种可以在网络上传输或者存储到持久化存储介质（如文件、数据库等）的格式，这个格式通常是一串字节或者一种通用的数据格式，比如 JSON、XML 或者二进制格式。\"]},\"598\":{\"h\":\"抢单的一点方案\",\"t\":[\"在使用消息队列（如RabbitMQ）处理类似于外卖应用中的抢单功能时，确保只有一个骑手能成功抢单，而其他骑手则无法抢单，是一个典型的竞争条件问题。以下是一种可能的解决方案，使用消息队列来实现这一需求：\"]},\"599\":{\"h\":\"1. 使用单一消费者模式\",\"t\":[\"一种方法是确保只有一个消费者（骑手）能够接收到订单消息。但这种方法并不适用于本场景，因为我们希望所有骑手都有平等的机会去抢单。\"]},\"600\":{\"h\":\"2. 发布订单到所有骑手，但仅允许第一个响应的骑手获得订单\",\"t\":[\"更合适的方法是：\",\"发布订单消息：当一个订单产生时，通过消息队列广播这个订单给所有附近的骑手。这可以通过发布/订阅模式实现，其中每个骑手都订阅了某个特定的订单通知主题。\",\"骑手响应：骑手收到订单消息后，尝试通过另一个API接口抢单。这个抢单的API需要设计成幂等的，并且能够处理并发请求，确保只有第一个成功的骑手能抢到订单。\",\"处理并发：在抢单API接口中，使用数据库的唯一约束、事务、乐观锁或悲观锁等机制来保证即便多个骑手几乎同时响应，也只能有一个骑手成功处理订单。一旦订单被某个骑手成功接单，订单的状态就会更新，后续的抢单尝试将因为订单状态已变更而失败。\"]},\"601\":{\"h\":\"实现细节：\",\"t\":[\"订单状态管理：在数据库中为订单设计一个状态字段，初始状态是“待接单”。当骑手尝试接单时，API首先检查订单状态，只有当状态仍然是“待接单”时，才允许进一步的处理。\",\"乐观锁：可以为订单表增加一个版本号字段。骑手尝试接单时，提交当前的版本号。如果版本号匹配，则接单成功，并且版本号加一。如果不匹配，表示其他骑手已经成功接单，当前尝试失败。\"]},\"602\":{\"h\":\"优化：\"},\"603\":{\"h\":\"乐观锁如何保证原子性\"},\"604\":{\"h\":\"如何保证原子性\"},\"605\":{\"h\":\"处理并发更新\"},\"606\":{\"h\":\"总结\"},\"607\":{\"h\":\"解决ffmpeg使用nohup挂起问题\",\"t\":[\"ffmpeg 默认使用stdin交互，当使用nohup后台启动后，由于没有了输入交互，所以ffmpeg选择了挂起等待， 解决方案有两个：\"]},\"608\":{\"h\":\"指定 选项\",\"t\":[\"nohup ffmpeg -nostdin -i \\\"xxx.index.m3u8\\\" -c copy -bsf:a aac_adtstoasc output.mp4 > output.log 2>&1 & echo $! > output.pid \"]},\"609\":{\"h\":\"重定向输入\",\"t\":[\"nohup ffmpeg -loglevel warning error -i \\\"xxx.m3u8\\\" -c copy -bsf:a aac_adtstoasc output.mp4 > output.log 2>&1 < /dev/null & echo $! > output.pid \"]},\"610\":{\"h\":\"命令解释\"},\"611\":{\"h\":\"ffmepg的日志分级\"},\"612\":{\"h\":\"Chrome资源覆盖率\"},\"613\":{\"h\":\"导读\",\"t\":[\"我们经常在Chrome里面调试网页，以下演示了如何查看脚本资源代码的使用率\",\"可以看到演示中的Unused Bytes是很高的。\"]},\"614\":{\"h\":\"XSS攻击介绍\"},\"615\":{\"h\":\"导读\",\"t\":[\"XSS 攻击是非常常见的网页攻击了，网上有很多资料，但我始终想写一个简单的总结。\"]},\"616\":{\"h\":\"何为 XSS?\",\"t\":[\"XSS(Cross site script)指利用浏览器的特性，像指定网页提交特殊字符造成浏览器解析运行的一种攻击手段。XSS 有几种，个人觉得记这些意义不大，因此这里不再赘述，有兴趣的朋友可以在网上搜一下。\"]},\"617\":{\"h\":\"如何产生 XSS\",\"t\":[\"XSS 攻击主要来自于用户的输入，如果你的站点存在着 XSS 漏洞，那么用户就可以进行 XSS 攻击，通过运行脚本代码，用户可以获取譬如 Cookie 等较为敏感的信息。\"]},\"618\":{\"h\":\"一个 XSS 攻击的例子\",\"t\":[\"这里我引用LearnKu的两张图来说明 XSS 攻击事如何发生的 在原文中，作者使用了 所见即所得 编辑器，指出虽然所见即所得编辑器过滤了特殊的字符，但依然可能发生 XSS 攻击，原因在于非法用户可能通过其它手段提交数据：\",\"使用 Chrome devtools 提交数据 刷新页面发生 XSS 攻击\"]},\"619\":{\"h\":\"监测XSS漏洞\"},\"620\":{\"h\":\"防范 XSS 攻击\"},\"621\":{\"h\":\"其它安全措施\"},\"622\":{\"h\":\"参考\"},\"623\":{\"h\":\"使用OpenSSL自签名证书\"},\"624\":{\"h\":\"导读\",\"t\":[\"网上关于自签证书的博客资料可以说是很多了，但其中的很多写的都是含糊不清的，此篇文章将会尽量清晰的描述自签名证书和创建CA为自己的服务器颁发证书。\"]},\"625\":{\"h\":\"什么是数字证书和数字签名\",\"t\":[\"对于这个问题，阮一峰有一篇 文章 比较形象的解释了这个问题，此处，我们主要记录如何生成。\"]},\"626\":{\"h\":\"创建CA颁发数字证书\",\"t\":[\"要给我们的服务器颁发一个数字证书，我们首先需要自己创建一个证书颁发机构 CA ，通常情况下，这个CA是真实的颁发机构，我们使用Chrome访问的https网页时会出现一把锁，这些都是真实的CA颁发的，因此浏览器对此是信任的。\",\"为CA生成一个长度为1024的私钥\",\"openssl genrsa -out ca.key 1024 \"]},\"627\":{\"h\":\"生成服务器私钥\"},\"628\":{\"h\":\"生成服务器证书申请文件\"},\"629\":{\"h\":\"使用CA证书签名服务器证书文件\"},\"630\":{\"h\":\"自签名证书\"},\"631\":{\"h\":\"其它命令\"},\"632\":{\"h\":\"查看证书申请文件\"},\"633\":{\"h\":\"指定证书请求文件中的签名算法\"},\"634\":{\"h\":\"验证请求文件的数字签名（验证文件是否被篡改）\"},\"635\":{\"h\":\"\",\"t\":[\"404 Not Found\"]}},\"dirtCount\":0,\"index\":[[\"验证文件是否被篡改\",{\"0\":{\"634\":1}}],[\"验证请求文件的数字签名\",{\"0\":{\"634\":1}}],[\"验证集群状态\",{\"0\":{\"539\":1,\"551\":1}}],[\"比较形象的解释了这个问题\",{\"1\":{\"625\":1}}],[\"比如通过同一个dhcp服务器\",{\"1\":{\"472\":1}}],[\"比如阻止访客网络\",{\"1\":{\"467\":1}}],[\"比如br2\",{\"1\":{\"478\":1}}],[\"比如br0或br1\",{\"1\":{\"467\":1}}],[\"比如br3\",{\"1\":{\"465\":1,\"467\":1}}],[\"比如一个已配置的vlan接口eth0\",{\"1\":{\"461\":1}}],[\"比如eth0\",{\"1\":{\"461\":1}}],[\"比如openwrt\",{\"1\":{\"459\":1}}],[\"比如在java中的java\",{\"1\":{\"376\":1}}],[\"比如操作系统的开发或嵌入式系统编程中\",{\"1\":{\"375\":1}}],[\"比如并行执行的线程\",{\"1\":{\"374\":1}}],[\"比如\",{\"1\":{\"113\":1,\"597\":1}}],[\"阮一峰有一篇\",{\"1\":{\"625\":1}}],[\"什么是数字证书和数字签名\",{\"0\":{\"625\":1}}],[\"刷新页面发生\",{\"1\":{\"618\":1}}],[\"漏洞\",{\"1\":{\"617\":1}}],[\"像指定网页提交特殊字符造成浏览器解析运行的一种攻击手段\",{\"1\":{\"616\":1}}],[\"何为\",{\"0\":{\"616\":1}}],[\"攻击事如何发生的\",{\"1\":{\"618\":1}}],[\"攻击的例子\",{\"0\":{\"618\":1}}],[\"攻击\",{\"0\":{\"620\":1},\"1\":{\"617\":1,\"618\":2}}],[\"攻击主要来自于用户的输入\",{\"1\":{\"617\":1}}],[\"攻击是非常常见的网页攻击了\",{\"1\":{\"615\":1}}],[\"攻击和其他安全威胁\",{\"1\":{\"76\":1}}],[\"优化\",{\"0\":{\"602\":1}}],[\"优点\",{\"0\":{\"187\":1,\"442\":1}}],[\"乐观锁如何保证原子性\",{\"0\":{\"603\":1}}],[\"乐观锁\",{\"1\":{\"601\":1}}],[\"乐观锁或悲观锁等机制来保证即便多个骑手几乎同时响应\",{\"1\":{\"600\":1}}],[\"才允许进一步的处理\",{\"1\":{\"601\":1}}],[\"待接单\",{\"1\":{\"601\":2}}],[\"初始状态是\",{\"1\":{\"601\":1}}],[\"初始化为\",{\"1\":{\"313\":1}}],[\"初始化为零值\",{\"1\":{\"194\":1}}],[\"初始化一个结构体实例\",{\"1\":{\"159\":1}}],[\"初始化结构体的方式多样\",{\"1\":{\"159\":1}}],[\"初始化和拉取子模块更新\",{\"0\":{\"101\":1}}],[\"后续的抢单尝试将因为订单状态已变更而失败\",{\"1\":{\"600\":1}}],[\"后进先出\",{\"1\":{\"294\":1}}],[\"订单状态管理\",{\"1\":{\"601\":1}}],[\"订单的状态就会更新\",{\"1\":{\"600\":1}}],[\"订阅模式实现\",{\"1\":{\"600\":1}}],[\"订阅等多种消息通信模式\",{\"1\":{\"9\":1}}],[\"尝试通过另一个api接口抢单\",{\"1\":{\"600\":1}}],[\"骑手尝试接单时\",{\"1\":{\"601\":1}}],[\"骑手收到订单消息后\",{\"1\":{\"600\":1}}],[\"骑手响应\",{\"1\":{\"600\":1}}],[\"骑手\",{\"1\":{\"599\":1}}],[\"抢单的一点方案\",{\"0\":{\"598\":1}}],[\"成为新的主副本\",{\"1\":{\"589\":1}}],[\"成为处理读取密集型和写入密集型应用的理想选择\",{\"1\":{\"22\":1}}],[\"普通集群\",{\"1\":{\"589\":1}}],[\"普通读写文件\",{\"0\":{\"292\":1}}],[\"两种常见的\",{\"1\":{\"589\":1}}],[\"两者实现的一点影响\",{\"0\":{\"232\":1}}],[\"减少消息丢失的风险\",{\"1\":{\"587\":1}}],[\"减少了系统间的耦合\",{\"1\":{\"9\":1}}],[\"利用镜像队列和消息确认机制来保证队列中的消息可靠性和高可用性\",{\"1\":{\"587\":1}}],[\"消费者处理消息后应发送确认\",{\"1\":{\"586\":1}}],[\"消息\",{\"1\":{\"589\":1}}],[\"消息队列的实际内容\",{\"1\":{\"589\":1}}],[\"消息确认\",{\"1\":{\"586\":1}}],[\"消息仍然可以从另一个节点上的镜像队列中恢复\",{\"1\":{\"586\":1}}],[\"消息被拒绝或过期\",{\"1\":{\"585\":1}}],[\"消息的持久化才有效\",{\"1\":{\"585\":1}}],[\"消息也不会丢失\",{\"1\":{\"585\":1}}],[\"消息在交换机\",{\"1\":{\"583\":1}}],[\"消息首先被发送到拥有队列主副本的节点\",{\"1\":{\"577\":1}}],[\"消息同步\",{\"1\":{\"577\":1}}],[\"消息持久化\",{\"1\":{\"9\":1}}],[\"镜像队列是\",{\"1\":{\"589\":1}}],[\"镜像队列集群通信\",{\"0\":{\"594\":1}}],[\"镜像队列集群\",{\"1\":{\"589\":1}}],[\"镜像队列\",{\"1\":{\"586\":1}}],[\"死信队列\",{\"1\":{\"585\":1}}],[\"死锁产生的四个必要条件\",{\"1\":{\"563\":1}}],[\"死锁的预防\",{\"1\":{\"170\":1}}],[\"备份交换机\",{\"1\":{\"585\":1}}],[\"声明队列时\",{\"1\":{\"585\":1}}],[\"声音\",{\"1\":{\"418\":1}}],[\"交换器和绑定信息\",{\"1\":{\"589\":1}}],[\"交换机到队列\",{\"0\":{\"585\":1}}],[\"交流过程\",{\"0\":{\"531\":1}}],[\"生产者可以选择重新发送\",{\"1\":{\"584\":1}}],[\"生产者可以开启确认机制\",{\"1\":{\"584\":1}}],[\"生产者将收到一个确认\",{\"1\":{\"584\":1}}],[\"生产者到交换机\",{\"0\":{\"584\":1}}],[\"生产者发送消息\",{\"1\":{\"583\":1}}],[\"生成服务器证书申请文件\",{\"0\":{\"628\":1}}],[\"生成服务器私钥\",{\"0\":{\"627\":1}}],[\"生成变帧率\",{\"1\":{\"581\":1}}],[\"生成恒定帧率\",{\"1\":{\"581\":1}}],[\"生成哈希值\",{\"1\":{\"272\":1}}],[\"生成客户端id\",{\"1\":{\"244\":1}}],[\"生成报表\",{\"1\":{\"10\":1}}],[\"平滑\",{\"1\":{\"582\":1}}],[\"平台中的两个关键组件\",{\"1\":{\"104\":1}}],[\"仅当队列也被声明为持久化时\",{\"1\":{\"585\":1}}],[\"仅重新封装视频流而不重新编码\",{\"1\":{\"582\":1}}],[\"仅使用volatile是不足以防止并发问题的\",{\"1\":{\"376\":1}}],[\"丢弃在视频转码过程中多余的帧\",{\"1\":{\"581\":1}}],[\"尽可能地保留源中的所有帧\",{\"1\":{\"580\":1}}],[\"尽管在\",{\"1\":{\"313\":1}}],[\"尽管这些类型在技术上是引用类型\",{\"1\":{\"311\":1}}],[\"尽管数据操作是在单线程中进行的\",{\"1\":{\"20\":1}}],[\"帮助系统及时发现和响应节点故障\",{\"1\":{\"577\":1}}],[\"心跳和健康检查\",{\"1\":{\"577\":1}}],[\"故障转移和选举\",{\"1\":{\"577\":1}}],[\"故障时选举新的\",{\"1\":{\"571\":1}}],[\"队列中的消息会被复制到集群中的其他节点\",{\"1\":{\"589\":1}}],[\"队列中的消息\",{\"0\":{\"586\":1}}],[\"队列的主副本将位于创建队列的节点上\",{\"1\":{\"577\":1}}],[\"队列镜像\",{\"1\":{\"577\":1}}],[\"已提交的日志条目也不会丢失\",{\"1\":{\"576\":1}}],[\"已经声明的defer语句在panic向上传递到它们的函数时仍然会执行\",{\"1\":{\"297\":1}}],[\"直到找到匹配的日志条目为止\",{\"1\":{\"576\":1}}],[\"直到找到一致的点\",{\"1\":{\"574\":1}}],[\"直接过滤接口名称\",{\"0\":{\"507\":1}}],[\"直接初始化\",{\"1\":{\"315\":1}}],[\"节点共享相同的\",{\"1\":{\"589\":1}}],[\"节点通过发送心跳消息来检测彼此的可达性和健康状态\",{\"1\":{\"577\":1}}],[\"节点可以直接通过\",{\"1\":{\"577\":1}}],[\"节点形成一个分布式系统\",{\"1\":{\"577\":1}}],[\"节点运行在一个\",{\"1\":{\"577\":1}}],[\"节点故障等不稳定的环境下\",{\"1\":{\"576\":1}}],[\"节点在投票时检查任期\",{\"1\":{\"574\":1}}],[\"节点上\",{\"1\":{\"573\":1,\"577\":1}}],[\"任期\",{\"1\":{\"574\":1}}],[\"任何时刻\",{\"1\":{\"512\":1}}],[\"复制给\",{\"1\":{\"573\":1}}],[\"复合类型\",{\"1\":{\"194\":1}}],[\"日志一致性检查\",{\"1\":{\"576\":1}}],[\"日志匹配\",{\"1\":{\"574\":1}}],[\"日志条目只有在被大多数节点复制后才会被提交\",{\"1\":{\"576\":1}}],[\"日志条目\",{\"1\":{\"573\":1}}],[\"日志复制\",{\"0\":{\"573\":1},\"1\":{\"576\":1}}],[\"获得了集群大多数节点的投票\",{\"1\":{\"572\":1}}],[\"获取键的节点\",{\"1\":{\"272\":1}}],[\"获取命令行输入的文件路径\",{\"1\":{\"217\":1}}],[\"获取k\",{\"1\":{\"167\":1}}],[\"获取\",{\"0\":{\"167\":1}}],[\"获取某数据类型长度\",{\"0\":{\"42\":1}}],[\"投票\",{\"1\":{\"572\":1}}],[\"选项\",{\"0\":{\"608\":1}}],[\"选举成功\",{\"1\":{\"572\":1}}],[\"选举期\",{\"1\":{\"572\":1}}],[\"选举启动\",{\"1\":{\"572\":1}}],[\"选择正确的编码可以在满足质量要求的同时最小化文件大小\",{\"1\":{\"432\":1}}],[\"选择值接收者还是指针接收者\",{\"1\":{\"230\":1}}],[\"选择使用哪一个\",{\"0\":{\"197\":1}}],[\"选择\",{\"0\":{\"178\":1}}],[\"选择排序是一种简单直观的排序算法\",{\"1\":{\"143\":1}}],[\"选择排序\",{\"0\":{\"143\":1,\"148\":1},\"1\":{\"141\":1}}],[\"候选人\",{\"1\":{\"571\":1}}],[\"跟随者\",{\"1\":{\"571\":1}}],[\"领导者会逐步减少复制的日志索引\",{\"1\":{\"576\":1}}],[\"领导者在复制新的日志条目之前\",{\"1\":{\"576\":1}}],[\"领导者还负责确保自己的日志和跟随者的日志保持一致\",{\"1\":{\"576\":1}}],[\"领导者才会将该条目标记为已提交\",{\"1\":{\"576\":1}}],[\"领导者将客户端的请求作为日志条目追加到自己的日志中\",{\"1\":{\"576\":1}}],[\"领导者选举与任期机制\",{\"1\":{\"576\":1}}],[\"领导者\",{\"1\":{\"571\":1}}],[\"领导选举\",{\"0\":{\"572\":1},\"1\":{\"176\":1}}],[\"角色分配\",{\"0\":{\"571\":1}}],[\"集群类型是\",{\"1\":{\"589\":1}}],[\"集群的两种模式\",{\"0\":{\"589\":1}}],[\"集群中的一个镜像可以自动接管\",{\"1\":{\"589\":1}}],[\"集群中的其他节点会通过一种选举机制来选出一个新的节点作为队列的主副本\",{\"1\":{\"577\":1}}],[\"集群中的所有节点最终能够同意特定的值或状态\",{\"1\":{\"570\":1}}],[\"集群中配置镜像队列时\",{\"1\":{\"577\":1}}],[\"集群也能够维持强一致性\",{\"1\":{\"576\":1}}],[\"集群在任何时候只能有一个\",{\"1\":{\"571\":1}}],[\"集成\",{\"0\":{\"525\":1}}],[\"面向soa\",{\"0\":{\"567\":1}}],[\"按序申请资源\",{\"1\":{\"563\":1}}],[\"占有部分资源的线程进一步申请其他资源时\",{\"1\":{\"563\":1}}],[\"占用2个字节\",{\"1\":{\"38\":1}}],[\"循环等待\",{\"1\":{\"563\":1}}],[\"循环引用\",{\"0\":{\"212\":1}}],[\"互斥条件不能破坏\",{\"1\":{\"563\":1}}],[\"互斥\",{\"1\":{\"563\":1}}],[\"怎么避免\",{\"0\":{\"563\":1}}],[\"线程死锁怎么产生\",{\"0\":{\"563\":1}}],[\"得到一个哈希值\",{\"1\":{\"560\":1}}],[\"叶节点\",{\"1\":{\"559\":1}}],[\"域名匹配\",{\"0\":{\"557\":1}}],[\"签发\",{\"1\":{\"556\":1}}],[\"没有匹配的绑定\",{\"1\":{\"585\":1}}],[\"没有过期\",{\"1\":{\"555\":1}}],[\"没有接口实现的限制\",{\"1\":{\"118\":1}}],[\"浏览器对证书中除签名外的所有内容进行同样的哈希运算\",{\"1\":{\"560\":1}}],[\"浏览器可以确保证书是由ca签发的\",{\"1\":{\"560\":1}}],[\"浏览器可能会检查证书是否被撤销\",{\"1\":{\"558\":1}}],[\"浏览器将验证证书的数字签名\",{\"1\":{\"560\":1}}],[\"浏览器需要验证整个证书链\",{\"1\":{\"559\":1}}],[\"浏览器和操作系统内置了受信任的ca列表\",{\"1\":{\"556\":1}}],[\"浏览器检查证书中的主题备用名称\",{\"1\":{\"557\":1}}],[\"浏览器检查证书是否由一个受信任的证书颁发机构\",{\"1\":{\"556\":1}}],[\"浏览器检查证书的有效期\",{\"1\":{\"555\":1}}],[\"浏览器收到证书后进行以下检查\",{\"1\":{\"554\":1}}],[\"浏览器首先会向服务器请求其ssl\",{\"1\":{\"553\":1}}],[\"证书链验证\",{\"0\":{\"559\":1}}],[\"证书撤销列表\",{\"0\":{\"558\":1}}],[\"证书颁发机构\",{\"0\":{\"556\":1}}],[\"证书的有效期\",{\"0\":{\"555\":1}}],[\"证书检查\",{\"0\":{\"554\":1}}],[\"证书获取\",{\"0\":{\"553\":1}}],[\"证书验证过程\",{\"0\":{\"552\":1}}],[\"步骤4\",{\"0\":{\"551\":1}}],[\"步骤3\",{\"0\":{\"550\":1}}],[\"步骤2\",{\"0\":{\"546\":1}}],[\"步骤1\",{\"0\":{\"545\":1}}],[\"方式\",{\"0\":{\"544\":1}}],[\"方法3\",{\"0\":{\"509\":1}}],[\"方法2\",{\"0\":{\"508\":1}}],[\"方法1\",{\"0\":{\"507\":1}}],[\"方法是点击菜单中的\",{\"1\":{\"364\":1}}],[\"方法将返回\",{\"1\":{\"307\":1}}],[\"方法只会读取前\",{\"1\":{\"301\":1}}],[\"方法会从连接中读取数据\",{\"1\":{\"300\":1}}],[\"方法\",{\"0\":{\"414\":1,\"415\":1},\"1\":{\"300\":1}}],[\"方法可以通过指针接收者\",{\"1\":{\"227\":1}}],[\"准备docker\",{\"0\":{\"536\":1}}],[\"安全性和一致性\",{\"0\":{\"574\":1}}],[\"安全性增强\",{\"1\":{\"534\":1}}],[\"安装必要软件\",{\"1\":{\"409\":1}}],[\"智能地将用户请求分配到最合适的节点\",{\"1\":{\"534\":1}}],[\"就需要考虑如何以一种通用的格式来表示和存储数据\",{\"1\":{\"597\":1}}],[\"就不会被rabbitmq再次投递\",{\"1\":{\"586\":1}}],[\"就近访问\",{\"1\":{\"534\":1}}],[\"就会导致数据不一致的问题\",{\"1\":{\"514\":1}}],[\"旨在提高网络内容的交付速度和性能\",{\"1\":{\"534\":1}}],[\"场景需求\",{\"0\":{\"529\":1}}],[\"场景和使用\",{\"0\":{\"501\":1}}],[\"信息\",{\"0\":{\"524\":1}}],[\"信号是一种小的消息\",{\"1\":{\"388\":1}}],[\"信号是\",{\"1\":{\"388\":1}}],[\"信号\",{\"1\":{\"388\":1}}],[\"里设置\",{\"0\":{\"524\":1}}],[\"状态变化\",{\"0\":{\"516\":1}}],[\"举例\",{\"0\":{\"515\":1}}],[\"举例说明\",{\"0\":{\"66\":1,\"431\":1}}],[\"~\",{\"1\":{\"511\":1}}],[\"另外\",{\"1\":{\"509\":1}}],[\"另一个连接到内部网络\",{\"1\":{\"393\":1}}],[\"8选项告诉grep在匹配行之后显示额外的8行\",{\"1\":{\"508\":1}}],[\"8\",{\"1\":{\"508\":1}}],[\"8080\",{\"1\":{\"74\":1,\"217\":1,\"271\":2}}],[\"过滤详细信息\",{\"0\":{\"508\":1}}],[\"筛选ifconfig信息\",{\"0\":{\"506\":1}}],[\"`\",{\"1\":{\"505\":1}}],[\"`openssl\",{\"1\":{\"505\":1}}],[\"看到一段cat的用法\",{\"1\":{\"505\":1}}],[\"演示如何使用\",{\"1\":{\"500\":1}}],[\"模块中用于反序列化操作的函数\",{\"1\":{\"500\":1}}],[\"模仿老照片的风格\",{\"1\":{\"47\":1}}],[\"记录依赖\",{\"1\":{\"496\":1}}],[\"记录以下信息\",{\"1\":{\"456\":1}}],[\"$user\",{\"1\":{\"511\":1}}],[\"$\",{\"1\":{\"505\":1,\"608\":1,\"609\":1}}],[\"$return\",{\"1\":{\"492\":1}}],[\"$output\",{\"1\":{\"492\":4}}],[\"阻止访客网络访问私有ip地址\",{\"1\":{\"485\":1}}],[\"阻止访客网络访问内网\",{\"1\":{\"476\":1}}],[\"zone\",{\"1\":{\"485\":1}}],[\"禁用ipv6分配\",{\"1\":{\"483\":1}}],[\"虚拟网桥创建网络示例\",{\"0\":{\"481\":1}}],[\"虚拟地址和页的总结\",{\"0\":{\"277\":1}}],[\"虚拟地址和页的作用\",{\"0\":{\"276\":1}}],[\"虚拟地址是指操作系统为程序提供的地址空间\",{\"1\":{\"274\":1}}],[\"替换192\",{\"1\":{\"479\":1}}],[\"替代方案\",{\"0\":{\"5\":1,\"593\":1}}],[\"务必在实际部署前彻底测试配置\",{\"1\":{\"477\":1}}],[\"6\",{\"1\":{\"505\":1}}],[\"67\",{\"1\":{\"476\":1}}],[\"64\",{\"1\":{\"142\":1,\"143\":1,\"144\":1,\"145\":1}}],[\"64位环境占用字节情况\",{\"0\":{\"41\":1}}],[\"64位机器字长为8字节\",{\"1\":{\"37\":1}}],[\"说明如何阻止访客网络访问内网资源\",{\"1\":{\"476\":1}}],[\"管理网络等\",{\"1\":{\"471\":1}}],[\"管理控制器\",{\"1\":{\"260\":1}}],[\"访客网络\",{\"1\":{\"471\":1}}],[\"访问内部网络\",{\"1\":{\"467\":1}}],[\"之后\",{\"1\":{\"470\":1}}],[\"之间进行通信\",{\"1\":{\"310\":1}}],[\"您也可以通过以下命令自动生成当前环境中所有已安装包的列表\",{\"1\":{\"496\":1}}],[\"您需要根据实际情况调整接口名称和ip地址范围\",{\"1\":{\"476\":1}}],[\"您需要根据新创建的接口名\",{\"1\":{\"470\":1}}],[\"您需要创建规则\",{\"1\":{\"475\":1}}],[\"您需要在网络层面上确保所有设备都可以获取ip地址\",{\"1\":{\"472\":1}}],[\"您会指定一个接口名称\",{\"1\":{\"469\":1}}],[\"您可能需要配置dhcp服务器\",{\"1\":{\"474\":1}}],[\"您可能已经有了两个仓库的url\",{\"1\":{\"113\":1}}],[\"您可以手动创建一个requirements\",{\"1\":{\"496\":1}}],[\"您可以通过创建一个requirements\",{\"1\":{\"495\":1}}],[\"您可以通过编辑\",{\"1\":{\"475\":1}}],[\"您可以通过web界面\",{\"1\":{\"470\":1}}],[\"您可以将其理解为\",{\"1\":{\"470\":1}}],[\"您可以使用以下命令添加子模块\",{\"1\":{\"114\":1}}],[\"进一步强化了数据的一致性\",{\"1\":{\"576\":1}}],[\"进一步保证了一致性\",{\"1\":{\"576\":1}}],[\"进一步明确了delimiter本身也是被返回字符串的一部分\",{\"1\":{\"61\":1}}],[\"进行处理\",{\"1\":{\"575\":1}}],[\"进行定义和管理\",{\"1\":{\"469\":1}}],[\"进程之间循环等待着资源\",{\"1\":{\"563\":1}}],[\"进程已获得的资源\",{\"1\":{\"563\":1}}],[\"路由规则\",{\"1\":{\"467\":1}}],[\"路由器检查nat表\",{\"1\":{\"458\":1}}],[\"路由器将使用其公共ip地址\",{\"1\":{\"458\":1}}],[\"路由器会查看该数据包的目标端口号\",{\"1\":{\"457\":1}}],[\"路由器会在nat表中创建条目\",{\"1\":{\"456\":1}}],[\"路由器分配给该会话的唯一端口号\",{\"1\":{\"456\":1}}],[\"路由器的公共ip地址\",{\"1\":{\"456\":1}}],[\"路由器通过使用nat\",{\"1\":{\"455\":1}}],[\"能访问其他桥接接口\",{\"1\":{\"467\":1}}],[\"能够接收到订单消息\",{\"1\":{\"599\":1}}],[\"能够提供稳定的连接和低延迟传输\",{\"1\":{\"423\":1}}],[\"能够进行高度定制化的视频处理\",{\"1\":{\"419\":1}}],[\"能够以极高的性能处理大量请求\",{\"1\":{\"22\":1}}],[\"能够同时接受和管理多个客户端连接\",{\"1\":{\"21\":1}}],[\"能够在非阻塞模式下监听和接收来自多个客户端的请求\",{\"1\":{\"20\":1}}],[\"能够高效运行的关键在于其使用的数据结构和算法非常高效\",{\"1\":{\"20\":1}}],[\"网上关于自签证书的博客资料可以说是很多了\",{\"1\":{\"624\":1}}],[\"网上有很多资料\",{\"1\":{\"615\":1}}],[\"网桥间的访问\",{\"0\":{\"465\":1}}],[\"网络接口通常通过配置文件\",{\"1\":{\"469\":1}}],[\"网络接口配置\",{\"1\":{\"393\":1}}],[\"网络和硬件要求\",{\"0\":{\"420\":1}}],[\"网络地址转换\",{\"0\":{\"397\":1},\"1\":{\"393\":1,\"455\":1}}],[\"网络数据读取等场合遇到\",{\"1\":{\"306\":1}}],[\"网络延迟和吞吐量会影响数据包的发送\",{\"1\":{\"303\":1}}],[\"具体来说\",{\"1\":{\"597\":1}}],[\"具体的配置可能需要根据你的网络设置和openwrt版本进行调整\",{\"1\":{\"468\":1}}],[\"具体的命令和步骤可能会根据你的系统和版本有所不同\",{\"1\":{\"464\":1}}],[\"具体而言\",{\"1\":{\"8\":1}}],[\"新建一个名为br3的桥接接口\",{\"1\":{\"459\":1}}],[\"新变量实际上是指向原始数据的引用\",{\"1\":{\"310\":1}}],[\"入站数据包到设备a\",{\"1\":{\"458\":1}}],[\"端口号的作用\",{\"0\":{\"457\":1}}],[\"外部源端口\",{\"1\":{\"456\":1}}],[\"外部源ip地址\",{\"1\":{\"456\":1}}],[\"外部硬盘通常只有在用户登录并进入桌面后才自动挂载\",{\"1\":{\"413\":1}}],[\"私有ip\",{\"1\":{\"458\":2}}],[\"私有ip地址\",{\"1\":{\"456\":1}}],[\"私有变量\",{\"0\":{\"382\":1}}],[\"机制来区分并正确地将入站的数据包路由到内部网络中的特定设备\",{\"1\":{\"455\":1}}],[\"二进制日志的推送过程\",{\"0\":{\"454\":1}}],[\"二进制日志是mysql数据修改的记录\",{\"1\":{\"434\":1}}],[\"技术细节\",{\"0\":{\"452\":1}}],[\"建立复制连接\",{\"0\":{\"447\":1}}],[\"建立连接\",{\"1\":{\"299\":1}}],[\"缺点\",{\"0\":{\"443\":1}}],[\"半同步复制\",{\"0\":{\"440\":1}}],[\"完成同步\",{\"0\":{\"437\":1}}],[\"完成系统调用\",{\"0\":{\"284\":1}}],[\"更合适的方法是\",{\"1\":{\"600\":1}}],[\"更新防火墙规则\",{\"0\":{\"485\":1}}],[\"更新防火墙配置\",{\"1\":{\"470\":2}}],[\"更新和删除操作\",{\"1\":{\"434\":1}}],[\"更常见的做法是使用复合字面量\",{\"1\":{\"315\":1}}],[\"执行日志事件\",{\"1\":{\"436\":1}}],[\"执行的插入语句和所产生的数据变更被记录到主服务器的二进制日志中\",{\"1\":{\"434\":1}}],[\"执行语句\",{\"1\":{\"434\":1}}],[\"执行结果如下\",{\"1\":{\"298\":1}}],[\"语法\",{\"0\":{\"521\":1}}],[\"语句在主服务器上执行时\",{\"1\":{\"434\":1}}],[\"语言并没有像一些其他语言那样显式使用指针\",{\"1\":{\"311\":1}}],[\"语言特定的二进制编码格式\",{\"1\":{\"190\":1}}],[\"语言标准库中的一个包\",{\"1\":{\"190\":1}}],[\"语言中的主要引用类型\",{\"1\":{\"310\":1}}],[\"语言中用于处理对象序列化和反序列化的标准库包\",{\"1\":{\"190\":1}}],[\"语言中\",{\"1\":{\"155\":1,\"193\":1,\"306\":1,\"310\":1,\"312\":1,\"313\":1}}],[\"了解视频文件的容器和编码可以帮助确保视频能够在目标平台上正确播放\",{\"1\":{\"432\":1}}],[\"兼容性和灵活性\",{\"1\":{\"432\":1}}],[\"影响文件的大小和质量\",{\"1\":{\"430\":1}}],[\"盒子\",{\"1\":{\"430\":1}}],[\"容器格式定义了如何存储这些信息以及它们之间的关系\",{\"1\":{\"430\":1}}],[\"容器格式包裹着编码的数据流\",{\"1\":{\"429\":1}}],[\"容器是用来包含和组织视频\",{\"1\":{\"430\":1}}],[\"元数据\",{\"1\":{\"429\":1}}],[\"元注解\",{\"0\":{\"344\":1}}],[\"传输和播放方式\",{\"1\":{\"427\":1}}],[\"传递的是对原始通道的引用\",{\"1\":{\"310\":1}}],[\"传递接口指针类型给结构体\",{\"0\":{\"237\":1}}],[\"传递\",{\"1\":{\"44\":1}}],[\"广泛用于各种设备和浏览器的视频点播和直播\",{\"1\":{\"424\":1}}],[\"从而避免丢失\",{\"1\":{\"585\":1}}],[\"从而间接地\",{\"1\":{\"580\":1}}],[\"从而使得分布式系统作为一个整体运行\",{\"1\":{\"576\":1}}],[\"从而维护了一致性\",{\"1\":{\"576\":1}}],[\"从而响应用户请求更快\",{\"1\":{\"9\":1}}],[\"从网站的证书\",{\"1\":{\"559\":1}}],[\"从字节流中加载对象\",{\"1\":{\"500\":1}}],[\"从服务器可能会与主服务器出现延时\",{\"1\":{\"439\":1}}],[\"从服务器上的数据应该与主服务器上的数据保持一致\",{\"1\":{\"437\":1}}],[\"从服务器上的sql线程读取中继日志中的事件\",{\"1\":{\"436\":1}}],[\"从服务器上的i\",{\"1\":{\"435\":1}}],[\"从服务器将二进制日志中的数据变更应用到自己的数据库中\",{\"1\":{\"436\":1}}],[\"从服务器接收到二进制日志后\",{\"1\":{\"435\":1}}],[\"从服务器通过以下步骤与主服务器同步数据\",{\"1\":{\"435\":1}}],[\"从服务器请求数据变更\",{\"0\":{\"435\":1}}],[\"从编码器到服务器\",{\"1\":{\"423\":1}}],[\"特别是当源视频的时间戳不连续或不规则时\",{\"1\":{\"581\":1}}],[\"特别是在需要适应不同网络条件和跨平台兼容性的场景\",{\"1\":{\"424\":1}}],[\"特别是涉及到并发和数据共享的时候\",{\"1\":{\"311\":1}}],[\"特点\",{\"1\":{\"423\":1,\"424\":1,\"425\":1}}],[\"三种不同流媒体传输协议简介\",{\"0\":{\"422\":1}}],[\"三个函数\",{\"1\":{\"29\":1}}],[\"带宽\",{\"1\":{\"420\":1}}],[\"带宽管理等\",{\"1\":{\"393\":1}}],[\"音频以及可能的其他数据\",{\"1\":{\"430\":1}}],[\"音频以及其他数据\",{\"1\":{\"429\":1}}],[\"音频效果\",{\"1\":{\"419\":1}}],[\"音频输入捕获\",{\"1\":{\"418\":1}}],[\"混流或添加复杂的视频\",{\"1\":{\"419\":1}}],[\"混流与直播\",{\"1\":{\"418\":1}}],[\"叠加到视频流上\",{\"1\":{\"418\":1}}],[\"源\",{\"1\":{\"418\":2}}],[\"源添加实时字幕或注释\",{\"1\":{\"418\":1}}],[\"人像\",{\"1\":{\"418\":1}}],[\"人像和声音\",{\"1\":{\"417\":1}}],[\"媒体源\",{\"1\":{\"418\":1}}],[\"捕获视频流\",{\"1\":{\"418\":1}}],[\"视频\",{\"1\":{\"581\":1}}],[\"视频格式\",{\"0\":{\"429\":1},\"1\":{\"429\":1}}],[\"视频编码和视频格式的区别\",{\"0\":{\"427\":1}}],[\"视频编辑软件或专业的流媒体处理工具\",{\"1\":{\"417\":1}}],[\"视频和数据的协议\",{\"1\":{\"423\":1}}],[\"视频捕获设备\",{\"1\":{\"418\":1}}],[\"视频捕获设备等\",{\"1\":{\"418\":1}}],[\"文章\",{\"1\":{\"625\":1}}],[\"文本\",{\"1\":{\"418\":1}}],[\"文字\",{\"1\":{\"418\":1}}],[\"文件流式上传\",{\"0\":{\"320\":1}}],[\"文件读写过程\",{\"0\":{\"278\":1}}],[\"文件\",{\"0\":{\"79\":1,\"414\":1},\"1\":{\"79\":2,\"470\":1}}],[\"个人觉得记这些意义不大\",{\"1\":{\"616\":1}}],[\"个体主播可以使用obs\",{\"1\":{\"418\":1}}],[\"个体主播转发其他直播流并添加自己的字幕\",{\"1\":{\"417\":1}}],[\"个字节\",{\"1\":{\"44\":1,\"300\":1}}],[\"识别硬盘\",{\"1\":{\"414\":1}}],[\"请确保在操作之前备份所有相关的配置文件\",{\"1\":{\"487\":1}}],[\"请求会被拒绝\",{\"1\":{\"576\":1}}],[\"请求与保持\",{\"1\":{\"563\":1}}],[\"请求和接收二进制日志事件\",{\"0\":{\"449\":1}}],[\"请求的顺序执行\",{\"1\":{\"21\":1}}],[\"请注意\",{\"1\":{\"413\":1,\"464\":1,\"468\":1}}],[\"重定向输入\",{\"0\":{\"609\":1}}],[\"重新封装\",{\"1\":{\"582\":1}}],[\"重新启动网络服务\",{\"0\":{\"405\":1}}],[\"重启防火墙服务\",{\"1\":{\"477\":1}}],[\"重启wlan0\",{\"0\":{\"411\":1}}],[\"查看证书申请文件\",{\"0\":{\"632\":1}}],[\"查看\",{\"0\":{\"412\":1}}],[\"查看无线设备\",{\"0\":{\"408\":1}}],[\"查找页缓存\",{\"0\":{\"281\":1}}],[\"保证消息的可用性\",{\"1\":{\"589\":1}}],[\"保证任何时刻系统状态的一致性\",{\"1\":{\"576\":1}}],[\"保存到文件或者在不同的系统之间进行交互时\",{\"1\":{\"597\":1}}],[\"保存配置\",{\"0\":{\"464\":1}}],[\"保存您的\",{\"0\":{\"398\":1}}],[\"保持源帧的原始时间戳\",{\"1\":{\"581\":1}}],[\"保持哈希值有序\",{\"1\":{\"272\":1}}],[\"保持对data的引用\",{\"1\":{\"209\":1}}],[\"设置集群节点\",{\"0\":{\"538\":1}}],[\"设置无线接入点和定义防火墙规则以隔离访客网络\",{\"1\":{\"481\":1}}],[\"设置防火墙规则以隔离网络\",{\"0\":{\"468\":1}}],[\"设置网络接口\",{\"0\":{\"396\":1}}],[\"设备b的会话使用端口20000\",{\"1\":{\"458\":1}}],[\"设备a的会话可能使用端口10000\",{\"1\":{\"458\":1}}],[\"设备a可能使用端口12345与外部世界通信\",{\"1\":{\"458\":1}}],[\"设计高可靠性的消息传递系统时\",{\"1\":{\"587\":1}}],[\"设计并捐赠给了\",{\"1\":{\"259\":1}}],[\"设计目标和特性\",{\"1\":{\"176\":1}}],[\"转发并处理视频流需要较高的上传带宽\",{\"1\":{\"420\":1}}],[\"转发和\",{\"0\":{\"402\":1}}],[\"转发\",{\"0\":{\"395\":1}}],[\"转换风险\",{\"0\":{\"224\":1}}],[\"转换为字符串\",{\"1\":{\"221\":1}}],[\"根据你的具体需求\",{\"1\":{\"487\":1}}],[\"根据你的openwrt版本和具体硬件\",{\"1\":{\"487\":1}}],[\"根据你的网络需求\",{\"1\":{\"483\":1}}],[\"根据你的系统配置和可用的工具\",{\"1\":{\"478\":1}}],[\"根据需要配置高级网络服务\",{\"1\":{\"393\":1}}],[\"根据网络环境配置静态路由\",{\"1\":{\"393\":1}}],[\"让路由器动态学习和宣告路由\",{\"1\":{\"393\":1}}],[\"让我们详细解释一下\",{\"1\":{\"19\":1}}],[\"防范\",{\"0\":{\"620\":1}}],[\"防火墙规则是用来细致控制网络间通信的\",{\"1\":{\"467\":1}}],[\"防火墙规则\",{\"0\":{\"472\":1},\"1\":{\"467\":1}}],[\"防火墙和nat\",{\"1\":{\"393\":1}}],[\"防火墙\",{\"1\":{\"393\":1}}],[\"防止特定类型的重排序\",{\"1\":{\"375\":1}}],[\"防止指令重排序\",{\"1\":{\"375\":1}}],[\"防止编译器对这些变量进行优化\",{\"1\":{\"374\":1}}],[\"防止死锁\",{\"1\":{\"170\":1}}],[\"等较为敏感的信息\",{\"1\":{\"617\":1}}],[\"等\",{\"1\":{\"388\":1,\"393\":1}}],[\"等待下一次读取\",{\"1\":{\"301\":1}}],[\"挂起信号\",{\"1\":{\"388\":1}}],[\"触发\",{\"1\":{\"388\":1}}],[\"由eric\",{\"1\":{\"512\":1}}],[\"由\",{\"1\":{\"388\":1}}],[\"由于没有了输入交互\",{\"1\":{\"607\":1}}],[\"由于之前idea可能发生配置错误\",{\"1\":{\"364\":1}}],[\"由于\",{\"1\":{\"21\":1}}],[\"常用api\",{\"0\":{\"504\":1}}],[\"常用beautifulsoup4操作\",{\"0\":{\"502\":1}}],[\"常用来表示一个限制或边界\",{\"1\":{\"61\":1}}],[\"常见的视频容器格式包括mp4\",{\"1\":{\"429\":1}}],[\"常见的视频编码标准包括h\",{\"1\":{\"428\":1}}],[\"常见信号\",{\"1\":{\"388\":1}}],[\"命令解释\",{\"0\":{\"610\":1}}],[\"命令添加桥接接口\",{\"0\":{\"479\":1,\"480\":1}}],[\"命令来实现\",{\"1\":{\"414\":1}}],[\"命令\",{\"0\":{\"509\":1},\"1\":{\"387\":1,\"392\":1}}],[\"运算符对于对象\",{\"1\":{\"380\":1}}],[\"运行结果\",{\"0\":{\"173\":1}}],[\"检查\",{\"1\":{\"380\":1}}],[\"随着java和其他语言中并发编程工具的发展\",{\"1\":{\"376\":1}}],[\"随机访问\",{\"0\":{\"289\":1}}],[\"应当仅在必要时使用volatile关键字\",{\"1\":{\"376\":1}}],[\"应用程序或其他网络内容的副本\",{\"1\":{\"534\":1}}],[\"应用程序的配置类上启用异步支持\",{\"1\":{\"368\":2}}],[\"应用更改\",{\"0\":{\"486\":1}}],[\"应用您的防火墙配置后\",{\"1\":{\"477\":1}}],[\"应用并测试防火墙规则\",{\"0\":{\"477\":1}}],[\"应用日志事件\",{\"0\":{\"451\":1}}],[\"应用数据变更到从服务器\",{\"0\":{\"436\":1}}],[\"应用场景\",{\"1\":{\"423\":1,\"424\":1,\"425\":1}}],[\"应用\",{\"0\":{\"188\":1}}],[\"应用模糊效果\",{\"1\":{\"47\":1}}],[\"应用图形效果\",{\"1\":{\"46\":1}}],[\"应用解耦\",{\"1\":{\"10\":1}}],[\"某些内存位置可能由硬件事件改变而非软件控制的代码路径\",{\"1\":{\"375\":1}}],[\"现代编译器和处理器为了优化性能\",{\"1\":{\"375\":1}}],[\"现代操作系统中\",{\"1\":{\"37\":1}}],[\"改变\",{\"1\":{\"374\":1}}],[\"同步模式\",{\"0\":{\"438\":1}}],[\"同步等待异步结果\",{\"0\":{\"370\":1}}],[\"同时在防火墙层面上隔离访客设备与主网络的通信\",{\"1\":{\"472\":1}}],[\"同时\",{\"1\":{\"431\":1}}],[\"同时尽量保持原始数据的质量\",{\"1\":{\"428\":1}}],[\"同样需要启用它\",{\"1\":{\"480\":1}}],[\"同样\",{\"1\":{\"244\":1}}],[\"同样可以通过值调用\",{\"1\":{\"229\":1}}],[\"下面分别介绍这两种方法\",{\"1\":{\"478\":1}}],[\"下面是几种实现方式\",{\"1\":{\"490\":1}}],[\"下面是一个详细的步骤描述\",{\"1\":{\"433\":1}}],[\"下面是一个简单的示例\",{\"1\":{\"368\":1}}],[\"下面是对这三种协议的简要介绍以及它们的地址格式示例\",{\"1\":{\"422\":1}}],[\"下面是实现这一过程的一些基本步骤和概念\",{\"1\":{\"417\":1}}],[\"下面我会简要介绍\",{\"1\":{\"259\":1}}],[\"启用桥接接口\",{\"1\":{\"479\":1,\"480\":1}}],[\"启用\",{\"0\":{\"395\":1}}],[\"启用异步执行支持\",{\"1\":{\"368\":1}}],[\"启动第三个节点\",{\"0\":{\"549\":1}}],[\"启动第二个节点\",{\"0\":{\"548\":1}}],[\"启动第一个节点\",{\"0\":{\"547\":1}}],[\"启动rabbitmq节点\",{\"0\":{\"546\":1}}],[\"启动rabbitmq集群\",{\"0\":{\"537\":1}}],[\"启动redis\",{\"0\":{\"52\":1}}],[\"启动一个goroutine处理连接\",{\"1\":{\"299\":1}}],[\"启动go服务\",{\"0\":{\"60\":1}}],[\"单击compiler\",{\"1\":{\"366\":1}}],[\"单线程\",{\"1\":{\"19\":1}}],[\"找到build\",{\"1\":{\"366\":1}}],[\"找到相应位置并插入\",{\"1\":{\"144\":1}}],[\"热启动\",{\"0\":{\"366\":1}}],[\"勾选\",{\"1\":{\"364\":1}}],[\"折腾了很久才发现这个问题\",{\"1\":{\"364\":1}}],[\"我就是这种情况\",{\"1\":{\"364\":1}}],[\"我们使用chrome访问的https网页时会出现一把锁\",{\"1\":{\"626\":1}}],[\"我们首先需要自己创建一个证书颁发机构\",{\"1\":{\"626\":1}}],[\"我们主要记录如何生成\",{\"1\":{\"625\":1}}],[\"我们经常在chrome里面调试网页\",{\"1\":{\"613\":1}}],[\"我们假设你已经创建了一个远端仓库greet\",{\"1\":{\"100\":1}}],[\"我们需要递归地遍历目录\",{\"1\":{\"79\":1}}],[\"导致程序行为出现错误\",{\"1\":{\"375\":1}}],[\"导致idea一直提示此错误\",{\"1\":{\"364\":1}}],[\"导读\",{\"0\":{\"73\":1,\"99\":1,\"334\":1,\"339\":1,\"518\":1,\"528\":1,\"613\":1,\"615\":1,\"624\":1}}],[\"缓存一致性\",{\"1\":{\"595\":1}}],[\"缓存更新\",{\"1\":{\"534\":1}}],[\"缓存出错\",{\"0\":{\"364\":1}}],[\"缓冲区的填充情况以及其他因素来决定何时实际发送数据\",{\"1\":{\"303\":1}}],[\"未路由的消息将被发送到这个备份交换机\",{\"1\":{\"585\":1}}],[\"未引入相关依赖\",{\"0\":{\"363\":1}}],[\"未关闭的context\",{\"0\":{\"213\":1}}],[\"未关闭的channel\",{\"0\":{\"211\":1}}],[\"书写错误\",{\"0\":{\"360\":1}}],[\"原因在于非法用户可能通过其它手段提交数据\",{\"1\":{\"618\":1}}],[\"原因\",{\"0\":{\"358\":1}}],[\"原型\",{\"1\":{\"44\":1}}],[\"今天在调试spring的时候出现了一个\",{\"1\":{\"357\":1}}],[\"例子\",{\"0\":{\"346\":1,\"348\":1,\"522\":1}}],[\"例如减少大型结构体的复制\",{\"1\":{\"313\":1}}],[\"例如减少延迟\",{\"1\":{\"305\":1}}],[\"例如分\",{\"1\":{\"239\":1}}],[\"例如\",{\"1\":{\"239\":1,\"303\":1,\"307\":1,\"312\":1,\"376\":1,\"386\":1,\"388\":1,\"423\":1,\"424\":1,\"458\":1,\"462\":1,\"464\":1,\"468\":1,\"469\":1,\"470\":2,\"473\":1,\"483\":1,\"496\":1,\"582\":1,\"585\":1}}],[\"例如采用了高效的二进制编码格式\",{\"1\":{\"190\":1}}],[\"例如模糊\",{\"1\":{\"46\":1}}],[\"作者使用了\",{\"1\":{\"618\":1}}],[\"作用于其它注解上的注解\",{\"0\":{\"344\":1}}],[\"作为一种可选配置\",{\"1\":{\"438\":1}}],[\"作为http\",{\"1\":{\"76\":1}}],[\"作为名词使用\",{\"1\":{\"61\":1}}],[\"扩展\",{\"0\":{\"336\":1}}],[\"扩展和管理容器化应用程序\",{\"1\":{\"259\":1}}],[\"流量控制\",{\"1\":{\"393\":1}}],[\"流量削峰\",{\"1\":{\"10\":1}}],[\"流式处理的优点\",{\"0\":{\"329\":1}}],[\"无线接口配置中\",{\"1\":{\"466\":1}}],[\"无线接口与桥接\",{\"1\":{\"466\":1}}],[\"无线接入点\",{\"0\":{\"404\":1}}],[\"无需开发者手动编写任何额外的代码来处理超出限制的数据\",{\"1\":{\"319\":1}}],[\"无论是\",{\"1\":{\"251\":1}}],[\"否则通常推荐使用复合字面量语法\",{\"1\":{\"315\":1}}],[\"否则连接将保持开启\",{\"1\":{\"251\":1}}],[\"除非你有特定的理由需要使用\",{\"1\":{\"315\":1}}],[\"除非显式使用\",{\"1\":{\"251\":1}}],[\"被初始化为它们各自类型的零值\",{\"1\":{\"314\":1}}],[\"被传递给\",{\"1\":{\"300\":1}}],[\"假设为198\",{\"1\":{\"458\":1}}],[\"假设设备a\",{\"1\":{\"458\":1}}],[\"假设有三个组件a\",{\"1\":{\"386\":1}}],[\"假设你有一个结构体\",{\"1\":{\"314\":1}}],[\"假设哈希函数的范围是0到2^32\",{\"1\":{\"272\":1}}],[\"编码决定了数据如何被压缩和解压缩\",{\"1\":{\"430\":1}}],[\"编码则是容器中实际视频和音频数据的压缩格式\",{\"1\":{\"430\":1}}],[\"编码的目的是减小文件大小和传输带宽的需求\",{\"1\":{\"428\":1}}],[\"编码器在创建视频文件时压缩数据\",{\"1\":{\"428\":1}}],[\"编码是指压缩和解压视频或音频数据的方法\",{\"1\":{\"428\":1}}],[\"编码\",{\"0\":{\"428\":1},\"1\":{\"427\":1}}],[\"编辑器\",{\"1\":{\"618\":1}}],[\"编辑器缓存了一些配置\",{\"1\":{\"364\":1}}],[\"编辑\",{\"1\":{\"470\":1,\"483\":1}}],[\"编辑和重新编码过程\",{\"1\":{\"417\":1}}],[\"编写泛型代码时\",{\"1\":{\"313\":1}}],[\"编译\",{\"0\":{\"25\":1}}],[\"理解这两者之间的关系有助于更好地管理和使用视频文件\",{\"1\":{\"427\":1}}],[\"理解\",{\"0\":{\"497\":1},\"1\":{\"311\":1}}],[\"本身不会自动产生一个新的ssid\",{\"1\":{\"465\":1}}],[\"本身不是引用类型\",{\"1\":{\"311\":1}}],[\"本质区别\",{\"0\":{\"230\":1}}],[\"相反\",{\"1\":{\"311\":1,\"580\":1}}],[\"函数是\",{\"1\":{\"500\":1}}],[\"函数私有变量\",{\"0\":{\"385\":1}}],[\"函数和null\",{\"1\":{\"380\":1}}],[\"函数的使用场景相对较少\",{\"1\":{\"313\":1}}],[\"函数\",{\"1\":{\"312\":2,\"492\":1}}],[\"函数变量实际上是对函数实现的引用\",{\"1\":{\"310\":1}}],[\"函数也可以被视为引用类型\",{\"1\":{\"310\":1}}],[\"函数类型\",{\"1\":{\"310\":1}}],[\"函数中\",{\"1\":{\"307\":1}}],[\"函数中的普通变量\",{\"1\":{\"30\":1}}],[\"赋值和传递映射变量实际上是在传递对映射数据结构的引用\",{\"1\":{\"310\":1}}],[\"映射内部使用哈希表实现\",{\"1\":{\"310\":1}}],[\"映射是存储键值对的数据结构\",{\"1\":{\"310\":1}}],[\"映射\",{\"1\":{\"310\":1,\"312\":1}}],[\"灵活的视图\",{\"1\":{\"310\":1}}],[\"有兴趣的朋友可以在网上搜一下\",{\"1\":{\"616\":1}}],[\"有几种\",{\"1\":{\"616\":1}}],[\"有几种类型通常被认为是引用类型\",{\"1\":{\"310\":1}}],[\"有限的使用场景\",{\"1\":{\"376\":1}}],[\"有时可以解决轻微的时间戳问题\",{\"1\":{\"582\":1}}],[\"有时显式地处理指针\",{\"1\":{\"313\":1}}],[\"有时候我们需要在一个项目中依赖一个更新中的公共库\",{\"1\":{\"99\":1}}],[\"遇到\",{\"1\":{\"309\":1}}],[\"正确配置主从复制并监控复制过程对于确保数据的一致性和可用性至关重要\",{\"1\":{\"439\":1}}],[\"正确处理\",{\"1\":{\"309\":1}}],[\"正常关闭连接\",{\"1\":{\"244\":1}}],[\"关于它的定义\",{\"1\":{\"528\":1}}],[\"关联\",{\"1\":{\"465\":1}}],[\"关键步骤在于配置防火墙规则\",{\"1\":{\"475\":1}}],[\"关键字是一种在编程中用于声明变量的修饰符\",{\"1\":{\"374\":1}}],[\"关键点\",{\"0\":{\"309\":1}}],[\"关闭后还有一个零值\",{\"1\":{\"318\":1}}],[\"关闭channel会自动发送一个零值到channel\",{\"1\":{\"316\":1}}],[\"关闭连接\",{\"1\":{\"299\":1}}],[\"输入网络缓存区\",{\"0\":{\"304\":1}}],[\"输出网络缓存区\",{\"0\":{\"303\":1}}],[\"输出将会是\",{\"1\":{\"296\":1}}],[\"输出响应状态\",{\"1\":{\"217\":1}}],[\"输出为\",{\"0\":{\"80\":1}}],[\"操作\",{\"1\":{\"471\":1}}],[\"操作系统可能会倾向于等待更多数据到达缓冲区后再发送\",{\"1\":{\"303\":1}}],[\"操作系统会根据网络状况\",{\"1\":{\"303\":1}}],[\"操作通常非常快\",{\"1\":{\"21\":1}}],[\"该消息将被分割成多个部分\",{\"1\":{\"301\":1}}],[\"该方法的接收者是非指针类型\",{\"1\":{\"233\":1}}],[\"剩余的数据仍然保留在内部的网络缓冲区中\",{\"1\":{\"301\":1}}],[\"行\",{\"1\":{\"300\":1}}],[\"上述步骤中的一些选项可能需要调整\",{\"1\":{\"487\":1}}],[\"上述步骤提供了一个基本的指导\",{\"1\":{\"464\":1}}],[\"上的数据变更复制到一个或多个从服务器\",{\"1\":{\"433\":1}}],[\"上面的buf数组即是自定义固定缓存区\",{\"1\":{\"302\":1}}],[\"上\",{\"1\":{\"300\":1,\"413\":1,\"433\":1}}],[\"上使用\",{\"0\":{\"261\":1}}],[\"实际上是一个切片操作\",{\"1\":{\"300\":1}}],[\"实现细节\",{\"0\":{\"601\":1}}],[\"实现了一种称为\",{\"1\":{\"570\":1}}],[\"实现分布式锁的步骤\",{\"0\":{\"171\":1}}],[\"实现分布式锁需要注意的事项\",{\"0\":{\"170\":1}}],[\"实现\",{\"0\":{\"120\":1,\"122\":1,\"126\":1,\"127\":1},\"1\":{\"433\":1}}],[\"实现自定义解析器\",{\"0\":{\"119\":1}}],[\"实现自定义注册逻辑相对自由\",{\"1\":{\"118\":1}}],[\"实现自定义注册逻辑\",{\"0\":{\"118\":1}}],[\"类型\",{\"1\":{\"300\":1}}],[\"类型的新项\",{\"1\":{\"194\":1}}],[\"类型的值\",{\"1\":{\"44\":2,\"312\":1,\"313\":1}}],[\"收到client端发来的数据\",{\"1\":{\"299\":1}}],[\"则接单成功\",{\"1\":{\"601\":1}}],[\"则可能需要更复杂的处理\",{\"1\":{\"582\":1}}],[\"则它可以投票给\",{\"1\":{\"572\":1}}],[\"则那些defer仍然不会执行\",{\"1\":{\"298\":1}}],[\"则是完全的灰色\",{\"1\":{\"47\":1}}],[\"此处\",{\"1\":{\"625\":1}}],[\"此篇文章将会尽量清晰的描述自签名证书和创建ca为自己的服务器颁发证书\",{\"1\":{\"624\":1}}],[\"此时val为零值\",{\"1\":{\"317\":1}}],[\"此时\",{\"1\":{\"314\":1,\"437\":1}}],[\"此外\",{\"1\":{\"298\":1,\"534\":1}}],[\"此方法会发送io\",{\"1\":{\"245\":1}}],[\"要给我们的服务器颁发一个数字证书\",{\"1\":{\"626\":1}}],[\"要使用docker创建一个rabbitmq集群\",{\"1\":{\"535\":1}}],[\"要使用防火墙规则在同一网段内创建一个访客网络\",{\"1\":{\"472\":1}}],[\"要在openwrt等路由器操作系统上创建一个新的ssid并将其与特定的桥接接口\",{\"1\":{\"465\":1}}],[\"要在一个基于linux的系统上\",{\"1\":{\"459\":1}}],[\"要启用\",{\"1\":{\"368\":1}}],[\"要注意的是\",{\"1\":{\"298\":1}}],[\"要查找\",{\"1\":{\"79\":1}}],[\"程序将继续在panic调用之后的点继续执行\",{\"1\":{\"298\":1}}],[\"程序可以避免因为panic而直接崩溃\",{\"1\":{\"298\":1}}],[\"程序异常退出\",{\"1\":{\"297\":1}}],[\"且未被捕获\",{\"1\":{\"297\":1}}],[\"且能随着系统扩展而伸缩\",{\"1\":{\"170\":1}}],[\"所见即所得\",{\"1\":{\"618\":1}}],[\"所有的\",{\"1\":{\"589\":1}}],[\"所有的客户端都能看到相同的数据\",{\"1\":{\"512\":1}}],[\"所以ffmpeg选择了挂起等待\",{\"1\":{\"607\":1}}],[\"所以需要额外检查\",{\"1\":{\"380\":1}}],[\"所以将字节切片\",{\"1\":{\"221\":1}}],[\"所在的协程\",{\"1\":{\"297\":1}}],[\"考虑以下示例\",{\"1\":{\"296\":1}}],[\"依次打印\",{\"1\":{\"294\":1}}],[\"第一个defer语句最后执行\",{\"1\":{\"294\":1,\"295\":1}}],[\"延迟加载\",{\"0\":{\"290\":1}}],[\"错误\",{\"1\":{\"306\":1}}],[\"错误处理\",{\"0\":{\"285\":1}}],[\"错误或异常\",{\"1\":{\"251\":1}}],[\"写操作\",{\"0\":{\"283\":1}}],[\"写入中继日志\",{\"0\":{\"450\":1}}],[\"写入二进制日志\",{\"1\":{\"434\":1}}],[\"写入\",{\"1\":{\"19\":1}}],[\"页面\",{\"1\":{\"357\":1}}],[\"页\",{\"0\":{\"275\":1}}],[\"共识\",{\"1\":{\"570\":1}}],[\"共同管理的\",{\"1\":{\"274\":1}}],[\"共32位\",{\"1\":{\"37\":1}}],[\"移除node2后\",{\"1\":{\"272\":1}}],[\"移除节点\",{\"1\":{\"272\":1}}],[\"添加一个新的接口配置段落\",{\"1\":{\"483\":1}}],[\"添加一个子模块\",{\"0\":{\"100\":1}}],[\"添加如下配置以创建新的桥接接口\",{\"1\":{\"470\":1}}],[\"添加接口到桥接中\",{\"0\":{\"461\":1}}],[\"添加个人元素和编码等步骤\",{\"1\":{\"419\":1}}],[\"添加个人元素\",{\"1\":{\"418\":1}}],[\"添加多种媒体元素\",{\"1\":{\"418\":1}}],[\"添加node4后\",{\"1\":{\"272\":1}}],[\"添加节点\",{\"1\":{\"272\":1}}],[\"哈希值到节点名称的映射\",{\"1\":{\"272\":1}}],[\"构成\",{\"0\":{\"520\":1}}],[\"构成一个圆环\",{\"1\":{\"272\":1}}],[\"构造函数\",{\"0\":{\"384\":1}}],[\"构建dockerfile\",{\"0\":{\"59\":1}}],[\"读取中继日志\",{\"1\":{\"436\":1}}],[\"读取二进制日志位置\",{\"0\":{\"448\":1}}],[\"读取二进制日志\",{\"1\":{\"435\":1}}],[\"读取的数据超过\",{\"1\":{\"301\":1}}],[\"读取数据\",{\"1\":{\"299\":1}}],[\"读取客户端的数据\",{\"1\":{\"271\":1}}],[\"读取参数\",{\"1\":{\"217\":1}}],[\"监测xss漏洞\",{\"0\":{\"619\":1}}],[\"监听tcp端口\",{\"1\":{\"271\":1}}],[\"监视变化\",{\"1\":{\"176\":1}}],[\"加入到桥接中\",{\"1\":{\"461\":1}}],[\"加密通信\",{\"0\":{\"561\":1}}],[\"加密\",{\"0\":{\"410\":1}}],[\"加paths=source\",{\"1\":{\"266\":1}}],[\"加上\",{\"1\":{\"61\":1}}],[\"控制数据包从一个网络接口到另一个网络接口的流动\",{\"1\":{\"467\":1}}],[\"控制桥接接口之间的访问\",{\"0\":{\"467\":1}}],[\"控制器管理器\",{\"1\":{\"260\":1}}],[\"控制平面\",{\"1\":{\"260\":1}}],[\"到根ca证书\",{\"1\":{\"559\":1}}],[\"到合适的节点上\",{\"1\":{\"260\":1}}],[\"到github\",{\"0\":{\"113\":1}}],[\"负责节点\",{\"1\":{\"260\":1}}],[\"负责调度\",{\"1\":{\"260\":1}}],[\"负载均衡\",{\"1\":{\"9\":1,\"393\":1,\"534\":1}}],[\"负载均衡和分布式系统中的消息传递等问题\",{\"1\":{\"8\":1}}],[\"调整\",{\"1\":{\"508\":1}}],[\"调整元素的饱和度\",{\"1\":{\"47\":1}}],[\"调整元素的透明度\",{\"1\":{\"47\":1}}],[\"调整元素的对比度\",{\"1\":{\"47\":1}}],[\"调整元素的亮度\",{\"1\":{\"47\":1}}],[\"调用\",{\"1\":{\"303\":1}}],[\"调用os\",{\"1\":{\"297\":1}}],[\"调度器\",{\"1\":{\"260\":1}}],[\"系统会自动生成配置文件的相关条目\",{\"1\":{\"471\":1}}],[\"系统中的每个请求都能在有限的时间内得到处理\",{\"1\":{\"512\":1}}],[\"系统中进程间通信的一种方式\",{\"1\":{\"388\":1}}],[\"系统中\",{\"1\":{\"387\":1}}],[\"系统调用\",{\"0\":{\"279\":1}}],[\"系统上使用\",{\"1\":{\"259\":1}}],[\"系统解耦\",{\"1\":{\"8\":1,\"9\":1}}],[\"协议确保了即使在网络分区\",{\"1\":{\"576\":1}}],[\"协议体现强一致性主要通过以下几个关键机制\",{\"1\":{\"576\":1}}],[\"协议通过这些机制提供了一种相对简单且有效的方式来实现分布式系统的共识\",{\"1\":{\"575\":1}}],[\"协议将集群中的节点分为三种角色\",{\"1\":{\"571\":1}}],[\"协议的工作过程可以概括为以下几个关键点\",{\"1\":{\"570\":1}}],[\"协议的目标是确保集群中的多个节点能够在状态和数据上保持一致\",{\"1\":{\"570\":1}}],[\"协议的版本\",{\"1\":{\"251\":1}}],[\"协议是一种用于实现分布式系统中的一致性的算法\",{\"1\":{\"570\":1}}],[\"协议错误等\",{\"1\":{\"251\":1}}],[\"超过你指定的内存限制\",{\"1\":{\"319\":1}}],[\"超过\",{\"0\":{\"301\":1}}],[\"超时\",{\"1\":{\"251\":1}}],[\"超出写入临时文件\",{\"1\":{\"319\":1}}],[\"超出\",{\"1\":{\"61\":1}}],[\"头部指示关闭\",{\"1\":{\"251\":1}}],[\"响应后仍然保持打开状态\",{\"1\":{\"251\":1}}],[\"引入了持久连接\",{\"1\":{\"251\":1}}],[\"每次选举都会增加任期的计数\",{\"1\":{\"574\":1}}],[\"每次事务提交时\",{\"1\":{\"4\":1}}],[\"每种方法适用于不同的场景和需求\",{\"1\":{\"490\":1}}],[\"每部分最多\",{\"1\":{\"301\":1}}],[\"每个环节都可能存在消息丢失的风险\",{\"1\":{\"583\":1}}],[\"每个任期开始时都会选举出一个新的领导者\",{\"1\":{\"576\":1}}],[\"每个处理器都有自己的本地缓存\",{\"1\":{\"514\":1}}],[\"每个文件包含一小段视频内容\",{\"1\":{\"424\":1}}],[\"每个要存储的键也会被哈希到这个圆环上的某个位置\",{\"1\":{\"272\":1}}],[\"每个服务器在这个圆环上占据一个位置\",{\"1\":{\"272\":1}}],[\"每个请求完成后连接都会关闭\",{\"1\":{\"251\":1}}],[\"默认使用stdin交互\",{\"1\":{\"607\":1}}],[\"默认值\",{\"1\":{\"581\":1}}],[\"默认情况下\",{\"1\":{\"251\":1}}],[\"默认行为\",{\"1\":{\"251\":1}}],[\"默认的入口文件\",{\"0\":{\"80\":1}}],[\"连接\",{\"0\":{\"258\":1,\"407\":1}}],[\"连接可能会被迫关闭\",{\"1\":{\"251\":1}}],[\"连接将自动关闭\",{\"1\":{\"251\":1}}],[\"连接在发送和接收多个请求\",{\"1\":{\"251\":1}}],[\"连接断开的时机主要取决于\",{\"1\":{\"251\":1}}],[\"连接集群查看集群状态\",{\"0\":{\"54\":1}}],[\"接下来\",{\"1\":{\"484\":1}}],[\"接收来自客户端的请求\",{\"1\":{\"573\":1}}],[\"接收来自服务器的通知\",{\"1\":{\"245\":1}}],[\"接收并写入中继日志\",{\"1\":{\"435\":1}}],[\"接受新的连接\",{\"1\":{\"271\":1}}],[\"接口创建后\",{\"1\":{\"480\":1}}],[\"接口名称\",{\"1\":{\"471\":1}}],[\"接口类型是一组方法的集合\",{\"1\":{\"310\":1}}],[\"接口指针的使用\",{\"0\":{\"235\":1}}],[\"接口等\",{\"1\":{\"194\":1}}],[\"接口的作用\",{\"0\":{\"131\":1}}],[\"接口签名\",{\"0\":{\"121\":1,\"123\":1}}],[\"接口\",{\"0\":{\"120\":1,\"122\":1,\"126\":1,\"127\":1,\"478\":1},\"1\":{\"310\":1}}],[\"干\",{\"1\":{\"245\":1}}],[\"双向流式rpc\",{\"1\":{\"243\":1}}],[\"表示其他骑手已经成功接单\",{\"1\":{\"601\":1}}],[\"表示变量可能被未知因素修改\",{\"1\":{\"375\":1}}],[\"表示数据传输或文件读取已经完成\",{\"1\":{\"309\":1}}],[\"表示数据读取已经完成\",{\"1\":{\"306\":1}}],[\"表示它可以容纳\",{\"1\":{\"300\":1}}],[\"表示应该映射到第一个节点\",{\"1\":{\"272\":1}}],[\"表示1元\",{\"1\":{\"239\":1}}],[\"表示无变化\",{\"1\":{\"47\":1}}],[\"厘等\",{\"1\":{\"239\":1}}],[\"来防止过时的领导者信息干扰当前的领导者和集群状态\",{\"1\":{\"576\":1}}],[\"来完成\",{\"1\":{\"558\":1}}],[\"来完成此操作\",{\"1\":{\"475\":1}}],[\"来反序列化一个对象\",{\"1\":{\"500\":1}}],[\"来指定该无线网络应该关联的桥接接口\",{\"1\":{\"466\":1}}],[\"来实现\",{\"1\":{\"417\":1,\"418\":1}}],[\"来创建并初始化结构体\",{\"1\":{\"315\":1}}],[\"来影响数据包的发送策略\",{\"1\":{\"305\":1}}],[\"来存储金额的最小单位\",{\"1\":{\"239\":1}}],[\"来定义\",{\"1\":{\"227\":1}}],[\"最顶层的根证书需要是浏览器内置信任的根证书\",{\"1\":{\"559\":1}}],[\"最近在使用springboot热启动的时候\",{\"1\":{\"365\":1}}],[\"最近在用maven生成springboot项目时\",{\"1\":{\"361\":1}}],[\"最近在看java的过程中对形如public\",{\"1\":{\"334\":1}}],[\"最多只有一个领导者被选举出来\",{\"1\":{\"576\":1}}],[\"最多只能读取\",{\"1\":{\"301\":1}}],[\"最多填充这个切片的长度\",{\"1\":{\"300\":1}}],[\"最佳实践通常是使用整数类型来存储金额的最小货币单位\",{\"1\":{\"239\":1}}],[\"最终一致性\",{\"0\":{\"181\":1}}],[\"最终一致性模型\",{\"0\":{\"14\":1}}],[\"那么用户就可以进行\",{\"1\":{\"617\":1}}],[\"那么这些桥接接口之间的通信将取决于默认的路由策略\",{\"1\":{\"467\":1}}],[\"那么这个协程中的defer语句可能不会全部执行\",{\"1\":{\"297\":1}}],[\"那么这个方法既属于这个类型\",{\"1\":{\"233\":1}}],[\"那么超出部分的数据会被存储到服务器的临时文件中\",{\"1\":{\"319\":1}}],[\"那么它实际上是指向满足这个接口的具体类型和值的引用\",{\"1\":{\"310\":1}}],[\"那么后续的defer语句也不会执行\",{\"1\":{\"297\":1}}],[\"那么在panic发生后声明的defer语句将不会被执行\",{\"1\":{\"297\":1}}],[\"那么可以添加这个仓库到主项目\",{\"1\":{\"100\":1}}],[\"值实现\",{\"1\":{\"231\":1}}],[\"值接收者方法\",{\"1\":{\"233\":1}}],[\"值接收者或指针接收者\",{\"1\":{\"230\":1}}],[\"值接收者在方法调用时\",{\"1\":{\"228\":1}}],[\"值接收者\",{\"0\":{\"228\":1}}],[\"值接收者和指针接收者的一点区别\",{\"0\":{\"227\":1}}],[\"推荐使用发布确认\",{\"1\":{\"584\":1}}],[\"推荐使用\",{\"1\":{\"312\":1}}],[\"推荐根据具体需求灵活选择\",{\"1\":{\"230\":1}}],[\"推送到github\",{\"1\":{\"114\":1}}],[\"需要权衡性能与可靠性的需求\",{\"1\":{\"587\":1}}],[\"需要注意的是\",{\"1\":{\"585\":1}}],[\"需要共享变量或执行环境的情况\",{\"1\":{\"491\":1}}],[\"需要重启网络和防火墙服务\",{\"1\":{\"486\":1}}],[\"需要将其启用\",{\"1\":{\"479\":1}}],[\"需要根据实际情况考虑数据的大小\",{\"1\":{\"230\":1}}],[\"需要有机制释放锁\",{\"1\":{\"170\":1}}],[\"自签名证书\",{\"0\":{\"630\":1}}],[\"自动生成依赖列表\",{\"1\":{\"496\":1}}],[\"自动为内部网络的设备分配ip地址\",{\"1\":{\"393\":1}}],[\"自动转换调用方式\",{\"1\":{\"230\":1}}],[\"自动转换\",{\"1\":{\"230\":1}}],[\"自定义固定缓存区和系统输入输出网络缓存区\",{\"0\":{\"302\":1}}],[\"自定义类型的序列化和反序列化\",{\"1\":{\"191\":1}}],[\"自定义类型支持\",{\"1\":{\"190\":1}}],[\"自己定义的固定缓冲区\",{\"1\":{\"299\":1}}],[\"硬编码的字符串足够了\",{\"1\":{\"225\":1}}],[\"也只能有一个骑手成功处理订单\",{\"1\":{\"600\":1}}],[\"也就是说\",{\"1\":{\"512\":1}}],[\"也就是说它没有指向任何实际的通道实例\",{\"1\":{\"312\":1}}],[\"也称为边缘节点\",{\"1\":{\"534\":1}}],[\"也称为容器格式\",{\"1\":{\"429\":1}}],[\"也称为连接复用\",{\"1\":{\"251\":1}}],[\"也被认为是一个对象类型\",{\"1\":{\"380\":1}}],[\"也可以通过引用传递\",{\"1\":{\"311\":1}}],[\"也可以传递\",{\"1\":{\"44\":1}}],[\"也属于这个类型的指针\",{\"1\":{\"233\":1}}],[\"也会创建一个新的字符串\",{\"1\":{\"222\":1}}],[\"会检查跟随者的日志是否与自己的日志相匹配\",{\"1\":{\"576\":1}}],[\"会重定向请求到当前的\",{\"1\":{\"575\":1}}],[\"会逐步回退其日志索引\",{\"1\":{\"574\":1}}],[\"会确保\",{\"1\":{\"574\":1}}],[\"会报一个cannot\",{\"1\":{\"361\":1}}],[\"会被使用\",{\"1\":{\"313\":1}}],[\"会创建一个指向\",{\"1\":{\"312\":1}}],[\"会创建一个新的字节切片\",{\"1\":{\"222\":1}}],[\"会返回一个已经初始化好的\",{\"1\":{\"312\":1}}],[\"会在没有更多数据可读时返回\",{\"1\":{\"307\":1}}],[\"会在当前目录生成一个命令空间的文件夹\",{\"1\":{\"266\":1}}],[\"会根据方法定义的接收者类型\",{\"1\":{\"230\":1}}],[\"会自动处理不同操作系统中的路径分隔符差异\",{\"1\":{\"225\":1}}],[\"会将这个入口点的输出文件命名为\",{\"1\":{\"80\":1}}],[\"一种方法是确保只有一个消费者\",{\"1\":{\"599\":1}}],[\"一种终止进程的请求\",{\"1\":{\"388\":1}}],[\"一次性申请所有的资源\",{\"1\":{\"563\":1}}],[\"一次比较两个元素\",{\"1\":{\"142\":1}}],[\"一致性指的是所有数据副本在同一时间内是否具有相同的值\",{\"1\":{\"512\":1}}],[\"一致性\",{\"1\":{\"512\":1,\"595\":1}}],[\"一致性哈希算法是为了解决分布式系统中的动态伸缩问题而提出的\",{\"1\":{\"272\":1}}],[\"一致性哈希的go实现\",{\"0\":{\"272\":1}}],[\"一旦订单被某个骑手成功接单\",{\"1\":{\"600\":1}}],[\"一旦这些条目被大多数节点接收\",{\"1\":{\"573\":1}}],[\"一旦证书链验证通过\",{\"1\":{\"560\":1}}],[\"一旦sql线程完成了中继日志中所有事件的执行\",{\"1\":{\"437\":1}}],[\"一旦使用recover处理了panic\",{\"1\":{\"298\":1}}],[\"一般的menus递归我们采用以下函数\",{\"1\":{\"264\":1}}],[\"一点转换的小技巧\",{\"0\":{\"223\":1}}],[\"一个\",{\"0\":{\"618\":1}}],[\"一个进程因请求资源而阻塞时\",{\"1\":{\"563\":1}}],[\"一个资源每次只能被一个进程使用\",{\"1\":{\"563\":1}}],[\"一个新的ssid用于无线访客网络\",{\"1\":{\"473\":1}}],[\"一个专门为访客设计的无线网络\",{\"1\":{\"469\":1}}],[\"一个连接到外部网络\",{\"1\":{\"393\":1}}],[\"一个线程对非volatile变量的修改可能对其他线程不可见\",{\"1\":{\"375\":1}}],[\"一个简单的例子\",{\"0\":{\"356\":1}}],[\"一个简单的go\",{\"0\":{\"271\":1}}],[\"一个变量如果是接口类型\",{\"1\":{\"310\":1}}],[\"一个指向底层数组的指针和一个表示字符串长度的整数\",{\"1\":{\"221\":1}}],[\"一个字符串通常由两部分组成\",{\"1\":{\"221\":1}}],[\"服务集标识符\",{\"1\":{\"465\":1}}],[\"服务\",{\"0\":{\"403\":1}}],[\"服务等的状态\",{\"1\":{\"260\":1}}],[\"服务器需要至少两个网络接口\",{\"1\":{\"393\":1}}],[\"服务器\",{\"1\":{\"260\":1}}],[\"服务器或客户端可以随时通过发送适当的信号来主动关闭连接\",{\"1\":{\"251\":1}}],[\"服务器或客户端主动关闭\",{\"1\":{\"251\":1}}],[\"服务器和客户端通常都有一个超时设置\",{\"1\":{\"251\":1}}],[\"服务器关闭连接\",{\"1\":{\"245\":1}}],[\"服务器可以随时发送通知\",{\"1\":{\"244\":1}}],[\"服务端关闭连接\",{\"0\":{\"257\":1}}],[\"服务端\",{\"0\":{\"218\":1,\"244\":1,\"248\":1,\"323\":1,\"326\":1}}],[\"服务发现\",{\"1\":{\"176\":1}}],[\"将消息标记为持久化\",{\"1\":{\"585\":1}}],[\"将条目标记为已提交\",{\"1\":{\"573\":1}}],[\"将这些日志条目并行地复制到所有\",{\"1\":{\"573\":1}}],[\"将这个方法的调用放在一个独立的线程中执行\",{\"1\":{\"368\":1}}],[\"将请求作为日志条目追加到自己的日志中\",{\"1\":{\"573\":1}}],[\"将对象序列化为字节流\",{\"1\":{\"500\":1}}],[\"将其绑定到刚刚创建的接口\",{\"1\":{\"484\":1}}],[\"将其设置为1开启ip转发\",{\"1\":{\"393\":1}}],[\"将物理接口或已有的虚拟接口添加到桥接中\",{\"1\":{\"459\":1}}],[\"将数据变更应用到从服务器的数据库中\",{\"1\":{\"436\":1}}],[\"将新的数据行添加到相应的表中\",{\"1\":{\"434\":1}}],[\"将直播流地址作为输入源添加到obs中\",{\"1\":{\"418\":1}}],[\"将会导致运行时错误\",{\"1\":{\"312\":1}}],[\"将字节切片转换为字符串\",{\"1\":{\"222\":1}}],[\"将字符串转换为字节切片\",{\"1\":{\"222\":1}}],[\"将文件复制到表单\",{\"1\":{\"217\":1}}],[\"将元素转换为深褐色\",{\"1\":{\"47\":1}}],[\"将元素转换成灰度图像\",{\"1\":{\"47\":1}}],[\"打开preferences\",{\"1\":{\"366\":1}}],[\"打开要上传的文件\",{\"1\":{\"217\":1}}],[\"打印解码后的\",{\"1\":{\"191\":2}}],[\"客户端请求通常只能通过\",{\"1\":{\"575\":1}}],[\"客户端交互\",{\"0\":{\"575\":1}}],[\"客户端主动关闭\",{\"0\":{\"258\":1}}],[\"客户端都需要建立一个新的连接\",{\"1\":{\"251\":1}}],[\"客户端关闭连接\",{\"1\":{\"244\":1}}],[\"客户端\",{\"0\":{\"217\":1,\"245\":1,\"249\":1,\"322\":1,\"325\":1}}],[\"全局变量引起的内存占用\",{\"0\":{\"210\":1}}],[\"长期存在的goroutine引用对象\",{\"0\":{\"209\":1}}],[\"长整型\",{\"1\":{\"39\":1}}],[\"修正不连续或不规则时间戳\",{\"0\":{\"582\":1}}],[\"修正时间戳问题\",{\"0\":{\"581\":1}}],[\"修正\",{\"1\":{\"580\":1}}],[\"修改配置文件后\",{\"1\":{\"486\":1}}],[\"修改能力\",{\"1\":{\"230\":1}}],[\"修改切片本身\",{\"0\":{\"200\":1}}],[\"修饰的变量\",{\"1\":{\"30\":1}}],[\"切片是对数组的引用\",{\"1\":{\"310\":1}}],[\"切片\",{\"1\":{\"310\":1}}],[\"切片本身指针的作用\",{\"0\":{\"199\":1}}],[\"切换到base仓库的目录\",{\"1\":{\"114\":1}}],[\"返回的是指向\",{\"1\":{\"312\":1}}],[\"返回错误但不关闭服务器\",{\"1\":{\"244\":1}}],[\"返回错误\",{\"1\":{\"244\":1}}],[\"返回\",{\"0\":{\"331\":1,\"332\":1},\"1\":{\"194\":1}}],[\"意味着每个字段都被初始化为其类型的零值\",{\"1\":{\"194\":1}}],[\"xxx\",{\"1\":{\"608\":1,\"609\":1}}],[\"xml\",{\"1\":{\"597\":1}}],[\"xml添加依赖spring\",{\"1\":{\"366\":1}}],[\"xml里已经有了这个依赖却依然报错\",{\"1\":{\"363\":1}}],[\"x\",{\"1\":{\"191\":2}}],[\"xss攻击介绍\",{\"0\":{\"614\":1}}],[\"xss\",{\"0\":{\"616\":1,\"617\":1,\"618\":1,\"620\":1},\"1\":{\"76\":1,\"615\":1,\"616\":2,\"617\":3,\"618\":3}}],[\"易用的方式来进行数据编码和解码\",{\"1\":{\"190\":1}}],[\"总的来说\",{\"1\":{\"190\":1,\"311\":1,\"582\":1}}],[\"总结来说\",{\"1\":{\"230\":1}}],[\"总结\",{\"0\":{\"6\":1,\"22\":1,\"35\":1,\"93\":1,\"207\":1,\"426\":1,\"533\":1,\"587\":1,\"606\":1}}],[\"虽然使用事务可以确保消息的可靠发送\",{\"1\":{\"584\":1}}],[\"虽然volatile可以确保变量读写的可见性\",{\"1\":{\"376\":1}}],[\"虽然这些类型被归类为引用类型\",{\"1\":{\"311\":1}}],[\"虽然defer语句是非常可靠的\",{\"1\":{\"297\":1}}],[\"虽然不管调用主体是值还是指针\",{\"1\":{\"232\":1}}],[\"虽然字符串和字节切片在底层都是字节序列\",{\"1\":{\"222\":1}}],[\"虽然\",{\"1\":{\"190\":1,\"580\":1}}],[\"虽然事务提供了一种保证消息发送原子性的方法\",{\"1\":{\"4\":1}}],[\"跨语言兼容性\",{\"1\":{\"190\":1}}],[\"采用了一些技术来提高性能\",{\"1\":{\"190\":1}}],[\"反序列化\",{\"1\":{\"190\":1}}],[\"反转元素的颜色\",{\"1\":{\"47\":1}}],[\"序列化是将数据转换为一种可以在网络上传输或者存储到持久化存储介质\",{\"1\":{\"597\":1}}],[\"序列化的意义\",{\"0\":{\"597\":1}}],[\"序列化的作用\",{\"0\":{\"596\":1}}],[\"序列化\",{\"1\":{\"190\":1}}],[\"序列化和反序列化\",{\"1\":{\"190\":1,\"191\":1}}],[\"结合上述策略可以大大提高rabbitmq中消息的可靠性\",{\"1\":{\"587\":1}}],[\"结构不在本文讨论范围之内\",{\"1\":{\"528\":1}}],[\"结构体确实是以一种特定的方式\",{\"1\":{\"597\":1}}],[\"结构体指针\",{\"0\":{\"332\":1}}],[\"结构体实例\",{\"0\":{\"331\":1}}],[\"结构体字面量\",{\"1\":{\"315\":1}}],[\"结构体成员为接口的指针的使用示例\",{\"0\":{\"236\":1}}],[\"结构体\",{\"1\":{\"190\":1}}],[\"结论\",{\"0\":{\"18\":1,\"96\":1,\"158\":1}}],[\"包中定义\",{\"1\":{\"306\":1}}],[\"包的一些使用示例和使用场景\",{\"1\":{\"190\":1}}],[\"包提供了以下功能\",{\"1\":{\"190\":1}}],[\"包括那些可能导致时间戳问题的帧\",{\"1\":{\"580\":1}}],[\"包括消息的发布\",{\"1\":{\"577\":1}}],[\"包括配置网络接口\",{\"1\":{\"481\":1}}],[\"包括访客设备\",{\"1\":{\"474\":1}}],[\"包括防火墙规则\",{\"1\":{\"469\":1}}],[\"包括插入操作\",{\"1\":{\"436\":1}}],[\"包括但不限于插入\",{\"1\":{\"434\":1}}],[\"包括当一个sql插入语句在主服务器上执行时发生的事情\",{\"1\":{\"433\":1}}],[\"包括捕获\",{\"1\":{\"419\":1}}],[\"包括路由\",{\"1\":{\"393\":1}}],[\"包括函数和数组\",{\"1\":{\"380\":1}}],[\"包括在适当的时候删除它们\",{\"1\":{\"319\":1}}],[\"包括基本类型\",{\"1\":{\"194\":1}}],[\"包括\",{\"1\":{\"24\":1}}],[\"包括对数据的读取和写入\",{\"1\":{\"20\":1}}],[\"指出虽然所见即所得编辑器过滤了特殊的字符\",{\"1\":{\"618\":1}}],[\"指利用浏览器的特性\",{\"1\":{\"616\":1}}],[\"指定证书请求文件中的签名算法\",{\"0\":{\"633\":1}}],[\"指定\",{\"0\":{\"608\":1}}],[\"指定了希望的输出帧率为\",{\"1\":{\"582\":1}}],[\"指向一个新分配的\",{\"1\":{\"314\":1}}],[\"指向的通道是\",{\"1\":{\"312\":1}}],[\"指针类型实现接口的限制\",{\"0\":{\"234\":1}}],[\"指针实现\",{\"1\":{\"231\":1}}],[\"指针接收者允许直接修改原始数据\",{\"1\":{\"230\":1}}],[\"指针接收者在方法调用时\",{\"1\":{\"229\":1}}],[\"指针接收者\",{\"0\":{\"229\":1}}],[\"指针\",{\"1\":{\"194\":1,\"311\":1}}],[\"指的是\",{\"1\":{\"190\":1}}],[\"指标\",{\"1\":{\"61\":1}}],[\"即便在部分节点发生故障的情况下也能维持系统的正常运行\",{\"1\":{\"570\":1}}],[\"即反序列化\",{\"1\":{\"500\":1}}],[\"即序列化\",{\"1\":{\"500\":1}}],[\"即序列化和反序列化\",{\"1\":{\"190\":1}}],[\"即从服务器上的数据可能暂时落后于主服务器\",{\"1\":{\"439\":1}}],[\"即方法的调用将在一个单独的线程中执行\",{\"1\":{\"368\":1}}],[\"即上传的文件和其他表单数据\",{\"1\":{\"319\":1}}],[\"即一个\",{\"1\":{\"313\":1}}],[\"即一个指向该通道的指针\",{\"1\":{\"312\":1}}],[\"即切片\",{\"1\":{\"312\":1}}],[\"即没有使用recover\",{\"1\":{\"297\":1}}],[\"即最后一个defer语句会首先执行\",{\"1\":{\"294\":1,\"295\":1}}],[\"即值接收者\",{\"1\":{\"233\":1}}],[\"即\",{\"1\":{\"233\":1,\"300\":1,\"312\":1,\"580\":1}}],[\"即是\",{\"1\":{\"44\":1}}],[\"工作原理\",{\"0\":{\"186\":1,\"441\":1}}],[\"工作区\",{\"0\":{\"69\":2}}],[\"持久化队列\",{\"1\":{\"585\":1}}],[\"持久化消息\",{\"1\":{\"585\":1}}],[\"持久化的体现\",{\"0\":{\"183\":1}}],[\"持久连接\",{\"1\":{\"251\":1}}],[\"持续交付\",{\"1\":{\"104\":1}}],[\"持续集成\",{\"1\":{\"104\":1}}],[\"强制将视频转码为恒定帧率\",{\"1\":{\"582\":1}}],[\"强制恒定帧率\",{\"1\":{\"582\":1}}],[\"强制终止进程\",{\"1\":{\"388\":1}}],[\"强一致性\",{\"0\":{\"180\":1}}],[\"强一致性和最终一致性\",{\"0\":{\"179\":1}}],[\"强调一致性\",{\"1\":{\"176\":1}}],[\"还是有一些情况下\",{\"1\":{\"313\":1}}],[\"还是\",{\"0\":{\"178\":1},\"1\":{\"251\":1}}],[\"适用于需要高度自定义和支持广泛设备的视频点播和直播服务\",{\"1\":{\"425\":1}}],[\"适用于大结构体或需要修改接收者中数据的情况\",{\"1\":{\"229\":1}}],[\"适用于小结构体或基本数据类型的情况\",{\"1\":{\"228\":1}}],[\"适用于所有类型\",{\"1\":{\"194\":1}}],[\"适用场景\",{\"1\":{\"176\":1}}],[\"适应不同的使用场景\",{\"0\":{\"138\":1}}],[\"租约\",{\"1\":{\"176\":1}}],[\"算法\",{\"1\":{\"176\":1}}],[\"基本介绍\",{\"0\":{\"500\":1}}],[\"基本问题\",{\"0\":{\"294\":1}}],[\"基本使用\",{\"0\":{\"240\":1,\"503\":1}}],[\"基本概念\",{\"0\":{\"185\":1,\"388\":1}}],[\"基本语法\",{\"0\":{\"47\":1}}],[\"基于日志条目的应用\",{\"1\":{\"576\":1}}],[\"基于客户端请求或其他逻辑\",{\"1\":{\"244\":1}}],[\"基于\",{\"1\":{\"176\":1}}],[\"主动释放它占有的资源\",{\"1\":{\"563\":1}}],[\"主服务器的bin\",{\"0\":{\"453\":1}}],[\"主从复制过程\",{\"0\":{\"446\":1}}],[\"主从数据不一致的情况\",{\"1\":{\"438\":1}}],[\"主从同步过程\",{\"0\":{\"433\":1}}],[\"主播可以编写脚本来自动化处理视频流\",{\"1\":{\"419\":1}}],[\"主播可以对这些元素进行布局和混合\",{\"1\":{\"418\":1}}],[\"主播可以将自己的人像\",{\"1\":{\"418\":1}}],[\"主播需要捕获想要转发的直播流\",{\"1\":{\"418\":1}}],[\"主要为了提高消息中间件的可用性和扩展性\",{\"1\":{\"589\":1}}],[\"主要涉及以下几个阶段\",{\"1\":{\"552\":1}}],[\"主要由路由和防火墙规则决定\",{\"1\":{\"467\":1}}],[\"主要包括同步复制\",{\"1\":{\"438\":1}}],[\"主要用于直播流的推送\",{\"1\":{\"423\":1}}],[\"主要用于实时直播\",{\"1\":{\"423\":1}}],[\"主要用于共享配置和服务发现\",{\"1\":{\"176\":1}}],[\"主要是因为\",{\"1\":{\"313\":1}}],[\"主要体现在对原始数据的操作方式和效率上\",{\"1\":{\"227\":1}}],[\"主操作在单线程中执行\",{\"1\":{\"20\":1}}],[\"锁服务应当能够高效处理请求\",{\"1\":{\"170\":1}}],[\"锁的公平性\",{\"1\":{\"170\":1}}],[\"锁的行为是可预测和正确的\",{\"1\":{\"170\":1}}],[\"锁的可靠性\",{\"1\":{\"170\":1}}],[\"锁的独占性\",{\"1\":{\"170\":1}}],[\"性能和需求\",{\"1\":{\"432\":1}}],[\"性能和可伸缩性\",{\"1\":{\"170\":1}}],[\"性能考量\",{\"1\":{\"376\":1}}],[\"性能考虑\",{\"1\":{\"230\":1}}],[\"性能比较\",{\"0\":{\"153\":1}}],[\"避免消息丢失\",{\"1\":{\"587\":1}}],[\"避免线程占有资源而且在等待其他资源\",{\"1\":{\"563\":1}}],[\"避免死锁的方法\",{\"1\":{\"563\":1}}],[\"避免单一节点过载\",{\"1\":{\"534\":1}}],[\"避免了浮点数类型在金融计算中可能出现的精度问题\",{\"1\":{\"239\":1}}],[\"避免某些进程长时间无法获取锁\",{\"1\":{\"170\":1}}],[\"避免系统过载\",{\"1\":{\"10\":1}}],[\"存储的\",{\"1\":{\"597\":1}}],[\"存储在创建队列的节点上\",{\"1\":{\"589\":1}}],[\"存储在节点\",{\"1\":{\"272\":5}}],[\"存储所有节点的哈希值\",{\"1\":{\"272\":1}}],[\"存储\",{\"0\":{\"166\":1},\"1\":{\"166\":1}}],[\"存放在序列的起始位置\",{\"1\":{\"143\":1}}],[\"字幕和元数据等\",{\"1\":{\"431\":1}}],[\"字幕\",{\"1\":{\"418\":1}}],[\"字节的消息\",{\"1\":{\"301\":1}}],[\"字节的数据到\",{\"1\":{\"301\":1}}],[\"字节的情况\",{\"0\":{\"301\":1}}],[\"字节\",{\"1\":{\"300\":1,\"301\":3}}],[\"字节切片底层也是字节序列\",{\"1\":{\"221\":1}}],[\"字符串和字节切片之间的转换\",{\"0\":{\"222\":1}}],[\"字符串和字节切片\",{\"0\":{\"221\":1}}],[\"字符串只读\",{\"0\":{\"44\":1}}],[\"字段使用零值\",{\"1\":{\"159\":1}}],[\"又称golang\",{\"1\":{\"159\":1}}],[\"解决方案有两个\",{\"1\":{\"607\":1}}],[\"解决ffmpeg使用nohup挂起问题\",{\"0\":{\"607\":1}}],[\"解释\",{\"0\":{\"156\":1}}],[\"解析器为什么不设计成实现一个接口\",{\"0\":{\"134\":1}}],[\"库的特定版本\",{\"1\":{\"155\":1}}],[\"归并排序示例\",{\"0\":{\"154\":1}}],[\"时\",{\"1\":{\"221\":1,\"251\":1,\"303\":1,\"312\":1,\"469\":1,\"601\":1}}],[\"时间戳\",{\"1\":{\"582\":1}}],[\"时间戳问题\",{\"1\":{\"580\":1}}],[\"时间点查询等\",{\"1\":{\"176\":1}}],[\"时间复杂度\",{\"0\":{\"146\":1}}],[\"时它的值最大\",{\"1\":{\"37\":1}}],[\"快速排序和归并排序\",{\"0\":{\"151\":1}}],[\"快速排序是一种分治思想的排序算法\",{\"1\":{\"145\":1}}],[\"快速排序\",{\"0\":{\"145\":1,\"150\":1}}],[\"koʊˈhɪrəns\",{\"1\":{\"595\":1}}],[\"k8s\",{\"1\":{\"259\":1}}],[\"k8s简介及基本操作\",{\"0\":{\"259\":1}}],[\"kubernetes\",{\"0\":{\"260\":1,\"261\":1},\"1\":{\"259\":3,\"260\":1}}],[\"kvs\",{\"1\":{\"167\":1}}],[\"k\",{\"1\":{\"166\":1,\"167\":1}}],[\"kernel\",{\"0\":{\"161\":1}}],[\"key\",{\"1\":{\"144\":3,\"167\":1,\"272\":4,\"484\":1,\"626\":1}}],[\"kqueue\",{\"1\":{\"21\":1}}],[\"插入排序是一种简单直观的排序算法\",{\"1\":{\"144\":1}}],[\"插入排序\",{\"0\":{\"144\":1,\"149\":1}}],[\"插入排序和快速排序的简要介绍\",{\"1\":{\"141\":1}}],[\"9\",{\"1\":{\"496\":1,\"509\":1}}],[\"90\",{\"1\":{\"142\":1,\"143\":1,\"144\":1,\"145\":1}}],[\"967\",{\"1\":{\"37\":1}}],[\">>$home\",{\"1\":{\"505\":1}}],[\">>\",{\"1\":{\"364\":2}}],[\"><\",{\"1\":{\"322\":1}}],[\">upload<\",{\"1\":{\"322\":1}}],[\">=\",{\"1\":{\"144\":1,\"272\":1}}],[\">\",{\"1\":{\"142\":1,\"144\":1,\"322\":1,\"366\":2,\"496\":1,\"505\":1,\"608\":2,\"609\":2}}],[\"冒泡排序是一种简单的排序算法\",{\"1\":{\"142\":1}}],[\"冒泡排序\",{\"0\":{\"142\":1,\"147\":1}}],[\"排序算法介绍和示例\",{\"0\":{\"141\":1}}],[\"符合设计模式的最佳实践\",{\"0\":{\"139\":1}}],[\"降低复杂性和提高可维护性\",{\"0\":{\"137\":1}}],[\"详细叙述每一步的意义\",{\"0\":{\"125\":1}}],[\"注册为全局组件并创建一个vue插件\",{\"1\":{\"386\":1}}],[\"注册自定义类型\",{\"1\":{\"191\":1}}],[\"注册自定义\",{\"0\":{\"124\":1,\"128\":1}}],[\"注解来实现\",{\"1\":{\"368\":1}}],[\"注解可以应用于方法级别\",{\"1\":{\"368\":1}}],[\"注解\",{\"1\":{\"368\":3}}],[\"注解代码的组成\",{\"0\":{\"355\":1}}],[\"注解的架构\",{\"0\":{\"354\":1}}],[\"注意\",{\"0\":{\"487\":1,\"510\":1},\"1\":{\"298\":1}}],[\"注意事项\",{\"0\":{\"49\":1,\"116\":1,\"311\":1,\"376\":1,\"391\":1,\"416\":1,\"421\":1,\"439\":1,\"471\":1,\"494\":1,\"543\":1}}],[\"注释的含义\",{\"0\":{\"132\":1}}],[\"地址格式\",{\"1\":{\"423\":1,\"424\":1,\"425\":1}}],[\"地址\",{\"1\":{\"118\":1}}],[\"往etcd注册服务名\",{\"1\":{\"118\":1}}],[\"仓库及其子模块\",{\"0\":{\"115\":1}}],[\"仓库中添加子模块\",{\"0\":{\"114\":1}}],[\"克隆\",{\"0\":{\"115\":1}}],[\"子模块允许在一个git仓库中包含并管理指向其他git仓库的引用\",{\"1\":{\"112\":1}}],[\"搭建gitlab\",{\"0\":{\"107\":1,\"111\":1}}],[\"简而言之\",{\"1\":{\"512\":1}}],[\"简介\",{\"0\":{\"104\":1}}],[\"简单的重新封装就足够了\",{\"1\":{\"582\":1}}],[\"简单的go\",{\"0\":{\"63\":1}}],[\"简单对象访问协议\",{\"1\":{\"567\":1}}],[\"简单使用\",{\"0\":{\"72\":1}}],[\"批量操作所有子模块\",{\"0\":{\"102\":1}}],[\"<fork>true<\",{\"1\":{\"366\":1}}],[\"<file\",{\"1\":{\"217\":1}}],[\"<filter\",{\"1\":{\"47\":2}}],[\"<configuration>\",{\"1\":{\"366\":1}}],[\"<plugin>\",{\"1\":{\"366\":1}}],[\"<path>\",{\"1\":{\"100\":1}}],[\"<scope>runtime<\",{\"1\":{\"366\":1}}],[\"<script\",{\"1\":{\"322\":1}}],[\"<artifactid>spring\",{\"1\":{\"366\":2}}],[\"<groupid>org\",{\"1\":{\"366\":2}}],[\"<dependency>\",{\"1\":{\"366\":1}}],[\"<t>\",{\"0\":{\"333\":1},\"1\":{\"334\":1,\"335\":1}}],[\"<button\",{\"1\":{\"322\":1}}],[\"<body>\",{\"1\":{\"322\":1}}],[\"<input\",{\"1\":{\"322\":1}}],[\"<h2>file\",{\"1\":{\"322\":1}}],[\"<html>\",{\"1\":{\"322\":1}}],[\"<<eof\",{\"1\":{\"505\":2}}],[\"<<\",{\"1\":{\"319\":1}}],[\"<<8\",{\"1\":{\"272\":1}}],[\"<<16\",{\"1\":{\"272\":1}}],[\"<<24\",{\"1\":{\"272\":1}}],[\"<\",{\"1\":{\"142\":2,\"143\":3,\"144\":1,\"145\":3,\"217\":1,\"245\":1,\"272\":1,\"317\":1,\"318\":2,\"322\":3,\"366\":5,\"609\":1}}],[\"<remote\",{\"1\":{\"100\":1}}],[\"使得每个节点都能访问到完整的队列\",{\"1\":{\"589\":1}}],[\"使得可以将\",{\"1\":{\"190\":1}}],[\"使更改生效\",{\"1\":{\"486\":1}}],[\"使其能够在网络中通信\",{\"1\":{\"463\":1}}],[\"使之成为一个子模块\",{\"1\":{\"100\":1}}],[\"使用ca证书签名服务器证书文件\",{\"0\":{\"629\":1}}],[\"使用ca的公钥解密证书中的签名\",{\"1\":{\"560\":1}}],[\"使用数据库的唯一约束\",{\"1\":{\"600\":1}}],[\"使用单一消费者模式\",{\"0\":{\"599\":1}}],[\"使用消息队列来实现这一需求\",{\"1\":{\"598\":1}}],[\"使用消息队列缓冲请求\",{\"1\":{\"10\":1}}],[\"使用备份交换机和死信队列处理无法路由的消息或无法处理的消息\",{\"1\":{\"587\":1}}],[\"使用发布确认和事务确保生产者到交换机的消息可靠性\",{\"1\":{\"587\":1}}],[\"使用ifconfig命令列出所有接口\",{\"1\":{\"507\":1}}],[\"使用ip\",{\"1\":{\"479\":1}}],[\"使用iptables等工具配置防火墙规则和网络地址转换\",{\"1\":{\"393\":1}}],[\"使用虚拟环境\",{\"0\":{\"498\":1}}],[\"使用pip\",{\"1\":{\"495\":1}}],[\"使用path\",{\"1\":{\"225\":1}}],[\"使用uci命令设置桥接接口和vlan\",{\"1\":{\"464\":1}}],[\"使用如下命令\",{\"1\":{\"461\":1}}],[\"使用ffmpeg解决视频时间戳错乱的问题\",{\"0\":{\"580\":1}}],[\"使用ffmpeg\",{\"1\":{\"419\":1}}],[\"使用ffmpeg进行高级处理\",{\"0\":{\"419\":1}}],[\"使用filepath\",{\"1\":{\"225\":1}}],[\"使用直播软件\",{\"0\":{\"418\":1}}],[\"使用netplan连接wifi\",{\"0\":{\"409\":1}}],[\"使用volatile会禁止编译器对这些变量进行某些优化\",{\"1\":{\"376\":1}}],[\"使用volatile可以确保当一个线程修改了变量的值时\",{\"1\":{\"375\":1}}],[\"使用range后会循环到channel关闭\",{\"1\":{\"318\":1}}],[\"使用return来退出goroutine\",{\"1\":{\"245\":1}}],[\"使用openssl自签名证书\",{\"0\":{\"623\":1}}],[\"使用openwrt\",{\"1\":{\"475\":1}}],[\"使用ok判断\",{\"0\":{\"317\":1}}],[\"使用os\",{\"1\":{\"297\":1}}],[\"使用复合字面量创建结构体的指针\",{\"1\":{\"315\":1}}],[\"使用mmap\",{\"0\":{\"293\":1}}],[\"使用gin和nginx提供http2协议的web服务\",{\"0\":{\"254\":1}}],[\"使用golang连接\",{\"0\":{\"56\":1}}],[\"使用整数类型\",{\"1\":{\"239\":1}}],[\"使用结构体成员的接口指针\",{\"0\":{\"238\":1}}],[\"使用指针接收者可以减少数据复制的开销\",{\"1\":{\"230\":1}}],[\"使用指针接收者定义的方法\",{\"1\":{\"229\":1}}],[\"使用的是原始值的内存地址\",{\"1\":{\"229\":1}}],[\"使用的是原始值的一个副本\",{\"1\":{\"228\":1}}],[\"使用值接收者定义的方法\",{\"1\":{\"228\":1}}],[\"使用示例\",{\"0\":{\"172\":1,\"191\":1,\"231\":1,\"377\":1}}],[\"使用类型字面量\",{\"1\":{\"159\":1}}],[\"使用docker\",{\"0\":{\"108\":1,\"110\":1}}],[\"使用默认的输出配置\",{\"1\":{\"80\":1}}],[\"使用\",{\"0\":{\"70\":1,\"94\":1,\"171\":1,\"262\":1,\"263\":1,\"389\":1,\"414\":1,\"479\":1,\"480\":1,\"491\":1,\"492\":1,\"493\":1,\"509\":1,\"581\":1},\"1\":{\"20\":1,\"312\":2,\"314\":1,\"380\":2,\"392\":1,\"418\":1,\"618\":1}}],[\"使用场景和性能考虑\",{\"0\":{\"592\":1}}],[\"使用场景\",{\"0\":{\"10\":1,\"192\":1,\"375\":1,\"444\":1}}],[\"使用事务消息\",{\"0\":{\"13\":1}}],[\"使用事务可能不是最佳选择\",{\"1\":{\"4\":1}}],[\"使用事务的步骤\",{\"0\":{\"3\":1}}],[\"分别与互联网上的服务器建立了通信会话\",{\"1\":{\"458\":1}}],[\"分配ip地址给新的桥接接口\",{\"1\":{\"480\":1}}],[\"分配ip地址\",{\"1\":{\"479\":1,\"480\":1}}],[\"分配同一网段的ip地址\",{\"1\":{\"474\":1}}],[\"分配类型\",{\"1\":{\"312\":1}}],[\"分配一个字符串\",{\"1\":{\"194\":1}}],[\"分配的是零值\",{\"1\":{\"194\":1}}],[\"分布式数据库\",{\"1\":{\"589\":1}}],[\"分布式系统\",{\"1\":{\"577\":1}}],[\"分布式系统的配置管理\",{\"1\":{\"176\":1}}],[\"分布式锁\",{\"1\":{\"176\":1}}],[\"分布式事务管理\",{\"1\":{\"10\":1}}],[\"分离构建与解析逻辑\",{\"0\":{\"135\":1}}],[\"分析\",{\"0\":{\"94\":1,\"335\":1}}],[\"区别\",{\"0\":{\"84\":1,\"152\":1,\"196\":1}}],[\"+\",{\"1\":{\"79\":1,\"143\":1,\"145\":1,\"244\":4,\"366\":1,\"509\":1}}],[\"^br\",{\"1\":{\"507\":1,\"508\":1}}],[\"^\",{\"1\":{\"79\":1,\"509\":1}}],[\"^index\",{\"1\":{\"79\":1}}],[\"匹配以\",{\"1\":{\"79\":1}}],[\"递归查找\",{\"1\":{\"79\":1}}],[\"递归地查找文件\",{\"1\":{\"79\":1}}],[\"jms\",{\"1\":{\"567\":1}}],[\"john\",{\"1\":{\"500\":1}}],[\"join\",{\"1\":{\"79\":1}}],[\"java的重量级配置错误常常会让人抓狂\",{\"1\":{\"361\":1}}],[\"java8支持\",{\"0\":{\"352\":1,\"353\":1}}],[\"java7支持\",{\"0\":{\"351\":1}}],[\"java注解\",{\"0\":{\"338\":1}}],[\"java\",{\"0\":{\"333\":1,\"367\":1,\"569\":1},\"1\":{\"567\":1}}],[\"j+1\",{\"1\":{\"142\":3,\"144\":2}}],[\"j++\",{\"1\":{\"142\":1,\"143\":1,\"145\":1}}],[\"j\",{\"1\":{\"142\":5,\"143\":4,\"144\":6,\"145\":5,\"476\":5}}],[\"json\",{\"1\":{\"597\":1}}],[\"json直接对应的文件来跟踪项目依赖\",{\"1\":{\"495\":1}}],[\"json反序列化\",{\"0\":{\"201\":1}}],[\"js不同\",{\"1\":{\"495\":1}}],[\"js函数的\",{\"0\":{\"382\":1}}],[\"js模拟私有变量和静态变量\",{\"0\":{\"381\":1}}],[\"js判断对象的三种方法\",{\"0\":{\"380\":1}}],[\"js示例\",{\"0\":{\"97\":1}}],[\"js$\",{\"1\":{\"79\":2}}],[\"js\",{\"1\":{\"79\":4,\"80\":1,\"322\":1,\"386\":1}}],[\"脚本来实现这个需求的示例\",{\"1\":{\"79\":1}}],[\"目录及其子目录下所有以\",{\"1\":{\"79\":1}}],[\"开始直播\",{\"1\":{\"418\":1}}],[\"开发人员可能需要调用特定的系统调用\",{\"1\":{\"305\":1}}],[\"开头的\",{\"0\":{\"79\":1},\"1\":{\"79\":2}}],[\"开启事务\",{\"1\":{\"3\":1}}],[\"动态构建入口对象\",{\"1\":{\"79\":1}}],[\"动态查找以\",{\"0\":{\"79\":1}}],[\"动态查找入口文件\",{\"0\":{\"78\":1}}],[\"动态申请的内存\",{\"1\":{\"30\":1}}],[\"静态路由设置\",{\"1\":{\"393\":1}}],[\"静态变量\",{\"0\":{\"382\":1,\"383\":1}}],[\"静态变量区\",{\"1\":{\"30\":1}}],[\"静态文件服务\",{\"1\":{\"76\":1}}],[\"尤其是当你以高分辨率和帧率直播时\",{\"1\":{\"420\":1}}],[\"尤其是在脚本编程中\",{\"1\":{\"387\":1}}],[\"尤其是在涉及到共享数据或优化性能\",{\"1\":{\"313\":1}}],[\"尤其是在文件读取或网络通信中\",{\"1\":{\"309\":1}}],[\"尤其是在响应时间对于应用至关重要时\",{\"1\":{\"22\":1}}],[\"尤其适用于无法直接控制服务器响应头的情况\",{\"1\":{\"76\":1}}],[\"但其中的很多写的都是含糊不清的\",{\"1\":{\"624\":1}}],[\"但依然可能发生\",{\"1\":{\"618\":1}}],[\"但我始终想写一个简单的总结\",{\"1\":{\"615\":1}}],[\"但仅允许第一个响应的骑手获得订单\",{\"0\":{\"600\":1}}],[\"但可能会增加消息传输的延迟\",{\"1\":{\"589\":1}}],[\"但可以通过一系列的配置和设计选择来最小化这种风险\",{\"1\":{\"583\":1}}],[\"但可以正常上网\",{\"1\":{\"477\":1}}],[\"但并不提供消息或队列的冗余\",{\"1\":{\"589\":1}}],[\"但最佳的处理方法取决于问题的具体性质和目标视频的要求\",{\"1\":{\"582\":1}}],[\"但需要确保目标播放器或设备支持\",{\"1\":{\"581\":1}}],[\"但需要一个指向该类型的指针\",{\"1\":{\"313\":1}}],[\"但还是在很多细节上没有彻底理解的错觉\",{\"1\":{\"528\":1}}],[\"但允许它们访问外部互联网\",{\"1\":{\"475\":1}}],[\"但为每个会话分配不同的外部端口号\",{\"1\":{\"458\":1}}],[\"但由于它不是基于http\",{\"1\":{\"423\":1}}],[\"但由于字符串的不可变性\",{\"1\":{\"222\":1}}],[\"但它会显著降低消息吞吐量\",{\"1\":{\"584\":1}}],[\"但它有助于组织和管理目的\",{\"1\":{\"473\":1}}],[\"但它本身并不提供互斥或原子性保证\",{\"1\":{\"376\":1}}],[\"但它们在使用上有一些重要的区别\",{\"1\":{\"312\":1}}],[\"但它们的赋值和传递行为在一些情况下仍然需要谨慎处理\",{\"1\":{\"311\":1}}],[\"但它们存储了对其他变量的直接引用\",{\"1\":{\"311\":1}}],[\"但它们是完全不同的两种类型\",{\"1\":{\"221\":1}}],[\"但它们用于不同类型并且行为有所不同\",{\"1\":{\"193\":1}}],[\"但核心概念相似\",{\"1\":{\"374\":1}}],[\"但发现很多不全\",{\"1\":{\"365\":1}}],[\"但无法接受到关闭channel后自动发送的零值\",{\"1\":{\"318\":1}}],[\"但又不需要立即分配或初始化更复杂的数据时是有用的\",{\"1\":{\"313\":1}}],[\"但在使用上更为简便\",{\"1\":{\"311\":1}}],[\"但在某些情况下\",{\"1\":{\"297\":1}}],[\"但\",{\"1\":{\"311\":1}}],[\"但这种方法并不适用于本场景\",{\"1\":{\"599\":1}}],[\"但这并不意味着它会修正时间戳问题\",{\"1\":{\"580\":1}}],[\"但这并不是保证的\",{\"1\":{\"305\":1}}],[\"但这是指在相同的函数内\",{\"1\":{\"298\":1}}],[\"但不会显示接口的详细信息\",{\"1\":{\"507\":1}}],[\"但不关闭服务器\",{\"1\":{\"244\":1}}],[\"但不将其赋给任何命名变量\",{\"1\":{\"156\":1}}],[\"但反过来不行\",{\"1\":{\"233\":1}}],[\"但是当您需要将数据传输到网络\",{\"1\":{\"597\":1}}],[\"但是\",{\"1\":{\"380\":1}}],[\"但是我的pom\",{\"1\":{\"363\":1}}],[\"但是对于初学者来说\",{\"1\":{\"361\":1}}],[\"但是在使用上还是有一点影响和区别\",{\"1\":{\"232\":1}}],[\"但是也提供了一些支持\",{\"1\":{\"190\":1}}],[\"但是它也有一定的性能影响\",{\"1\":{\"4\":1}}],[\"但会让浏览器在处理页面时应用csp规则\",{\"1\":{\"76\":1}}],[\"以处理消费者处理消息失败的情况\",{\"1\":{\"586\":1}}],[\"以进一步提高性能\",{\"1\":{\"534\":1}}],[\"以确保网络安全性和功能性符合预期\",{\"1\":{\"477\":1}}],[\"以确保在重启后配置仍然有效\",{\"1\":{\"464\":1}}],[\"以实现网络隔离的同时保持网络通信的需要\",{\"1\":{\"477\":1}}],[\"以阻止访客网络中的设备访问主网络中的资源\",{\"1\":{\"475\":1}}],[\"以隔离访客设备\",{\"1\":{\"475\":1}}],[\"以便为所有设备\",{\"1\":{\"474\":1}}],[\"以便正确地进行序列化和反序列化\",{\"1\":{\"190\":1}}],[\"以保护内容和用户数据安全\",{\"1\":{\"534\":1}}],[\"以保障规则的正确应用\",{\"1\":{\"471\":1}}],[\"以保持数据库的一致性\",{\"1\":{\"433\":1}}],[\"以防止br3上的设备访问br0上的设备\",{\"1\":{\"468\":1}}],[\"以提高数据一致性\",{\"1\":{\"438\":1}}],[\"以避免占用过多的磁盘空间\",{\"1\":{\"319\":1}}],[\"以减少总体延迟\",{\"1\":{\"303\":1}}],[\"以分来存储而不是以元\",{\"1\":{\"239\":1}}],[\"以上代码强转\",{\"1\":{\"233\":1}}],[\"以及可能的资源开销\",{\"1\":{\"587\":1}}],[\"以及消息在队列中的存储\",{\"1\":{\"583\":1}}],[\"以及如何设置数据卷以映射重要文件\",{\"1\":{\"535\":1}}],[\"以及配置vlan\",{\"1\":{\"459\":1}}],[\"以及特定的服务器和客户端配置\",{\"1\":{\"251\":1}}],[\"以及一些内部优化策略\",{\"1\":{\"190\":1}}],[\"以及将字节流解码为\",{\"1\":{\"190\":1}}],[\"以及它们可以从哪里加载\",{\"1\":{\"76\":1}}],[\"以下演示了如何查看脚本资源代码的使用率\",{\"1\":{\"613\":1}}],[\"以下是一种可能的解决方案\",{\"1\":{\"598\":1}}],[\"以下是一个简单的示例\",{\"1\":{\"500\":1}}],[\"以下是一个简单的例子\",{\"1\":{\"476\":1}}],[\"以下是一个基本的步骤指南\",{\"1\":{\"481\":1}}],[\"以下是一个基本的指南\",{\"1\":{\"459\":1}}],[\"以下是一个基于openwrt\",{\"1\":{\"472\":1}}],[\"以下是一些处理金额的方式\",{\"1\":{\"239\":1}}],[\"以下是一些常用的方法\",{\"1\":{\"159\":1}}],[\"以下是使linux服务器作为路由器的几个关键步骤\",{\"1\":{\"393\":1}}],[\"以下是使用\",{\"1\":{\"314\":1}}],[\"以下是\",{\"1\":{\"190\":1,\"310\":1}}],[\"以下是对冒泡排序\",{\"1\":{\"141\":1}}],[\"以下是具体步骤\",{\"1\":{\"112\":1}}],[\"以下简要介绍\",{\"1\":{\"29\":1}}],[\"图片\",{\"1\":{\"76\":1}}],[\"qs\",{\"0\":{\"580\":1}}],[\"queues\",{\"1\":{\"586\":1,\"589\":1}}],[\"quicksort\",{\"1\":{\"145\":4}}],[\"quick\",{\"0\":{\"145\":1,\"150\":1}}],[\"quota\",{\"1\":{\"61\":2}}],[\"q=2\",{\"1\":{\"74\":1}}],[\"wpasupplicant\",{\"1\":{\"409\":1}}],[\"web这个artifact中\",{\"1\":{\"363\":1}}],[\"webpackconfig\",{\"1\":{\"79\":1}}],[\"webpack\",{\"0\":{\"77\":1,\"97\":1},\"1\":{\"79\":1,\"80\":4}}],[\"whitelabel\",{\"0\":{\"357\":1},\"1\":{\"357\":1}}],[\"wg\",{\"1\":{\"318\":4}}],[\"wifi\",{\"1\":{\"484\":2}}],[\"wireless文件中添加一个新的无线网络配置段落\",{\"1\":{\"484\":1}}],[\"wireless文件或使用uci命令来配置无线网络\",{\"1\":{\"466\":1}}],[\"will\",{\"1\":{\"298\":1}}],[\"withblock\",{\"1\":{\"245\":1}}],[\"withtransportcredentials\",{\"1\":{\"245\":1}}],[\"withtimeout\",{\"1\":{\"167\":1}}],[\"withvalue使用结构体作为key\",{\"0\":{\"189\":1}}],[\"withlease\",{\"1\":{\"118\":1}}],[\"withfiletypes\",{\"1\":{\"79\":1}}],[\"words\",{\"0\":{\"595\":1}}],[\"workspaces是什么\",{\"0\":{\"65\":1}}],[\"workspaces\",{\"1\":{\"64\":1}}],[\"workspaces简介\",{\"0\":{\"64\":1}}],[\"won\",{\"1\":{\"298\":2}}],[\"warning\",{\"1\":{\"609\":1}}],[\"wan\",{\"1\":{\"485\":1}}],[\"wait\",{\"1\":{\"318\":1}}],[\"wal\",{\"0\":{\"184\":1}}],[\"watch\",{\"0\":{\"168\":1}}],[\"writestring\",{\"1\":{\"271\":1}}],[\"writer\",{\"1\":{\"217\":5,\"271\":3}}],[\"write\",{\"0\":{\"184\":1},\"1\":{\"272\":1,\"299\":1,\"303\":1}}],[\"www\",{\"1\":{\"74\":1}}],[\"恰巧在网上看到一篇不错关于url组成的图形化描述\",{\"1\":{\"73\":1}}],[\"参数的其他值可以用于处理不同的时间戳和帧率问题\",{\"1\":{\"580\":1}}],[\"参数指示\",{\"1\":{\"580\":1}}],[\"参数说明\",{\"1\":{\"44\":1}}],[\"参照了网上很多方法\",{\"1\":{\"365\":1}}],[\"参考\",{\"0\":{\"71\":1,\"75\":1,\"337\":1,\"526\":1,\"622\":1}}],[\"lan\",{\"1\":{\"485\":2}}],[\"luci\",{\"1\":{\"470\":1,\"471\":1,\"482\":1,\"487\":1}}],[\"lunatech\",{\"1\":{\"74\":1}}],[\"library\",{\"1\":{\"511\":1}}],[\"link\",{\"1\":{\"460\":2,\"461\":2,\"462\":3,\"479\":3,\"480\":1}}],[\"linux服务器可以被配置为路由器\",{\"1\":{\"393\":1}}],[\"linux设置wifi\",{\"0\":{\"406\":1}}],[\"linux设置为路由器\",{\"0\":{\"393\":1}}],[\"linux设置dns\",{\"0\":{\"392\":1}}],[\"linux\",{\"0\":{\"387\":1},\"1\":{\"387\":1}}],[\"live\",{\"0\":{\"424\":1},\"1\":{\"423\":1,\"424\":1}}],[\"lifo\",{\"1\":{\"294\":1,\"295\":1}}],[\"listening\",{\"1\":{\"271\":2}}],[\"listener\",{\"1\":{\"271\":3}}],[\"listen\",{\"1\":{\"244\":2,\"271\":1,\"299\":4}}],[\"lis\",{\"1\":{\"244\":2}}],[\"leader\",{\"1\":{\"571\":4,\"572\":2,\"573\":3,\"574\":3,\"575\":2}}],[\"learning\",{\"0\":{\"569\":1}}],[\"leakyfunction\",{\"1\":{\"209\":1}}],[\"leaseresp\",{\"1\":{\"118\":2}}],[\"leaseid\",{\"1\":{\"118\":4}}],[\"len\",{\"1\":{\"142\":1,\"143\":1,\"144\":1,\"145\":1,\"217\":1,\"272\":4}}],[\"letter\",{\"1\":{\"585\":1}}],[\"let\",{\"1\":{\"79\":1}}],[\"lerna\",{\"0\":{\"70\":1}}],[\"loaded\",{\"1\":{\"500\":2}}],[\"loads\",{\"1\":{\"500\":4}}],[\"local\",{\"1\":{\"364\":1}}],[\"localhost\",{\"1\":{\"165\":1,\"217\":1,\"245\":1}}],[\"location\",{\"1\":{\"76\":1}}],[\"low\",{\"1\":{\"145\":7}}],[\"loglevel\",{\"1\":{\"609\":1}}],[\"log\",{\"0\":{\"184\":1},\"1\":{\"118\":2,\"165\":2,\"166\":1,\"167\":2,\"231\":2,\"244\":7,\"245\":9,\"433\":2,\"435\":1,\"608\":1,\"609\":1}}],[\"long\",{\"0\":{\"39\":1}}],[\"york\",{\"1\":{\"500\":1}}],[\"yourvolumename\",{\"1\":{\"414\":1}}],[\"yourusername\",{\"1\":{\"113\":2,\"114\":2}}],[\"your\",{\"1\":{\"61\":1}}],[\"you\",{\"1\":{\"61\":1}}],[\"y\",{\"1\":{\"191\":2}}],[\"yarn\",{\"0\":{\"69\":1}}],[\"与其对应的外部通信会话的关键数据结构\",{\"1\":{\"456\":1}}],[\"与hls类似\",{\"1\":{\"425\":1}}],[\"与\",{\"0\":{\"69\":1,\"525\":1}}],[\"其原理如下\",{\"1\":{\"534\":1}}],[\"其流量会通过br3进行路由\",{\"1\":{\"466\":1}}],[\"其他线程能够立即看到这个变化\",{\"1\":{\"375\":1}}],[\"其他配置\",{\"1\":{\"79\":1}}],[\"其字段\",{\"1\":{\"314\":1}}],[\"其它命令\",{\"0\":{\"631\":1}}],[\"其它安全措施\",{\"0\":{\"621\":1}}],[\"其它\",{\"0\":{\"215\":1}}],[\"其它用法\",{\"0\":{\"68\":1}}],[\"其中每个骑手都订阅了某个特定的订单通知主题\",{\"1\":{\"600\":1}}],[\"其中包括多个证书\",{\"1\":{\"559\":1}}],[\"其中键是唯一的\",{\"1\":{\"310\":1}}],[\"其中一部分的所有元素都比另外一部分的所有元素都小\",{\"1\":{\"145\":1}}],[\"其中<filter\",{\"1\":{\"47\":1}}],[\"其中\",{\"1\":{\"44\":1}}],[\"配置rabbitmq集群\",{\"0\":{\"550\":1}}],[\"配置防火墙规则\",{\"0\":{\"475\":1}}],[\"配置dhcp服务\",{\"0\":{\"474\":1}}],[\"配置文件示例\",{\"1\":{\"470\":1}}],[\"配置无线网络\",{\"0\":{\"484\":1},\"1\":{\"466\":1}}],[\"配置ip地址\",{\"0\":{\"463\":1}}],[\"配置和监控\",{\"1\":{\"439\":1}}],[\"配置和使用\",{\"0\":{\"67\":1}}],[\"配置网络接口\",{\"0\":{\"401\":1,\"483\":1}}],[\"配置您的电脑\",{\"0\":{\"399\":1}}],[\"配置linux转发\",{\"0\":{\"394\":1}}],[\"配置linux服务器上的网络接口\",{\"1\":{\"393\":1}}],[\"配置gitlab\",{\"0\":{\"109\":1}}],[\"配置中明确指定输出文件的名称时\",{\"1\":{\"80\":1}}],[\"配置\",{\"0\":{\"95\":1,\"397\":1,\"398\":1,\"402\":1,\"445\":1},\"1\":{\"79\":1}}],[\"配额\",{\"1\":{\"61\":1}}],[\"数字签名验证\",{\"0\":{\"560\":1}}],[\"数组\",{\"1\":{\"380\":1}}],[\"数组中\",{\"1\":{\"301\":1}}],[\"数学累加\",{\"0\":{\"62\":1}}],[\"数据库等\",{\"1\":{\"597\":1}}],[\"数据包路由的例子\",{\"0\":{\"458\":1}}],[\"数据延迟\",{\"1\":{\"439\":1}}],[\"数据可能会被相对快速地发送出去\",{\"1\":{\"305\":1}}],[\"数据的即时性\",{\"0\":{\"305\":1}}],[\"数据首先被复制到操作系统的发送缓冲区\",{\"1\":{\"303\":1}}],[\"数据传输\",{\"0\":{\"282\":1}}],[\"数据区\",{\"1\":{\"30\":1}}],[\"数据一致性保证\",{\"0\":{\"11\":1}}],[\"数据处理等耗时操作\",{\"1\":{\"10\":1}}],[\"定义一个字典对象\",{\"1\":{\"500\":1}}],[\"定义一致性哈希的结构\",{\"1\":{\"272\":1}}],[\"定义了一个新的网络接口名为\",{\"1\":{\"470\":1}}],[\"定义入口目录和匹配模式\",{\"1\":{\"79\":1}}],[\"定义\",{\"1\":{\"61\":1}}],[\"udp\",{\"1\":{\"476\":2}}],[\"uci\",{\"1\":{\"464\":4,\"468\":7}}],[\"utils\",{\"1\":{\"460\":1}}],[\"utils包\",{\"1\":{\"460\":1,\"480\":1}}],[\"util\",{\"1\":{\"376\":1}}],[\"unix\",{\"1\":{\"388\":2}}],[\"uni\",{\"1\":{\"381\":1}}],[\"unit\",{\"1\":{\"274\":1}}],[\"unimplementednotificationserviceserver\",{\"1\":{\"244\":1}}],[\"unsorted\",{\"1\":{\"142\":1,\"143\":1,\"144\":1,\"145\":1}}],[\"unsigned\",{\"1\":{\"44\":1}}],[\"using\",{\"1\":{\"225\":2}}],[\"usage\",{\"1\":{\"217\":1}}],[\"user\",{\"0\":{\"162\":1}}],[\"usr\",{\"1\":{\"76\":1}}],[\"url>\",{\"1\":{\"100\":1}}],[\"url组成\",{\"0\":{\"74\":1}}],[\"url由多部分构成\",{\"1\":{\"73\":1}}],[\"update\",{\"1\":{\"409\":1,\"460\":1}}],[\"uploadfile\",{\"1\":{\"322\":1}}],[\"upload\",{\"1\":{\"217\":1,\"322\":1}}],[\"up\",{\"1\":{\"61\":3,\"460\":1,\"479\":1,\"480\":1}}],[\"python反序列化字节流\",{\"0\":{\"499\":1}}],[\"python与node\",{\"1\":{\"495\":1}}],[\"python\",{\"0\":{\"495\":1},\"1\":{\"500\":5}}],[\"php\",{\"1\":{\"491\":2,\"492\":4}}],[\"php调用脚本的几种方法\",{\"0\":{\"490\":1}}],[\"psk2\",{\"1\":{\"484\":1}}],[\"playlist\",{\"1\":{\"424\":1}}],[\"plane\",{\"1\":{\"260\":1}}],[\"plugin>\",{\"1\":{\"366\":1}}],[\"plugin<\",{\"1\":{\"366\":1}}],[\"plugin添加配置项fork\",{\"1\":{\"366\":1}}],[\"pb\",{\"0\":{\"331\":1,\"332\":1},\"1\":{\"243\":2,\"244\":5,\"245\":4}}],[\"pms\",{\"1\":{\"231\":4}}],[\"p\",{\"1\":{\"219\":3,\"225\":2,\"476\":3}}],[\"pom\",{\"1\":{\"366\":1}}],[\"pod\",{\"1\":{\"260\":2}}],[\"post\",{\"0\":{\"469\":1},\"1\":{\"217\":1}}],[\"pointers\",{\"1\":{\"311\":1}}],[\"pointer\",{\"1\":{\"227\":1}}],[\"point\",{\"1\":{\"191\":8}}],[\"policy\",{\"0\":{\"523\":1,\"524\":1},\"1\":{\"76\":3}}],[\"person\",{\"1\":{\"191\":7}}],[\"pickle\",{\"1\":{\"500\":7}}],[\"pip\",{\"1\":{\"496\":1}}],[\"pid\",{\"1\":{\"264\":2,\"608\":1,\"609\":1}}],[\"pivot\",{\"1\":{\"145\":2}}],[\"pi+1\",{\"1\":{\"145\":1}}],[\"pi\",{\"1\":{\"145\":2}}],[\"profile\",{\"1\":{\"505\":1}}],[\"proc\",{\"1\":{\"393\":1}}],[\"process\",{\"1\":{\"299\":2,\"307\":1}}],[\"proto=\",{\"1\":{\"468\":1}}],[\"prototype和\",{\"0\":{\"383\":1}}],[\"prototype\",{\"1\":{\"380\":2}}],[\"protocol\",{\"0\":{\"423\":1}}],[\"protoc\",{\"1\":{\"266\":1}}],[\"protoc命令详解\",{\"0\":{\"266\":1}}],[\"protoc命令\",{\"0\":{\"265\":1}}],[\"proto3\",{\"1\":{\"243\":1}}],[\"proto\",{\"0\":{\"243\":1,\"247\":1},\"1\":{\"266\":1,\"470\":1,\"483\":1,\"485\":1}}],[\"project\",{\"1\":{\"366\":1}}],[\"project2\",{\"1\":{\"113\":1,\"114\":3}}],[\"project1\",{\"1\":{\"113\":1,\"114\":3}}],[\"project1和project2\",{\"1\":{\"112\":1}}],[\"print\",{\"1\":{\"271\":1,\"500\":1}}],[\"printf\",{\"1\":{\"167\":1,\"244\":2,\"245\":1}}],[\"println\",{\"1\":{\"142\":2,\"143\":2,\"144\":2,\"145\":2,\"191\":6,\"217\":1,\"225\":2,\"231\":2,\"244\":2,\"245\":2,\"271\":4,\"272\":5,\"294\":3,\"296\":3,\"298\":5,\"299\":4,\"318\":2}}],[\"publisher\",{\"1\":{\"584\":2}}],[\"public\",{\"1\":{\"335\":1,\"368\":4}}],[\"put\",{\"1\":{\"118\":1,\"166\":1}}],[\"push\",{\"1\":{\"79\":1,\"114\":1,\"381\":1}}],[\"page\",{\"0\":{\"357\":1},\"1\":{\"357\":1}}],[\"parsemultipartform\",{\"1\":{\"319\":1}}],[\"parsemultipartform内存限制大小\",{\"0\":{\"319\":1}}],[\"part\",{\"1\":{\"217\":2}}],[\"partition\",{\"1\":{\"145\":2,\"512\":1}}],[\"part1\",{\"0\":{\"61\":1}}],[\"panic\",{\"1\":{\"217\":4,\"298\":6}}],[\"package=\",{\"1\":{\"243\":1}}],[\"package\",{\"1\":{\"118\":1,\"142\":1,\"143\":1,\"144\":1,\"145\":1,\"165\":1,\"191\":2,\"217\":1,\"243\":1,\"244\":1,\"245\":1,\"271\":1,\"272\":1}}],[\"pattern\",{\"1\":{\"79\":5}}],[\"path>\",{\"1\":{\"217\":1}}],[\"path\",{\"1\":{\"79\":6,\"114\":1,\"217\":2,\"225\":2,\"424\":1,\"425\":1,\"491\":2,\"492\":2}}],[\"p=1\",{\"1\":{\"74\":1}}],[\"ptr\",{\"1\":{\"44\":3,\"314\":3,\"315\":1}}],[\"erlang\",{\"0\":{\"540\":1,\"541\":1},\"1\":{\"577\":7,\"589\":1}}],[\"errclosed\",{\"1\":{\"271\":1}}],[\"error\",{\"0\":{\"357\":1},\"1\":{\"118\":1,\"191\":4,\"231\":2,\"244\":1,\"271\":6,\"357\":1,\"609\":1}}],[\"err\",{\"1\":{\"118\":8,\"165\":3,\"166\":3,\"167\":3,\"191\":12,\"217\":12,\"244\":15,\"245\":19,\"271\":10,\"299\":12,\"300\":1,\"308\":3}}],[\"e\",{\"1\":{\"507\":1,\"508\":1,\"509\":1}}],[\"echo\",{\"1\":{\"492\":2,\"608\":1,\"609\":1}}],[\"ether\",{\"1\":{\"505\":2}}],[\"eth0是连接到互联网的外部接口\",{\"1\":{\"476\":1}}],[\"eth0\",{\"1\":{\"461\":2,\"462\":3,\"464\":1,\"470\":1,\"476\":1}}],[\"etc\",{\"1\":{\"464\":2,\"466\":1,\"468\":2,\"469\":1,\"470\":1,\"475\":1,\"482\":1,\"483\":1,\"484\":1,\"485\":1,\"486\":2,\"505\":1}}],[\"etcd的持久化\",{\"0\":{\"182\":1}}],[\"etcd和redis的特点\",{\"0\":{\"175\":1}}],[\"etcd和redis的使用场景\",{\"0\":{\"174\":1}}],[\"etcd分布式锁\",{\"0\":{\"169\":1}}],[\"etcdregistrar\",{\"1\":{\"118\":4}}],[\"etcd\",{\"0\":{\"164\":1,\"171\":1,\"176\":1,\"178\":1},\"1\":{\"118\":3,\"165\":2,\"166\":2,\"167\":1,\"176\":1}}],[\"etcd版\",{\"0\":{\"118\":1}}],[\"eof\",{\"0\":{\"306\":1},\"1\":{\"244\":1,\"245\":2,\"306\":1,\"307\":2,\"308\":1,\"309\":3,\"505\":2}}],[\"even\",{\"1\":{\"298\":1}}],[\"ev\",{\"1\":{\"167\":3}}],[\"en0\",{\"1\":{\"505\":2}}],[\"encryption\",{\"1\":{\"484\":1}}],[\"encode\",{\"1\":{\"191\":4}}],[\"encoder\",{\"1\":{\"190\":1,\"191\":4}}],[\"encoding\",{\"0\":{\"190\":1},\"1\":{\"190\":7,\"191\":2}}],[\"enableasync\",{\"1\":{\"368\":3}}],[\"enable\",{\"1\":{\"366\":1}}],[\"endif\",{\"1\":{\"381\":2}}],[\"end\",{\"1\":{\"306\":1}}],[\"endpoints\",{\"1\":{\"118\":3,\"165\":1}}],[\"entries\",{\"1\":{\"79\":3}}],[\"entry\",{\"1\":{\"79\":3}}],[\"entryfiles\",{\"1\":{\"79\":2}}],[\"eng\",{\"0\":{\"61\":1}}],[\"else\",{\"1\":{\"79\":1,\"308\":1}}],[\"exchanges\",{\"1\":{\"585\":1}}],[\"exchange\",{\"1\":{\"583\":1,\"585\":1}}],[\"exception\",{\"1\":{\"366\":1}}],[\"exceeded\",{\"1\":{\"61\":1}}],[\"exec\",{\"1\":{\"492\":3}}],[\"executed\",{\"1\":{\"298\":3}}],[\"export\",{\"1\":{\"381\":1}}],[\"exit会立即终止程序\",{\"1\":{\"297\":1}}],[\"exit退出\",{\"1\":{\"297\":1}}],[\"exit\",{\"1\":{\"271\":1}}],[\"example<\",{\"1\":{\"322\":1}}],[\"example\",{\"1\":{\"76\":1,\"423\":1,\"424\":1}}],[\"example1\",{\"1\":{\"76\":1}}],[\"equiv的值\",{\"1\":{\"76\":1}}],[\"epoll\",{\"1\":{\"21\":1}}],[\"创建ca颁发数字证书\",{\"0\":{\"626\":1}}],[\"创建出队列的镜像\",{\"1\":{\"589\":1}}],[\"创建接口后\",{\"1\":{\"479\":1}}],[\"创建虚拟网桥\",{\"0\":{\"478\":1}}],[\"创建访客网络接口\",{\"0\":{\"473\":1}}],[\"创建和配置网络接口的过程会更直观\",{\"1\":{\"471\":1}}],[\"创建和初始化通道\",{\"1\":{\"312\":1}}],[\"创建新ssid并关联到桥接接口\",{\"0\":{\"466\":1}}],[\"创建vlan通常意味着你在物理接口上创建一个带vlan\",{\"1\":{\"462\":1}}],[\"创建vlan并连接到bridge\",{\"0\":{\"459\":1}}],[\"创建并配置vlan\",{\"0\":{\"462\":1}}],[\"创建并推送\",{\"0\":{\"113\":1}}],[\"创建桥接接口br3\",{\"1\":{\"460\":1}}],[\"创建桥接接口\",{\"0\":{\"460\":1,\"482\":1},\"1\":{\"479\":1,\"480\":1}}],[\"创建启动脚本\",{\"0\":{\"415\":1}}],[\"创建插件文件\",{\"1\":{\"386\":1}}],[\"创建\",{\"0\":{\"496\":1},\"1\":{\"313\":1,\"314\":1}}],[\"创建一致性哈希实例\",{\"1\":{\"272\":1}}],[\"创建一个规则禁止从br3到br0的所有流量\",{\"1\":{\"468\":1}}],[\"创建一个类型为\",{\"1\":{\"313\":1}}],[\"创建一个5秒后发送当前时间的通道\",{\"1\":{\"245\":1}}],[\"创建一个新的桥接接口br3并设置一个虚拟局域网\",{\"1\":{\"465\":1}}],[\"创建一个新的文件\",{\"1\":{\"386\":1}}],[\"创建一个新的切片\",{\"1\":{\"300\":1}}],[\"创建一个新的字符串\",{\"1\":{\"222\":1}}],[\"创建一个新的表单数据缓冲\",{\"1\":{\"217\":1}}],[\"创建一个字节缓冲区用于存储序列化后的数据\",{\"1\":{\"191\":2}}],[\"创建一个\",{\"1\":{\"191\":2}}],[\"创建解码器并从缓冲区解码数据\",{\"1\":{\"191\":2}}],[\"创建编码器并将数据编码到缓冲区\",{\"1\":{\"191\":2}}],[\"创建由3个redis\",{\"0\":{\"53\":1}}],[\"创建网络\",{\"0\":{\"51\":1,\"545\":1}}],[\"durability\",{\"1\":{\"585\":1}}],[\"dumps\",{\"1\":{\"500\":1}}],[\"dump\",{\"0\":{\"453\":1}}],[\"dport\",{\"1\":{\"476\":3}}],[\"d\",{\"0\":{\"558\":1},\"1\":{\"464\":1,\"468\":1,\"476\":1,\"486\":2,\"505\":1}}],[\"dynamic\",{\"0\":{\"425\":1}}],[\"dash也是基于http的自适应比特率流媒体传输协议\",{\"1\":{\"425\":1}}],[\"dash是一个国际标准\",{\"1\":{\"425\":1}}],[\"dash是三种流行的流媒体传输协议\",{\"1\":{\"422\":1}}],[\"dash\",{\"0\":{\"425\":1}}],[\"data请求时允许存储在内存中的最大数据量\",{\"1\":{\"319\":1}}],[\"data\",{\"1\":{\"61\":2,\"209\":2,\"500\":6}}],[\"dhcp配置等\",{\"1\":{\"469\":1}}],[\"dhcp\",{\"0\":{\"403\":1}}],[\"dhcp服务\",{\"1\":{\"393\":1}}],[\"dns服务\",{\"1\":{\"393\":1}}],[\"dns\",{\"0\":{\"403\":1},\"1\":{\"392\":1}}],[\"dosomethingasync\",{\"1\":{\"368\":1}}],[\"documented\",{\"0\":{\"349\":1}}],[\"doctype\",{\"1\":{\"322\":1}}],[\"dockerfile\",{\"0\":{\"58\":1,\"63\":1}}],[\"docker中启动\",{\"0\":{\"57\":1}}],[\"docker\",{\"0\":{\"50\":1,\"263\":1,\"535\":1,\"544\":1},\"1\":{\"51\":1}}],[\"done\",{\"1\":{\"318\":2}}],[\"do\",{\"1\":{\"217\":1}}],[\"diskutil\",{\"1\":{\"414\":2}}],[\"dist\",{\"1\":{\"79\":1}}],[\"did\",{\"1\":{\"245\":1}}],[\"dial\",{\"1\":{\"245\":1}}],[\"dialtimeout\",{\"1\":{\"118\":1,\"165\":1}}],[\"dirname\",{\"1\":{\"79\":2}}],[\"dirent\",{\"1\":{\"79\":4}}],[\"directory\",{\"0\":{\"511\":1},\"1\":{\"79\":3}}],[\"div\",{\"1\":{\"48\":1}}],[\"dead\",{\"1\":{\"585\":1}}],[\"dest\",{\"1\":{\"485\":2}}],[\"dest=\",{\"1\":{\"468\":1}}],[\"desktop\",{\"0\":{\"263\":1}}],[\"deny\",{\"1\":{\"468\":1}}],[\"device\",{\"1\":{\"484\":1}}],[\"dev\",{\"1\":{\"463\":1,\"479\":1,\"480\":1,\"609\":1}}],[\"devtools<\",{\"1\":{\"366\":1}}],[\"devtools\",{\"1\":{\"366\":2,\"618\":1}}],[\"deployme下的compiler\",{\"1\":{\"366\":1}}],[\"dependency>\",{\"1\":{\"366\":1}}],[\"deprecated\",{\"0\":{\"342\":1}}],[\"delivery\",{\"1\":{\"534\":1}}],[\"delimiter\",{\"1\":{\"61\":3}}],[\"delegate\",{\"1\":{\"483\":1}}],[\"delete\",{\"1\":{\"272\":1}}],[\"delta\",{\"1\":{\"381\":2}}],[\"decodedpoint\",{\"1\":{\"191\":3}}],[\"decodedperson\",{\"1\":{\"191\":3}}],[\"decode\",{\"1\":{\"191\":4}}],[\"decoder\",{\"1\":{\"190\":1,\"191\":4}}],[\"defer会执行\",{\"1\":{\"298\":1}}],[\"defer和panic\",{\"0\":{\"298\":1}}],[\"defer可能不会执行\",{\"1\":{\"297\":1}}],[\"defer语句后的函数调用发生panic\",{\"1\":{\"297\":1}}],[\"defer语句会将其后的函数调用推迟到包含该defer语句的函数返回之前执行\",{\"1\":{\"295\":1}}],[\"defer语句在运行时间较长的函数中\",{\"0\":{\"214\":1}}],[\"defer不会执行的情况\",{\"0\":{\"295\":1}}],[\"defer\",{\"1\":{\"165\":1,\"167\":1,\"217\":2,\"245\":1,\"271\":2,\"294\":3,\"296\":3,\"298\":9,\"299\":1}}],[\"default\",{\"1\":{\"76\":2,\"245\":1,\"381\":1}}],[\"drop\",{\"1\":{\"47\":1,\"485\":1,\"581\":1}}],[\"示例防火墙规则\",{\"0\":{\"476\":1}}],[\"示例解释\",{\"0\":{\"379\":1}}],[\"示例\",{\"0\":{\"48\":1,\"95\":1,\"198\":1,\"308\":1,\"314\":1,\"390\":1,\"400\":1,\"468\":1}}],[\"给人一种好像看了很多\",{\"1\":{\"528\":1}}],[\"给图像应用色相旋转效果\",{\"1\":{\"47\":1}}],[\"给元素添加阴影效果\",{\"1\":{\"47\":1}}],[\"aac\",{\"1\":{\"608\":1,\"609\":1}}],[\"acknowledgments\",{\"1\":{\"586\":1}}],[\"ack\",{\"1\":{\"584\":1,\"586\":1}}],[\"activemq\",{\"1\":{\"567\":1}}],[\"access\",{\"1\":{\"468\":1}}],[\"accepting\",{\"1\":{\"271\":1}}],[\"accept\",{\"1\":{\"271\":1,\"299\":2,\"476\":4,\"485\":1}}],[\"availability\",{\"1\":{\"512\":2}}],[\"avi\",{\"1\":{\"429\":1}}],[\"a后的数字可以根据你的需要显示更多或更少的上下文行\",{\"1\":{\"508\":1}}],[\"alternate\",{\"1\":{\"585\":1}}],[\"alias\",{\"1\":{\"505\":2}}],[\"alice\",{\"1\":{\"191\":1}}],[\"all=nopasswd\",{\"1\":{\"505\":1}}],[\"all\",{\"1\":{\"468\":1,\"485\":1,\"505\":1}}],[\"autoconfigure\",{\"1\":{\"368\":1}}],[\"automatically选项框内打勾\",{\"1\":{\"366\":1}}],[\"apache\",{\"1\":{\"567\":2}}],[\"apasswordforguests\",{\"1\":{\"484\":1}}],[\"ap\",{\"1\":{\"484\":1}}],[\"app\",{\"1\":{\"423\":1}}],[\"append\",{\"1\":{\"264\":1,\"272\":2}}],[\"append操作\",{\"0\":{\"203\":1}}],[\"apt\",{\"1\":{\"409\":2}}],[\"api首先检查订单状态\",{\"1\":{\"601\":1}}],[\"api\",{\"1\":{\"260\":3}}],[\"after\",{\"1\":{\"245\":1,\"298\":1}}],[\"atomic\",{\"1\":{\"244\":2}}],[\"amount\",{\"1\":{\"239\":1}}],[\"artifactid>\",{\"1\":{\"366\":2}}],[\"args\",{\"1\":{\"217\":2,\"368\":2}}],[\"array\",{\"1\":{\"142\":2,\"143\":2,\"144\":2,\"145\":2,\"194\":1}}],[\"arr\",{\"1\":{\"142\":12,\"143\":12,\"144\":11,\"145\":20}}],[\"age\",{\"1\":{\"191\":2,\"500\":1}}],[\"ahead\",{\"0\":{\"184\":1}}],[\"asynchronous\",{\"1\":{\"438\":1}}],[\"async\",{\"1\":{\"368\":7}}],[\"async的实现\",{\"0\":{\"369\":1}}],[\"async的使用\",{\"0\":{\"368\":1}}],[\"async的执行\",{\"0\":{\"367\":1}}],[\"as\",{\"1\":{\"114\":1}}],[\"ascii\",{\"1\":{\"44\":1}}],[\"adtstoasc\",{\"1\":{\"608\":1,\"609\":1}}],[\"adaptive\",{\"0\":{\"425\":1}}],[\"addbr\",{\"1\":{\"480\":1}}],[\"add命令创建一个新的桥接接口br2\",{\"1\":{\"479\":1}}],[\"addnode\",{\"1\":{\"272\":5}}],[\"addint64\",{\"1\":{\"244\":1}}],[\"address\",{\"1\":{\"423\":1,\"424\":1,\"425\":1}}],[\"addr\",{\"1\":{\"118\":3,\"463\":1,\"479\":1,\"480\":1,\"509\":1}}],[\"added\",{\"1\":{\"114\":1}}],[\"add\",{\"1\":{\"76\":2,\"100\":1,\"114\":2,\"217\":1,\"318\":1,\"460\":1,\"462\":1,\"463\":1,\"468\":1,\"479\":2,\"480\":1}}],[\"adj\",{\"1\":{\"61\":1}}],[\"another\",{\"1\":{\"491\":2,\"492\":2}}],[\"annotation\",{\"1\":{\"368\":2}}],[\"and\",{\"1\":{\"61\":3,\"114\":1,\"364\":1}}],[\"angle定义旋转的角度\",{\"1\":{\"47\":1}}],[\"angle\",{\"1\":{\"47\":1}}],[\"a\",{\"0\":{\"555\":1},\"1\":{\"61\":2,\"244\":2,\"245\":3,\"298\":1,\"386\":1,\"508\":2,\"608\":1,\"609\":1}}],[\"而其他骑手则无法抢单\",{\"1\":{\"598\":1}}],[\"而其他节点可以有一个或多个镜像副本\",{\"1\":{\"577\":1}}],[\"而其他服务器存储的数据不会受到影响\",{\"1\":{\"272\":1}}],[\"而本文主要就是要解决这些细节问题\",{\"1\":{\"528\":1}}],[\"而设备b使用端口54321\",{\"1\":{\"458\":1}}],[\"而mp4是将这些数据组织起来的容器\",{\"1\":{\"431\":1}}],[\"而解码器则在播放时解压数据\",{\"1\":{\"428\":1}}],[\"而不进行适当的同步\",{\"1\":{\"514\":1}}],[\"而不能访问你的主网络\",{\"1\":{\"485\":1}}],[\"而不会阻塞当前线程\",{\"1\":{\"368\":1}}],[\"而不是事务\",{\"1\":{\"584\":1}}],[\"而不是直接丢弃\",{\"1\":{\"585\":1}}],[\"而不是直接从源服务器提供\",{\"1\":{\"534\":1}}],[\"而不是直接调用\",{\"1\":{\"9\":1}}],[\"而不是从寄存器或其他地方读取可能已经过时的值\",{\"1\":{\"374\":1}}],[\"而不是被拒绝或导致错误\",{\"1\":{\"319\":1}}],[\"而不是\",{\"1\":{\"312\":1}}],[\"而不是数据的副本\",{\"1\":{\"310\":1}}],[\"而\",{\"1\":{\"312\":1,\"571\":1}}],[\"而是表示没有更多数据可以读取的状态\",{\"1\":{\"309\":1}}],[\"而是一个正常的信号\",{\"1\":{\"306\":1}}],[\"而值接收者的修改是在副本上进行\",{\"1\":{\"230\":1}}],[\"而100\",{\"1\":{\"47\":1}}],[\"0\",{\"1\":{\"47\":1,\"142\":2,\"143\":1,\"144\":1,\"145\":1,\"209\":1,\"251\":2,\"264\":1,\"272\":3,\"299\":2,\"314\":1,\"470\":1,\"476\":2,\"483\":2,\"509\":1,\"580\":1}}],[\"hls通过将视频分割成一系列小的基于http的文件来工作\",{\"1\":{\"424\":1}}],[\"hls是由apple开发的基于http的流媒体传输协议\",{\"1\":{\"424\":1}}],[\"hls\",{\"0\":{\"424\":1}}],[\"hls和mpeg\",{\"1\":{\"422\":1}}],[\"h5\",{\"1\":{\"381\":2}}],[\"history\",{\"1\":{\"364\":1,\"381\":1}}],[\"high\",{\"1\":{\"145\":9}}],[\"h2>\",{\"1\":{\"322\":1}}],[\"haha\",{\"2\":{\"488\":1,\"489\":1}}],[\"happened\",{\"1\":{\"298\":4}}],[\"hash\",{\"1\":{\"272\":13}}],[\"handlerequest\",{\"1\":{\"271\":3}}],[\"hex\",{\"1\":{\"505\":1}}],[\"hevc\",{\"1\":{\"428\":1}}],[\"hello\",{\"1\":{\"222\":2,\"245\":2}}],[\"headers之referer\",{\"0\":{\"517\":1}}],[\"header\",{\"1\":{\"76\":2,\"217\":1}}],[\"hot\",{\"1\":{\"366\":2}}],[\"hour\",{\"1\":{\"209\":1}}],[\"home\",{\"0\":{\"0\":1}}],[\"http2协议\",{\"0\":{\"253\":1}}],[\"http协议版本选择的取决因素\",{\"0\":{\"252\":1}}],[\"http协议断开的取决因素\",{\"0\":{\"251\":1}}],[\"http协议断开时机\",{\"0\":{\"250\":1}}],[\"http\",{\"0\":{\"258\":1,\"424\":1,\"425\":1,\"517\":1},\"1\":{\"217\":4,\"251\":10,\"424\":2,\"425\":1,\"567\":1}}],[\"https证书验证是确保网络通信安全的关键步骤\",{\"1\":{\"552\":1}}],[\"https通信过程\",{\"0\":{\"530\":1}}],[\"https的精髓在于理解它是如何工作的\",{\"1\":{\"528\":1}}],[\"https是http基于tls\",{\"1\":{\"528\":1}}],[\"https精要讲解\",{\"0\":{\"527\":1}}],[\"https\",{\"0\":{\"552\":1},\"1\":{\"74\":1,\"76\":2,\"113\":2,\"114\":2}}],[\"htm\",{\"1\":{\"76\":1}}],[\"html>\",{\"1\":{\"322\":2}}],[\"html\",{\"0\":{\"524\":1},\"1\":{\"76\":2}}],[\"hue\",{\"1\":{\"47\":1}}],[\"h\",{\"1\":{\"47\":1,\"272\":3,\"428\":1,\"431\":1}}],[\"bsf\",{\"1\":{\"608\":1,\"609\":1}}],[\"b\",{\"0\":{\"556\":1},\"1\":{\"386\":2}}],[\"beautifulsoup4==4\",{\"1\":{\"496\":1}}],[\"beforeeach\",{\"1\":{\"381\":1}}],[\"be\",{\"1\":{\"298\":3}}],[\"brewer在2000年提出\",{\"1\":{\"512\":1}}],[\"break\",{\"1\":{\"245\":1,\"271\":1,\"299\":1,\"308\":1}}],[\"brctl\",{\"1\":{\"480\":1}}],[\"br2\",{\"1\":{\"479\":3,\"480\":3}}],[\"br\",{\"1\":{\"470\":2,\"471\":1,\"476\":6,\"509\":1}}],[\"br0\",{\"1\":{\"468\":2}}],[\"br3=interface\",{\"1\":{\"464\":1}}],[\"br3\",{\"1\":{\"460\":2,\"461\":2,\"462\":1,\"463\":1,\"464\":2,\"466\":1,\"468\":2,\"483\":1}}],[\"bridge\",{\"0\":{\"478\":1},\"1\":{\"460\":2,\"464\":1,\"470\":1,\"479\":1,\"483\":1}}],[\"brightness\",{\"1\":{\"47\":1}}],[\"bilibili京东问题\",{\"0\":{\"568\":1}}],[\"big包中\",{\"1\":{\"239\":1}}],[\"binary\",{\"1\":{\"190\":1,\"433\":1}}],[\"boot<\",{\"1\":{\"366\":2}}],[\"boot\",{\"1\":{\"363\":1,\"366\":5,\"368\":8}}],[\"bool\",{\"1\":{\"272\":1}}],[\"body>\",{\"1\":{\"322\":1}}],[\"body\",{\"1\":{\"217\":7}}],[\"bobby\",{\"1\":{\"74\":1}}],[\"bob\",{\"1\":{\"74\":1}}],[\"button>\",{\"1\":{\"322\":1}}],[\"buf\",{\"0\":{\"299\":1,\"300\":1},\"1\":{\"299\":3,\"300\":8,\"301\":1,\"308\":1}}],[\"bufio\",{\"1\":{\"271\":3,\"299\":1}}],[\"buffer\",{\"1\":{\"191\":8,\"217\":2,\"335\":1}}],[\"builder\",{\"0\":{\"205\":2,\"206\":2}}],[\"builder中\",{\"0\":{\"204\":1}}],[\"bubblesort\",{\"1\":{\"142\":2}}],[\"bubble\",{\"0\":{\"142\":1,\"147\":1}}],[\"bundle的区别\",{\"0\":{\"81\":1}}],[\"bundle\",{\"0\":{\"83\":1,\"94\":1},\"1\":{\"79\":1}}],[\"bash\",{\"1\":{\"387\":1,\"505\":1}}],[\"basename\",{\"1\":{\"225\":2}}],[\"base提取文件名\",{\"1\":{\"225\":2}}],[\"base\",{\"1\":{\"114\":1,\"217\":1,\"225\":4}}],[\"base仓库可以包含两个子模块\",{\"1\":{\"112\":1}}],[\"back\",{\"1\":{\"381\":2}}],[\"background\",{\"1\":{\"118\":2,\"166\":1,\"167\":1,\"245\":1}}],[\"bad\",{\"1\":{\"298\":4}}],[\"blur\",{\"1\":{\"47\":2,\"48\":1}}],[\"bytebuffer\",{\"1\":{\"335\":1}}],[\"bytes是很高的\",{\"1\":{\"613\":1}}],[\"byteslice\",{\"1\":{\"222\":2}}],[\"bytes\",{\"1\":{\"191\":4,\"217\":3,\"222\":1}}],[\"byte\",{\"1\":{\"37\":1,\"221\":1,\"222\":3,\"272\":1,\"299\":2,\"300\":1,\"303\":1}}],[\"ffmepg的日志分级\",{\"0\":{\"611\":1}}],[\"ffmpeg\",{\"1\":{\"580\":2,\"581\":3,\"582\":4,\"607\":1,\"608\":1,\"609\":1}}],[\"ffmpeg是一个强大的命令行工具\",{\"1\":{\"419\":1}}],[\"freeze\",{\"1\":{\"496\":1}}],[\"from\",{\"1\":{\"299\":1,\"468\":1}}],[\"flush\",{\"1\":{\"271\":1}}],[\"float\",{\"1\":{\"194\":1}}],[\"found\",{\"1\":{\"635\":1}}],[\"foundation\",{\"1\":{\"259\":1}}],[\"follower\",{\"1\":{\"571\":2,\"572\":1,\"573\":4,\"574\":1,\"575\":2}}],[\"forwarding\",{\"1\":{\"485\":1}}],[\"forward\",{\"1\":{\"476\":2,\"485\":1}}],[\"forward来实现的\",{\"1\":{\"393\":1}}],[\"fork>\",{\"1\":{\"366\":1}}],[\"format\",{\"0\":{\"429\":1},\"1\":{\"427\":1}}],[\"formatint\",{\"1\":{\"244\":1}}],[\"form\",{\"1\":{\"319\":1}}],[\"formdatacontenttype\",{\"1\":{\"217\":1}}],[\"for\",{\"1\":{\"142\":2,\"143\":2,\"144\":2,\"145\":1,\"167\":1,\"209\":1,\"244\":1,\"245\":3,\"264\":1,\"271\":2,\"299\":2,\"318\":1}}],[\"foreach\",{\"1\":{\"79\":1}}],[\"f\",{\"1\":{\"219\":2}}],[\"fncaller\",{\"1\":{\"219\":2}}],[\"fatal\",{\"1\":{\"165\":1,\"166\":1,\"167\":1}}],[\"fatalf\",{\"1\":{\"118\":1,\"244\":2,\"245\":6}}],[\"failed\",{\"1\":{\"118\":1,\"244\":4,\"245\":4,\"299\":3}}],[\"fmt\",{\"1\":{\"118\":2,\"142\":3,\"143\":3,\"144\":3,\"145\":3,\"191\":8,\"217\":2,\"225\":2,\"245\":2,\"271\":6,\"272\":6,\"294\":3,\"296\":3,\"298\":5,\"299\":4,\"318\":2}}],[\"func\",{\"1\":{\"118\":2,\"142\":2,\"143\":2,\"144\":2,\"145\":3,\"191\":2,\"209\":2,\"217\":1,\"219\":2,\"231\":3,\"244\":2,\"245\":2,\"264\":1,\"271\":2,\"272\":7,\"294\":1,\"296\":1,\"298\":4,\"299\":2,\"318\":2}}],[\"functionalinterface\",{\"0\":{\"352\":1}}],[\"function\",{\"1\":{\"79\":1,\"310\":1,\"380\":2,\"381\":1}}],[\"function>可以是以下几种\",{\"1\":{\"47\":1}}],[\"function>\",{\"1\":{\"47\":2}}],[\"fullpath\",{\"1\":{\"79\":3}}],[\"firewall文件中添加相应的规则\",{\"1\":{\"485\":1}}],[\"firewall文件或使用web界面\",{\"1\":{\"475\":1}}],[\"firewall文件或uci命令来创建防火墙规则\",{\"1\":{\"468\":1}}],[\"firewall\",{\"1\":{\"468\":8,\"486\":1}}],[\"first\",{\"1\":{\"294\":2,\"296\":2}}],[\"field\",{\"1\":{\"217\":1}}],[\"field2\",{\"1\":{\"159\":1,\"314\":2}}],[\"field1\",{\"1\":{\"159\":1,\"314\":2}}],[\"findfiles\",{\"1\":{\"79\":3}}],[\"fileinput\",{\"1\":{\"322\":1}}],[\"filekey\",{\"1\":{\"217\":1}}],[\"filepathbasename\",{\"1\":{\"225\":2}}],[\"filepath\",{\"1\":{\"217\":3,\"225\":2}}],[\"filename\",{\"1\":{\"79\":1,\"217\":1}}],[\"files\",{\"1\":{\"79\":2}}],[\"file\",{\"1\":{\"74\":1,\"79\":3,\"217\":4,\"306\":1,\"322\":1,\"364\":2}}],[\"filter\",{\"1\":{\"47\":1,\"48\":2}}],[\"filter的基本使用\",{\"0\":{\"46\":1}}],[\"fs\",{\"1\":{\"79\":3}}],[\"|\",{\"1\":{\"47\":1,\"272\":3,\"392\":1,\"505\":1,\"506\":1,\"507\":1,\"508\":1,\"509\":1}}],[\"null\",{\"1\":{\"380\":3,\"609\":1}}],[\"num\",{\"1\":{\"44\":3}}],[\"nc\",{\"0\":{\"269\":1}}],[\"nat转换后的地址\",{\"1\":{\"456\":1}}],[\"nat表是路由器用来跟踪内部网络设备\",{\"1\":{\"456\":1}}],[\"nat表\",{\"0\":{\"456\":1}}],[\"nat表和端口号\",{\"1\":{\"455\":1}}],[\"nat基本流程简述\",{\"0\":{\"455\":1}}],[\"nat\",{\"0\":{\"397\":1,\"402\":1},\"1\":{\"393\":1}}],[\"native\",{\"1\":{\"259\":1}}],[\"navigateback\",{\"1\":{\"381\":1}}],[\"navigateto\",{\"1\":{\"381\":1}}],[\"name=\",{\"1\":{\"468\":1}}],[\"name\",{\"1\":{\"79\":5,\"191\":2,\"264\":1,\"460\":1,\"462\":1,\"479\":1,\"485\":2,\"500\":1}}],[\"nil\",{\"1\":{\"118\":2,\"165\":1,\"166\":1,\"167\":1,\"191\":4,\"217\":4,\"225\":1,\"231\":2,\"233\":1,\"244\":5,\"245\":6,\"271\":3,\"272\":1,\"298\":1,\"299\":3,\"308\":1,\"312\":4}}],[\"new在什么时候使用\",{\"0\":{\"313\":1}}],[\"newconsistenthashing\",{\"1\":{\"272\":2}}],[\"newcredentials\",{\"1\":{\"245\":1}}],[\"newreader\",{\"1\":{\"271\":1,\"299\":1}}],[\"newrequest\",{\"1\":{\"217\":1}}],[\"newnotificationserviceclient\",{\"1\":{\"245\":1}}],[\"newserver\",{\"1\":{\"244\":1}}],[\"newwriter\",{\"1\":{\"217\":2,\"271\":1}}],[\"new和make的区别\",{\"0\":{\"193\":1}}],[\"newdecoder\",{\"1\":{\"191\":2}}],[\"newencoder\",{\"1\":{\"191\":2}}],[\"newetcdregistrar\",{\"1\":{\"118\":1}}],[\"new\",{\"0\":{\"165\":1,\"194\":1,\"204\":1,\"206\":1},\"1\":{\"118\":1,\"165\":1,\"193\":1,\"194\":2,\"244\":1,\"272\":1,\"312\":8,\"313\":5,\"314\":3,\"315\":1,\"381\":1,\"500\":1}}],[\"netmask\",{\"1\":{\"470\":1,\"483\":1}}],[\"net\",{\"1\":{\"51\":1,\"217\":1,\"244\":2,\"271\":4,\"299\":2,\"393\":1,\"409\":1}}],[\"network文件\",{\"1\":{\"482\":1,\"483\":1}}],[\"network文件或uci命令来保存这些更改\",{\"1\":{\"464\":1}}],[\"network\",{\"1\":{\"51\":1,\"464\":5,\"466\":1,\"469\":1,\"470\":1,\"484\":1,\"485\":1,\"486\":1,\"534\":1}}],[\"nostdin\",{\"1\":{\"608\":1}}],[\"nohup\",{\"1\":{\"608\":1,\"609\":1}}],[\"not\",{\"0\":{\"511\":1},\"1\":{\"245\":2,\"635\":1}}],[\"note\",{\"1\":{\"244\":1}}],[\"notification\",{\"1\":{\"243\":1,\"244\":3,\"245\":3}}],[\"notificationservice\",{\"1\":{\"243\":1,\"244\":1}}],[\"nodejs例子\",{\"0\":{\"321\":1}}],[\"nodelay选项\",{\"1\":{\"305\":1}}],[\"node4\",{\"1\":{\"272\":1}}],[\"node3\",{\"1\":{\"272\":1}}],[\"node2\",{\"1\":{\"272\":2}}],[\"node1\",{\"1\":{\"272\":1}}],[\"nodes\",{\"1\":{\"272\":15}}],[\"node\",{\"1\":{\"79\":1,\"272\":6}}],[\"none\",{\"1\":{\"47\":1}}],[\"nginx\",{\"0\":{\"256\":1},\"1\":{\"76\":1}}],[\"npm在2020年10月发布的版本开始支持一个新功能\",{\"1\":{\"64\":1}}],[\"npm\",{\"0\":{\"64\":1,\"69\":1}}],[\"n\",{\"1\":{\"61\":1,\"142\":3,\"143\":3,\"144\":2,\"167\":1,\"271\":1,\"299\":2,\"300\":1,\"308\":1,\"492\":1,\"595\":1}}],[\"阴影和更多\",{\"1\":{\"46\":1}}],[\"色彩饱和度调整\",{\"1\":{\"46\":1}}],[\"亮度调整\",{\"1\":{\"46\":1}}],[\"边框等\",{\"1\":{\"46\":1}}],[\"背景\",{\"1\":{\"46\":1}}],[\"小程序支付资料\",{\"0\":{\"45\":1}}],[\"码相互转换\",{\"1\":{\"44\":1}}],[\"和candidate\",{\"1\":{\"571\":1}}],[\"和在线证书状态协议\",{\"0\":{\"558\":1}}],[\"和分区容忍性\",{\"1\":{\"512\":1}}],[\"和grep命令来过滤输出\",{\"1\":{\"506\":1}}],[\"和相关函数\",{\"0\":{\"493\":1}}],[\"和设备b\",{\"1\":{\"458\":1}}],[\"和异步复制\",{\"1\":{\"438\":1}}],[\"和中继日志\",{\"1\":{\"433\":1}}],[\"和视频格式\",{\"1\":{\"427\":1}}],[\"和一些要求低延迟的应用\",{\"1\":{\"423\":1}}],[\"和类\",{\"1\":{\"388\":1}}],[\"和复合字面量\",{\"0\":{\"315\":1}}],[\"和通道\",{\"1\":{\"312\":1}}],[\"和指针调用\",{\"1\":{\"229\":1}}],[\"和\",{\"0\":{\"104\":1,\"113\":1,\"333\":1,\"382\":1,\"403\":1},\"1\":{\"44\":1,\"104\":1,\"190\":1,\"193\":1,\"312\":1,\"314\":2,\"380\":1}}],[\"你也可以通过重启openwrt设备来应用更改\",{\"1\":{\"486\":1}}],[\"你也可以使用brctl工具来添加桥接接口\",{\"1\":{\"480\":1}}],[\"你应该根据你的网络配置来调整这个地址\",{\"1\":{\"463\":1}}],[\"你通常不需要手动安装\",{\"1\":{\"460\":1}}],[\"你需要为新的ssid指定无线接口配置\",{\"1\":{\"466\":1}}],[\"你需要使用\",{\"1\":{\"464\":1}}],[\"你需要安装bridge\",{\"1\":{\"460\":1}}],[\"你需要执行几个步骤\",{\"1\":{\"459\":1}}],[\"你需要找出外置硬盘的唯一标识符\",{\"1\":{\"414\":1}}],[\"你需要进行一些额外的配置\",{\"1\":{\"413\":1,\"465\":1}}],[\"你需要在\",{\"1\":{\"485\":1}}],[\"你需要在想要异步执行的方法上添加\",{\"1\":{\"368\":1}}],[\"你需要在使用之前对它进行初始化\",{\"1\":{\"312\":1}}],[\"你需要确保在\",{\"1\":{\"368\":1}}],[\"你可能还需要进一步调整和优化网络配置\",{\"1\":{\"487\":1}}],[\"你可能还想为br3接口配置一个ip地址\",{\"1\":{\"463\":1}}],[\"你可能需要根据实际的无线硬件配置适当调整此部分\",{\"1\":{\"484\":1}}],[\"你可能需要根据你的具体需求调整命令\",{\"1\":{\"464\":1}}],[\"你可能不知道具体的类型\",{\"1\":{\"313\":1}}],[\"你可以遵循以下步骤\",{\"1\":{\"535\":1}}],[\"你可以使用ip命令结合grep来达到类似的目的\",{\"1\":{\"509\":1}}],[\"你可以使用openwrt的\",{\"1\":{\"468\":1}}],[\"你可以参考之前关于如何添加桥接接口的说明\",{\"1\":{\"482\":1}}],[\"你可以为这个新的桥接接口分配ip地址\",{\"1\":{\"479\":1}}],[\"你可以选择使用ip命令或brctl命令来完成这个任务\",{\"1\":{\"478\":1}}],[\"你可以实现网络隔离\",{\"1\":{\"467\":1}}],[\"你可以设置规则来允许或阻止来自某个桥接接口的流量访问另一个接口\",{\"1\":{\"467\":1}}],[\"你可以通过设置option\",{\"1\":{\"466\":1}}],[\"你可以通过编辑\",{\"1\":{\"466\":1}}],[\"你可以通过调用txcommit提交事务\",{\"1\":{\"3\":1}}],[\"你可以将这个vlan接口添加到桥接中\",{\"1\":{\"462\":1}}],[\"你可以按照以下步骤操作\",{\"1\":{\"386\":1}}],[\"你可以创建任何类型的指针\",{\"1\":{\"311\":1}}],[\"你可以发送一条或多条消息到队列\",{\"1\":{\"3\":1}}],[\"你可以回滚事务\",{\"1\":{\"1\":1}}],[\"你既可以向\",{\"1\":{\"44\":1}}],[\"tls证书可能由一个证书链组成\",{\"1\":{\"559\":1}}],[\"tls证书\",{\"1\":{\"553\":1}}],[\"transactions\",{\"1\":{\"584\":1}}],[\"trap\",{\"1\":{\"387\":1}}],[\"trap命令简介\",{\"0\":{\"387\":1}}],[\"true\",{\"1\":{\"79\":1,\"366\":1}}],[\"trustedscripts\",{\"1\":{\"76\":2}}],[\"ture\",{\"1\":{\"366\":1}}],[\"target=\",{\"1\":{\"468\":1}}],[\"target\",{\"0\":{\"347\":1},\"1\":{\"485\":1}}],[\"t的区别\",{\"0\":{\"333\":1}}],[\"tcp回显服务器示例\",{\"0\":{\"271\":1}}],[\"tcpkali\",{\"0\":{\"268\":1,\"270\":1}}],[\"tcp压测工具\",{\"0\":{\"268\":1}}],[\"tcp服务器+mac压测\",{\"0\":{\"267\":1}}],[\"tcp\",{\"1\":{\"244\":1,\"271\":1,\"299\":1,\"476\":1}}],[\"term\",{\"1\":{\"574\":1,\"576\":1}}],[\"temporary\",{\"0\":{\"511\":1}}],[\"temp\",{\"1\":{\"166\":2,\"167\":1,\"244\":1,\"245\":1}}],[\"test=\",{\"1\":{\"505\":1}}],[\"test\",{\"1\":{\"79\":1,\"505\":3}}],[\"ttl\",{\"1\":{\"118\":2}}],[\"typeof\",{\"1\":{\"380\":3}}],[\"type=\",{\"1\":{\"322\":1,\"464\":1}}],[\"types\",{\"1\":{\"310\":1}}],[\"type\",{\"1\":{\"118\":1,\"159\":1,\"191\":2,\"217\":1,\"219\":2,\"231\":1,\"244\":1,\"264\":1,\"272\":1,\"314\":1,\"335\":1,\"460\":1,\"462\":1,\"470\":1,\"479\":1,\"483\":1}}],[\"timeout\",{\"1\":{\"245\":3}}],[\"time\",{\"0\":{\"423\":1},\"1\":{\"118\":2,\"165\":2,\"167\":1,\"209\":2,\"245\":7}}],[\"thrift\",{\"1\":{\"567\":1}}],[\"thread的推送\",{\"0\":{\"453\":1}}],[\"this\",{\"0\":{\"385\":1},\"1\":{\"298\":3,\"381\":6}}],[\"third\",{\"1\":{\"74\":1,\"294\":2,\"296\":2}}],[\"the\",{\"1\":{\"61\":4}}],[\"tolerance\",{\"1\":{\"512\":1}}],[\"tools\",{\"1\":{\"409\":1}}],[\"tostring\",{\"1\":{\"380\":2}}],[\"to\",{\"1\":{\"61\":3,\"114\":1,\"118\":2,\"244\":4,\"245\":4,\"366\":1,\"381\":8,\"468\":1,\"491\":2,\"492\":2}}],[\"t\",{\"0\":{\"333\":1},\"1\":{\"44\":2,\"194\":3,\"298\":2,\"312\":4,\"313\":4,\"334\":1,\"335\":1}}],[\"txt\",{\"1\":{\"496\":1}}],[\"txt文件\",{\"1\":{\"496\":1}}],[\"txt文件来手动管理依赖\",{\"1\":{\"495\":1}}],[\"txrollback\",{\"1\":{\"2\":1}}],[\"txcommit\",{\"1\":{\"2\":1}}],[\"txselect\",{\"1\":{\"2\":1}}],[\"vfr\",{\"1\":{\"581\":3}}],[\"vlan\",{\"1\":{\"459\":1,\"462\":1,\"465\":1}}],[\"vp9等\",{\"1\":{\"428\":1}}],[\"vue注册全局组件\",{\"0\":{\"386\":1}}],[\"volumes\",{\"1\":{\"414\":1}}],[\"volatile声明这些变量可以防止编译器做出不正确的假设和优化\",{\"1\":{\"375\":1}}],[\"volatile变量的读写操作可以作为一个内存屏障\",{\"1\":{\"375\":1}}],[\"volatile\",{\"1\":{\"374\":1}}],[\"volatile简介\",{\"0\":{\"374\":1}}],[\"volatile的使用场景相对减少\",{\"1\":{\"376\":1}}],[\"volatile的使用和意义略有不同\",{\"1\":{\"374\":1}}],[\"volatile的使用\",{\"0\":{\"373\":1}}],[\"void\",{\"1\":{\"44\":2,\"368\":1}}],[\"vsync\",{\"1\":{\"580\":2,\"581\":5,\"582\":1}}],[\"vscode\",{\"0\":{\"511\":1},\"1\":{\"511\":1}}],[\"vs\",{\"0\":{\"204\":1,\"385\":1}}],[\"v的值\",{\"1\":{\"167\":1}}],[\"val\",{\"1\":{\"317\":1}}],[\"value\",{\"1\":{\"44\":3,\"167\":1,\"227\":1,\"380\":5}}],[\"var\",{\"0\":{\"204\":1,\"205\":1},\"1\":{\"159\":1,\"191\":4,\"217\":1,\"225\":1,\"233\":1,\"239\":1,\"244\":1,\"264\":1,\"299\":1,\"315\":1,\"492\":1}}],[\"v3\",{\"1\":{\"118\":1,\"165\":1}}],[\"v\",{\"1\":{\"47\":1,\"61\":1,\"118\":1,\"166\":1,\"244\":4,\"245\":6,\"318\":2}}],[\"mode属性为2\",{\"1\":{\"585\":1}}],[\"mode\",{\"1\":{\"484\":1}}],[\"mkv等\",{\"1\":{\"429\":1}}],[\"mp4\",{\"1\":{\"582\":4,\"608\":1,\"609\":1}}],[\"mp4容器还可以包含音频\",{\"1\":{\"431\":1}}],[\"mp4是容器格式\",{\"1\":{\"431\":1}}],[\"mp4和h\",{\"1\":{\"431\":1}}],[\"mpd\",{\"1\":{\"425\":1}}],[\"mpeg\",{\"0\":{\"425\":1},\"1\":{\"425\":1}}],[\"m3u8\",{\"1\":{\"424\":2,\"608\":1,\"609\":1}}],[\"mmap的优势和特点\",{\"0\":{\"287\":1}}],[\"mmap\",{\"0\":{\"286\":1}}],[\"mmu\",{\"1\":{\"274\":1}}],[\"myapplication\",{\"1\":{\"368\":2}}],[\"mykey3\",{\"1\":{\"272\":1}}],[\"mykey2\",{\"1\":{\"272\":1}}],[\"mykey1\",{\"1\":{\"272\":3}}],[\"mysql还提供了半同步复制\",{\"1\":{\"438\":1}}],[\"mysql使用的是异步复制\",{\"1\":{\"438\":1}}],[\"mysql支持几种不同的复制模式\",{\"1\":{\"438\":1}}],[\"mysql首先执行这个插入语句\",{\"1\":{\"434\":1}}],[\"mysql的主从同步过程涉及将主服务器\",{\"1\":{\"433\":1}}],[\"myservice必须实现crawlerserviceserver接口\",{\"1\":{\"233\":1}}],[\"myservice\",{\"1\":{\"225\":1,\"231\":7,\"233\":2,\"368\":1}}],[\"mystruct\",{\"1\":{\"159\":2,\"314\":7,\"315\":2}}],[\"md\",{\"0\":{\"259\":1}}],[\"messaging\",{\"0\":{\"423\":1}}],[\"messages\",{\"1\":{\"245\":1}}],[\"message\",{\"1\":{\"243\":3,\"245\":4,\"271\":4,\"567\":1,\"585\":1,\"586\":1}}],[\"memory\",{\"1\":{\"274\":1}}],[\"memset\",{\"1\":{\"44\":2}}],[\"memset替换字符串的注意点\",{\"0\":{\"43\":1}}],[\"menus\",{\"1\":{\"264\":3}}],[\"menus递归的一点点改进\",{\"0\":{\"264\":1}}],[\"metadata\",{\"1\":{\"244\":1}}],[\"method\",{\"1\":{\"231\":2}}],[\"ms\",{\"1\":{\"231\":6}}],[\"multipart\",{\"1\":{\"217\":3}}],[\"mirrored\",{\"1\":{\"586\":1,\"589\":1}}],[\"microsoft\",{\"1\":{\"511\":1}}],[\"minikube\",{\"0\":{\"262\":1}}],[\"minindex\",{\"1\":{\"143\":5}}],[\"mime\",{\"1\":{\"217\":1}}],[\"m\",{\"1\":{\"114\":1}}],[\"master\",{\"1\":{\"433\":1,\"461\":2,\"462\":1}}],[\"master节点构成的集群\",{\"0\":{\"53\":1}}],[\"manifest\",{\"1\":{\"425\":1}}],[\"management\",{\"1\":{\"274\":1}}],[\"manager\",{\"1\":{\"260\":1}}],[\"mac挂载额外盘符\",{\"0\":{\"413\":1}}],[\"mac\",{\"1\":{\"366\":1}}],[\"macos\",{\"0\":{\"261\":1},\"1\":{\"259\":1,\"413\":1}}],[\"maven\",{\"1\":{\"366\":2}}],[\"maps\",{\"1\":{\"310\":1}}],[\"map\",{\"1\":{\"272\":2,\"312\":1}}],[\"make和new的区别\",{\"0\":{\"312\":1}}],[\"make\",{\"0\":{\"195\":1},\"1\":{\"193\":1,\"209\":1,\"264\":1,\"272\":1,\"312\":8,\"318\":1}}],[\"main2\",{\"1\":{\"298\":1}}],[\"main1\",{\"1\":{\"298\":1}}],[\"main\",{\"1\":{\"80\":2,\"142\":2,\"143\":2,\"144\":2,\"145\":2,\"165\":1,\"191\":4,\"217\":2,\"231\":1,\"244\":2,\"245\":2,\"271\":2,\"272\":2,\"294\":1,\"296\":1,\"298\":1,\"299\":1,\"318\":1,\"368\":1}}],[\"malloc\",{\"0\":{\"31\":1,\"32\":1},\"1\":{\"29\":1}}],[\"短整型\",{\"1\":{\"38\":1}}],[\"≈\",{\"1\":{\"37\":1}}],[\"===\",{\"1\":{\"380\":2}}],[\"==\",{\"1\":{\"244\":1,\"245\":1,\"264\":1,\"272\":3,\"308\":1,\"380\":1}}],[\"=>\",{\"1\":{\"79\":2,\"381\":1}}],[\"=\",{\"0\":{\"206\":1},\"1\":{\"37\":1,\"79\":13,\"118\":6,\"142\":5,\"143\":7,\"144\":8,\"145\":7,\"155\":1,\"165\":2,\"166\":2,\"167\":4,\"191\":14,\"194\":1,\"209\":2,\"217\":13,\"222\":2,\"225\":3,\"231\":4,\"233\":1,\"239\":1,\"243\":3,\"244\":11,\"245\":14,\"264\":5,\"271\":9,\"272\":12,\"298\":2,\"299\":8,\"300\":1,\"308\":2,\"312\":2,\"314\":1,\"315\":1,\"317\":1,\"318\":2,\"381\":2,\"492\":1,\"500\":3,\"505\":1}}],[\"为ca生成一个长度为1024的私钥\",{\"1\":{\"626\":1}}],[\"为自己投票\",{\"1\":{\"572\":1}}],[\"为br3创建一个新的接口并配置其为静态ip或dhcp客户端\",{\"1\":{\"483\":1}}],[\"为访客网络添加一个新的无线网络ssid\",{\"1\":{\"470\":1}}],[\"为了提高队列中消息的可用性\",{\"1\":{\"586\":1}}],[\"为了隔离访客网络\",{\"1\":{\"485\":1}}],[\"为了解决这个问题\",{\"1\":{\"438\":1}}],[\"为了实现在启动时即使没有用户登录也能挂载外部硬盘\",{\"1\":{\"413\":1}}],[\"为了将这三个组件\",{\"1\":{\"386\":1}}],[\"为每个连接启动一个新的协程\",{\"1\":{\"271\":1}}],[\"为什么cap不能同时满足\",{\"0\":{\"513\":1}}],[\"为什么这种区分很重要\",{\"0\":{\"432\":1}}],[\"为什么这个区别重要\",{\"0\":{\"85\":1}}],[\"为什么有这个概念\",{\"0\":{\"163\":1}}],[\"为什么用回调函数\",{\"0\":{\"133\":1}}],[\"为project2添加子模块\",{\"1\":{\"114\":1}}],[\"为project1添加子模块\",{\"1\":{\"114\":1}}],[\"为要设置的值\",{\"1\":{\"44\":1}}],[\"为要操作的内存的指针\",{\"1\":{\"44\":1}}],[\"为\",{\"1\":{\"37\":1,\"44\":1}}],[\"当使用nohup后台启动后\",{\"1\":{\"607\":1}}],[\"当前尝试失败\",{\"1\":{\"601\":1}}],[\"当骑手尝试接单时\",{\"1\":{\"601\":1}}],[\"当一个订单产生时\",{\"1\":{\"600\":1}}],[\"当一个插入\",{\"1\":{\"434\":1}}],[\"当生产者向镜像队列发送消息时\",{\"1\":{\"577\":1}}],[\"当在\",{\"1\":{\"577\":1}}],[\"当节点接收到来自领导者的请求时\",{\"1\":{\"576\":1}}],[\"当\",{\"1\":{\"572\":1}}],[\"当用户通过浏览器访问一个https网站时\",{\"1\":{\"553\":1}}],[\"当用户请求访问某个内容时\",{\"1\":{\"534\":1}}],[\"当您创建一个新的网络\",{\"1\":{\"469\":1}}],[\"当服务器回复设备a的请求\",{\"1\":{\"458\":1}}],[\"当这些设备通过路由器发送数据包时\",{\"1\":{\"458\":1}}],[\"当这些请求到达时\",{\"1\":{\"21\":1}}],[\"当从外部网络返回的数据包到达路由器时\",{\"1\":{\"457\":1}}],[\"当路由器将内部ip地址转换为公共ip地址时\",{\"1\":{\"457\":1}}],[\"当设备a和设备b向外部世界发送数据包时\",{\"1\":{\"456\":1}}],[\"当请求中的文件和表单数据的总大小超过这个限制时\",{\"1\":{\"319\":1}}],[\"当显式指针操作更清晰时\",{\"1\":{\"313\":1}}],[\"当通道被传递时\",{\"1\":{\"310\":1}}],[\"当数据到达您的服务器时\",{\"1\":{\"304\":1}}],[\"当系统需要添加或移除服务器时\",{\"1\":{\"272\":1}}],[\"当你调用parsemultipartform方法时\",{\"1\":{\"319\":1}}],[\"当你需要一个指向类型零值的指针时\",{\"1\":{\"313\":1}}],[\"当你使用\",{\"1\":{\"312\":1}}],[\"当你从连接中读取数据\",{\"1\":{\"307\":1}}],[\"当你为一个类型定义了一个方法\",{\"1\":{\"233\":1}}],[\"当你没有在\",{\"1\":{\"80\":1}}],[\"当所有的位都为\",{\"1\":{\"37\":1}}],[\"若不考虑正负数\",{\"1\":{\"37\":1}}],[\"代码示例\",{\"0\":{\"129\":1,\"291\":1}}],[\"代码指令\",{\"1\":{\"30\":1}}],[\"代码区\",{\"1\":{\"30\":1}}],[\"只需相应地修改配置即可\",{\"1\":{\"470\":1}}],[\"只有当状态仍然是\",{\"1\":{\"601\":1}}],[\"只有当大多数节点都已复制了日志条目\",{\"1\":{\"576\":1}}],[\"只有在保证了跨集群多数节点的一致性后才会发生\",{\"1\":{\"576\":1}}],[\"只有在defer函数内部调用recover才能捕获到panic\",{\"1\":{\"298\":1}}],[\"只有少部分数据需要迁移\",{\"1\":{\"272\":1}}],[\"只有一个操作在被处理\",{\"1\":{\"20\":1}}],[\"只会影响到环上顺时针方向紧邻的下一个服务器\",{\"1\":{\"272\":1}}],[\"只能通过http响应头来实现\",{\"1\":{\"76\":1}}],[\"只读\",{\"1\":{\"30\":1}}],[\"ssl\",{\"0\":{\"552\":1},\"1\":{\"559\":1}}],[\"ssl加密等\",{\"1\":{\"534\":1}}],[\"ssl安全套阶层的安全通信标准\",{\"1\":{\"528\":1}}],[\"ssid\",{\"1\":{\"484\":1}}],[\"ssid通常与无线网络相关\",{\"1\":{\"465\":1}}],[\"sbin\",{\"1\":{\"505\":2}}],[\"sql线程执行中继日志中的事件\",{\"1\":{\"436\":1}}],[\"sql插入操作在主服务器上执行\",{\"0\":{\"434\":1}}],[\"switchtab\",{\"1\":{\"381\":2}}],[\"sys\",{\"1\":{\"393\":1}}],[\"systemd\",{\"1\":{\"392\":2}}],[\"system\",{\"1\":{\"364\":1}}],[\"symbol\",{\"0\":{\"361\":1},\"1\":{\"361\":1}}],[\"synchronous\",{\"1\":{\"438\":2}}],[\"sync\",{\"1\":{\"244\":1,\"562\":1}}],[\"syntax\",{\"1\":{\"243\":1}}],[\"site\",{\"1\":{\"616\":1}}],[\"sighup\",{\"1\":{\"388\":1}}],[\"sigkill\",{\"1\":{\"388\":1}}],[\"sigterm\",{\"1\":{\"388\":1}}],[\"sigint\",{\"1\":{\"388\":1}}],[\"signals\",{\"1\":{\"388\":1}}],[\"signal\",{\"1\":{\"312\":5}}],[\"size\",{\"1\":{\"44\":2}}],[\"scheduling\",{\"1\":{\"368\":2}}],[\"scheduler\",{\"1\":{\"260\":1}}],[\"scope>\",{\"1\":{\"366\":1}}],[\"script>\",{\"1\":{\"322\":1}}],[\"script\",{\"1\":{\"76\":2,\"322\":1,\"491\":2,\"492\":2,\"616\":1}}],[\"soap\",{\"1\":{\"567\":1}}],[\"something\",{\"1\":{\"298\":4}}],[\"someinterface\",{\"1\":{\"225\":1}}],[\"sorted\",{\"1\":{\"142\":1,\"143\":1,\"144\":1,\"145\":1}}],[\"sort\",{\"0\":{\"142\":1,\"143\":1,\"144\":1,\"145\":1,\"147\":1,\"148\":1,\"149\":1,\"150\":1},\"1\":{\"272\":4}}],[\"slave\",{\"1\":{\"433\":1}}],[\"slices\",{\"1\":{\"310\":1}}],[\"slice\",{\"1\":{\"222\":1,\"312\":1}}],[\"sleep\",{\"1\":{\"209\":1,\"245\":2}}],[\"space\",{\"0\":{\"161\":1,\"162\":1}}],[\"springapplication\",{\"1\":{\"368\":2}}],[\"springframework\",{\"1\":{\"366\":2,\"368\":4}}],[\"spring\",{\"1\":{\"366\":2,\"368\":6}}],[\"springbootapplication\",{\"1\":{\"368\":2}}],[\"springboot打开热部署\",{\"0\":{\"365\":1}}],[\"springboot提示\",{\"0\":{\"361\":1}}],[\"springboot报错\",{\"0\":{\"357\":1}}],[\"spring无法找到对应\",{\"0\":{\"359\":1}}],[\"sprintf\",{\"1\":{\"118\":1}}],[\"spread\",{\"1\":{\"47\":1}}],[\"s1\",{\"1\":{\"159\":1}}],[\"sudoers\",{\"1\":{\"505\":1}}],[\"sudo\",{\"1\":{\"409\":2,\"479\":3,\"480\":3,\"505\":1,\"511\":1}}],[\"suppresswarnings\",{\"0\":{\"343\":1}}],[\"supportpackageisversion7\",{\"1\":{\"155\":1}}],[\"sum\",{\"1\":{\"272\":1}}],[\"submodules\",{\"1\":{\"114\":1}}],[\"submodule\",{\"0\":{\"72\":1},\"1\":{\"100\":1,\"112\":1,\"114\":2}}],[\"s\",{\"1\":{\"118\":2,\"167\":2,\"244\":4,\"245\":1,\"315\":1,\"505\":2}}],[\"src=\",{\"1\":{\"322\":1,\"468\":1}}],[\"srcdirectory\",{\"1\":{\"79\":3}}],[\"src\",{\"1\":{\"76\":8,\"79\":2,\"485\":2}}],[\"studio按以下步骤操作\",{\"1\":{\"418\":1}}],[\"studio是一款广泛使用的开源直播软件\",{\"1\":{\"418\":1}}],[\"studio\",{\"0\":{\"418\":1},\"1\":{\"417\":1}}],[\"status\",{\"1\":{\"392\":2}}],[\"static\",{\"1\":{\"30\":1,\"368\":1,\"470\":1,\"483\":1}}],[\"start\",{\"1\":{\"366\":1}}],[\"starter\",{\"1\":{\"363\":1}}],[\"stopchanptr\",{\"1\":{\"312\":3}}],[\"stopchan\",{\"1\":{\"312\":1}}],[\"stop\",{\"1\":{\"245\":1}}],[\"stdout\",{\"1\":{\"217\":1}}],[\"strconv\",{\"1\":{\"244\":2,\"272\":1}}],[\"streaming\",{\"0\":{\"424\":1,\"425\":1}}],[\"stream123\",{\"1\":{\"423\":1,\"424\":1}}],[\"stream\",{\"1\":{\"243\":2,\"244\":4,\"245\":7,\"423\":1}}],[\"str\",{\"1\":{\"194\":1,\"222\":2}}],[\"struct\",{\"1\":{\"118\":1,\"159\":1,\"191\":2,\"194\":1,\"231\":1,\"244\":1,\"264\":1,\"272\":1,\"311\":1,\"314\":1,\"318\":3}}],[\"strings\",{\"0\":{\"205\":1,\"206\":1}}],[\"string\",{\"0\":{\"204\":1},\"1\":{\"61\":2,\"118\":3,\"159\":1,\"165\":1,\"191\":1,\"194\":2,\"221\":1,\"222\":2,\"243\":2,\"264\":1,\"271\":1,\"272\":7,\"299\":1,\"314\":1,\"368\":1}}],[\"style\",{\"1\":{\"76\":2}}],[\"sed\",{\"1\":{\"505\":1}}],[\"serialized\",{\"1\":{\"500\":2}}],[\"serve\",{\"1\":{\"244\":2}}],[\"servers\",{\"1\":{\"392\":1}}],[\"server\",{\"1\":{\"244\":3,\"260\":1,\"423\":1,\"424\":1,\"425\":1}}],[\"serverresponse\",{\"1\":{\"243\":2,\"244\":1}}],[\"service\",{\"1\":{\"243\":1,\"368\":1,\"465\":1,\"567\":1}}],[\"servicename\",{\"1\":{\"118\":2}}],[\"semi\",{\"1\":{\"438\":1}}],[\"set\",{\"1\":{\"366\":1,\"460\":1,\"461\":2,\"462\":1,\"464\":3,\"465\":1,\"468\":5,\"479\":1,\"480\":1}}],[\"search\",{\"1\":{\"272\":1}}],[\"searchints\",{\"1\":{\"272\":1}}],[\"sending\",{\"1\":{\"245\":1}}],[\"send\",{\"1\":{\"244\":2,\"245\":4}}],[\"second\",{\"1\":{\"118\":1,\"165\":1,\"167\":1,\"245\":3,\"294\":2,\"296\":2}}],[\"security\",{\"1\":{\"76\":3}}],[\"select\",{\"1\":{\"245\":1}}],[\"selectionsort\",{\"1\":{\"143\":2}}],[\"selection\",{\"0\":{\"143\":1,\"148\":1}}],[\"selector\",{\"1\":{\"47\":1}}],[\"self\",{\"1\":{\"76\":6}}],[\"sepia\",{\"1\":{\"47\":1}}],[\"san\",{\"1\":{\"557\":1}}],[\"safevarargs\",{\"0\":{\"351\":1}}],[\"saturate\",{\"1\":{\"47\":1}}],[\"saga模式\",{\"0\":{\"15\":1}}],[\"shipit\",{\"1\":{\"511\":1}}],[\"show\",{\"1\":{\"509\":1}}],[\"short\",{\"0\":{\"38\":1}}],[\"shell\",{\"1\":{\"492\":1}}],[\"sha1\",{\"1\":{\"272\":2}}],[\"share\",{\"1\":{\"76\":1}}],[\"shadow\",{\"1\":{\"47\":3}}],[\"堆区\",{\"1\":{\"30\":1}}],[\"可用性意味着每个请求都能收到一个响应\",{\"1\":{\"512\":1}}],[\"可用性\",{\"1\":{\"512\":2}}],[\"可选\",{\"0\":{\"463\":1,\"473\":1},\"1\":{\"479\":1,\"480\":1,\"485\":1}}],[\"可选地\",{\"1\":{\"393\":2}}],[\"可能有助于\",{\"1\":{\"582\":1}}],[\"可能会对性能产生一定影响\",{\"1\":{\"376\":1}}],[\"可能会对指令序列进行重排序\",{\"1\":{\"375\":1}}],[\"可能原因\",{\"0\":{\"362\":1}}],[\"可靠性探讨\",{\"0\":{\"372\":1}}],[\"可靠的键值存储\",{\"1\":{\"176\":1}}],[\"可读可写\",{\"1\":{\"30\":3}}],[\"可以看到演示中的unused\",{\"1\":{\"613\":1}}],[\"可以为订单表增加一个版本号字段\",{\"1\":{\"601\":1}}],[\"可以配置消息的重试机制\",{\"1\":{\"586\":1}}],[\"可以配置一个备份交换机\",{\"1\":{\"585\":1}}],[\"可以考虑以下策略\",{\"1\":{\"582\":1}}],[\"可以先用ifconfig命令获取所有接口的详细信息\",{\"1\":{\"508\":1}}],[\"可以这样做\",{\"1\":{\"462\":1}}],[\"可以添加主播的声音\",{\"1\":{\"418\":1}}],[\"可以使用镜像队列将消息复制到集群中的多个节点\",{\"1\":{\"586\":1}}],[\"可以使用ifconfig命令结合管道符\",{\"1\":{\"506\":1}}],[\"可以使用include或require语句\",{\"1\":{\"491\":1}}],[\"可以使用shell\",{\"1\":{\"492\":1}}],[\"可以使用obs的\",{\"1\":{\"418\":1}}],[\"可以使代码的意图更加明确\",{\"1\":{\"313\":1}}],[\"可以在服务器上运行dhcp服务\",{\"1\":{\"393\":1}}],[\"可以区分对象\",{\"1\":{\"380\":1}}],[\"可以通过它来完成大部分上述操作\",{\"1\":{\"487\":1}}],[\"可以通过以下步骤完成\",{\"1\":{\"478\":1}}],[\"可以通过\",{\"1\":{\"414\":1}}],[\"可以通过在配置类上添加\",{\"1\":{\"368\":1}}],[\"可以通过值调用也可以通过指针调用\",{\"1\":{\"228\":1}}],[\"可以用来创建这样的指针\",{\"1\":{\"313\":1}}],[\"可以直接使用的通道\",{\"1\":{\"312\":1}}],[\"可以直接使用\",{\"1\":{\"312\":1}}],[\"可以选择在此处添加逻辑来处理元数据\",{\"1\":{\"244\":1}}],[\"可以注册自定义类型\",{\"1\":{\"190\":1}}],[\"可以将其路由到一个死信队列\",{\"1\":{\"585\":1}}],[\"可以将\",{\"1\":{\"190\":1}}],[\"可以帮助防止跨站脚本\",{\"1\":{\"76\":1}}],[\"可以被加载\",{\"1\":{\"76\":1}}],[\"可以根据\",{\"1\":{\"44\":1}}],[\"可以保证消息的安全可靠传输\",{\"1\":{\"9\":1}}],[\"可以平衡负载\",{\"1\":{\"9\":1}}],[\"可以调用txrollback来回滚事务\",{\"1\":{\"3\":1}}],[\"栈区\",{\"1\":{\"30\":1}}],[\"权限\",{\"1\":{\"30\":1}}],[\"内还没有投票\",{\"1\":{\"572\":1}}],[\"内部源端口\",{\"1\":{\"456\":1}}],[\"内部源ip地址\",{\"1\":{\"456\":1}}],[\"内部表示也不同\",{\"1\":{\"221\":1}}],[\"内置注解\",{\"0\":{\"340\":1}}],[\"内核支持\",{\"1\":{\"393\":1}}],[\"内核处理\",{\"0\":{\"280\":1}}],[\"内核空间\",{\"0\":{\"161\":1}}],[\"内容预加载等\",{\"1\":{\"534\":1}}],[\"内容缓存和分发\",{\"1\":{\"534\":1}}],[\"内容安全策略\",{\"1\":{\"76\":1}}],[\"内容\",{\"1\":{\"30\":1}}],[\"内存映射\",{\"0\":{\"288\":1}}],[\"内存管理单元\",{\"1\":{\"274\":1}}],[\"内存的虚拟地址\",{\"0\":{\"274\":1}}],[\"内存基础\",{\"0\":{\"273\":1}}],[\"内存里主要有几个划分\",{\"1\":{\"30\":1}}],[\"内存分区\",{\"0\":{\"30\":1},\"1\":{\"30\":1}}],[\"内存分配主要有\",{\"1\":{\"29\":1}}],[\"用户可以获取譬如\",{\"1\":{\"617\":1}}],[\"用户空间\",{\"0\":{\"162\":1}}],[\"用途\",{\"0\":{\"157\":1}}],[\"用来修饰\",{\"1\":{\"61\":1}}],[\"用一张表格表示\",{\"1\":{\"30\":1}}],[\"用于避免时间戳重叠或其他同步问题\",{\"1\":{\"581\":1}}],[\"用于在\",{\"1\":{\"571\":1}}],[\"用于在不同的\",{\"1\":{\"310\":1}}],[\"用于区分不同的通信会话\",{\"1\":{\"456\":1}}],[\"用于表示该方法是异步执行的\",{\"1\":{\"368\":1}}],[\"用于表示文件或流的结尾\",{\"1\":{\"306\":1}}],[\"用于分配内存\",{\"1\":{\"312\":1}}],[\"用于初始化内建的引用类型\",{\"1\":{\"312\":1}}],[\"用于初始化变量的常量\",{\"1\":{\"30\":1}}],[\"用于处理意外情况或清理工作\",{\"1\":{\"387\":1}}],[\"用于处理网络i\",{\"1\":{\"303\":1}}],[\"用于处理跨多个服务的操作\",{\"1\":{\"10\":1}}],[\"用于自动化部署\",{\"1\":{\"259\":1}}],[\"用于生成唯一客户端id\",{\"1\":{\"244\":1}}],[\"用于创建一个从\",{\"1\":{\"300\":1}}],[\"用于创建一个\",{\"1\":{\"194\":1}}],[\"用于进行\",{\"1\":{\"190\":1}}],[\"用于版本兼容性检查\",{\"1\":{\"155\":1}}],[\"用于回滚事务\",{\"1\":{\"2\":1}}],[\"用于提交事务\",{\"1\":{\"2\":1}}],[\"用于将当前channel\",{\"1\":{\"2\":1}}],[\"g\",{\"1\":{\"505\":1}}],[\"guestnetwork\",{\"1\":{\"484\":1}}],[\"guest是访客网络接口的名称\",{\"1\":{\"476\":1}}],[\"guest\",{\"1\":{\"470\":6,\"471\":1,\"476\":5,\"483\":1,\"484\":2,\"485\":5}}],[\"gdi+\",{\"1\":{\"418\":1}}],[\"globalcomponents\",{\"1\":{\"386\":1}}],[\"glob的使用场景和实例\",{\"0\":{\"190\":1}}],[\"genrsa\",{\"1\":{\"626\":1}}],[\"generatehash\",{\"1\":{\"272\":4}}],[\"gentree\",{\"1\":{\"264\":2}}],[\"getc\",{\"1\":{\"318\":2}}],[\"getnode\",{\"1\":{\"272\":6}}],[\"getmessage\",{\"1\":{\"244\":1}}],[\"get\",{\"1\":{\"167\":1,\"334\":1}}],[\"gin\",{\"0\":{\"255\":1}}],[\"github\",{\"0\":{\"569\":1},\"1\":{\"113\":2,\"114\":2}}],[\"git子模块基本使用\",{\"0\":{\"112\":1}}],[\"git子模块简单使用\",{\"0\":{\"98\":1}}],[\"gitlab\",{\"0\":{\"104\":2,\"105\":1,\"106\":1},\"1\":{\"104\":3}}],[\"gitlab和runner如何配置\",{\"0\":{\"103\":1}}],[\"git\",{\"0\":{\"72\":1},\"1\":{\"100\":2,\"113\":2,\"114\":6}}],[\"grep\",{\"1\":{\"392\":1,\"507\":1,\"508\":1,\"509\":1}}],[\"greetresponse\",{\"0\":{\"331\":1,\"332\":1}}],[\"greeter\",{\"1\":{\"266\":1}}],[\"groupid>\",{\"1\":{\"366\":2}}],[\"grpc服务端流\",{\"0\":{\"246\":1}}],[\"grpc双向流\",{\"0\":{\"242\":1}}],[\"grpc的几种分类\",{\"0\":{\"241\":1}}],[\"grpc\",{\"1\":{\"155\":2,\"244\":3,\"245\":6,\"266\":1}}],[\"grpc自定义注册和解析\",{\"0\":{\"117\":1}}],[\"grant\",{\"1\":{\"118\":1}}],[\"grayscale\",{\"1\":{\"47\":1,\"48\":1}}],[\"go返回参数结构体是否该用指针\",{\"0\":{\"330\":1}}],[\"go流式上传例子\",{\"0\":{\"324\":1}}],[\"go的标准库会负责管理这些临时文件\",{\"1\":{\"319\":1}}],[\"go的基本操作\",{\"0\":{\"164\":1}}],[\"go哪些是引用类型\",{\"0\":{\"310\":1}}],[\"goroutines\",{\"1\":{\"310\":1}}],[\"goroutine\",{\"1\":{\"297\":1}}],[\"golang\",{\"1\":{\"244\":1,\"245\":2}}],[\"google\",{\"1\":{\"244\":1,\"245\":2,\"259\":1}}],[\"go选择合适的数据存储金额\",{\"0\":{\"239\":1}}],[\"go会自动转换调用方式\",{\"1\":{\"232\":1}}],[\"go会自动进行转换\",{\"1\":{\"228\":1,\"229\":1}}],[\"go语言在调用方法时\",{\"1\":{\"230\":1}}],[\"go语言实现\",{\"1\":{\"142\":1,\"143\":1,\"144\":1,\"145\":1}}],[\"go接口指针的一些注意点\",{\"0\":{\"226\":1}}],[\"go常用写法\",{\"0\":{\"225\":1}}],[\"go常量忽略的用法作用\",{\"0\":{\"155\":1}}],[\"go字符串和字节数组的转换\",{\"0\":{\"220\":1}}],[\"go函数体实现接口\",{\"0\":{\"219\":1}}],[\"go上传和接收指定文件\",{\"0\":{\"216\":1}}],[\"go内存泄漏的几种可能\",{\"0\":{\"208\":1}}],[\"go中数据结构常用定义和使用的区别\",{\"0\":{\"202\":1}}],[\"gob\",{\"1\":{\"190\":8,\"191\":7}}],[\"go结构体初始化的几种方式\",{\"0\":{\"159\":1}}],[\"go实现主要排序算法\",{\"0\":{\"140\":1}}],[\"go\",{\"0\":{\"117\":1,\"174\":1,\"189\":1,\"190\":1,\"193\":1,\"259\":1,\"267\":1},\"1\":{\"118\":1,\"155\":1,\"156\":1,\"165\":1,\"190\":9,\"191\":1,\"193\":1,\"209\":1,\"217\":2,\"221\":1,\"243\":1,\"245\":1,\"266\":3,\"271\":1,\"299\":1,\"306\":1,\"310\":3,\"311\":3,\"312\":1,\"313\":3,\"315\":1,\"318\":1}}],[\"go使用rabbitmq的例子\",{\"0\":{\"7\":1}}],[\"g++相关命令\",{\"0\":{\"28\":1}}],[\"链接\",{\"0\":{\"27\":1}}],[\"汇编\",{\"0\":{\"26\":1}}],[\"对外提供一致且可靠的服务\",{\"1\":{\"576\":1}}],[\"对比\",{\"0\":{\"315\":1}}],[\"对比度调整\",{\"1\":{\"46\":1}}],[\"对切片的任何修改都会影响其底层数组\",{\"1\":{\"310\":1}}],[\"对象转换为字节流\",{\"1\":{\"500\":1}}],[\"对象序列化为二进制格式\",{\"1\":{\"190\":1}}],[\"对象的\",{\"1\":{\"190\":1}}],[\"对象的编码和解码\",{\"1\":{\"190\":1}}],[\"对象\",{\"1\":{\"190\":1,\"191\":5,\"500\":2}}],[\"对象编码为字节流\",{\"1\":{\"190\":1}}],[\"对目标代码进行文本处理和翻译\",{\"1\":{\"24\":1}}],[\"对于这个问题\",{\"1\":{\"625\":1}}],[\"对于无法处理的消息\",{\"1\":{\"585\":1}}],[\"对于时间戳严重不连续的视频\",{\"1\":{\"582\":1}}],[\"对于openwrt\",{\"1\":{\"482\":1}}],[\"对于更复杂的流处理需求\",{\"1\":{\"419\":1}}],[\"对于复杂并发控制来说\",{\"1\":{\"376\":1}}],[\"对于创建通道\",{\"1\":{\"312\":1}}],[\"对于任何类型\",{\"1\":{\"312\":1}}],[\"对于确保程序正确理解输入结束非常重要\",{\"1\":{\"309\":1}}],[\"对于大型结构体或需要频繁修改的场景\",{\"1\":{\"230\":1}}],[\"对于值接收者的任何修改都不会影响到原始数据\",{\"1\":{\"228\":1}}],[\"对于结构体\",{\"1\":{\"194\":1}}],[\"对于未排序数据\",{\"1\":{\"144\":1}}],[\"对于长时间运行的计算密集型任务\",{\"1\":{\"22\":1}}],[\"对于理解它的性能和行为至关重要\",{\"1\":{\"19\":1}}],[\"预写日志\",{\"0\":{\"184\":1}}],[\"预编译\",{\"0\":{\"24\":1}}],[\"预处理\",{\"0\":{\"24\":1}}],[\"cfr\",{\"1\":{\"581\":2,\"582\":2}}],[\"cn\",{\"1\":{\"557\":1}}],[\"cpu的缓存一致性问题指的是在多核cpu系统中\",{\"1\":{\"514\":1}}],[\"cpu的工作模式\",{\"0\":{\"160\":1}}],[\"cpu缓存一致性\",{\"0\":{\"514\":1}}],[\"cmnd\",{\"1\":{\"505\":1}}],[\"cmd\",{\"1\":{\"366\":1,\"505\":2}}],[\"ctrl+c\",{\"1\":{\"388\":1}}],[\"ctx\",{\"1\":{\"167\":2}}],[\"c++等语言中\",{\"1\":{\"374\":1}}],[\"c++编译过程\",{\"0\":{\"23\":1}}],[\"ca\",{\"0\":{\"556\":1},\"1\":{\"556\":1,\"626\":2}}],[\"cap定理指出\",{\"1\":{\"512\":1}}],[\"cap定理是分布式计算中的一个重要概念\",{\"1\":{\"512\":1}}],[\"cap代表一致性\",{\"1\":{\"512\":1}}],[\"cap为什么不能同时满足\",{\"0\":{\"512\":1}}],[\"cat\",{\"1\":{\"505\":2}}],[\"cat与重定向连用\",{\"0\":{\"505\":1}}],[\"cache\",{\"1\":{\"364\":1,\"595\":1}}],[\"caches\",{\"1\":{\"364\":1,\"511\":1}}],[\"candidate\",{\"1\":{\"571\":1,\"572\":4}}],[\"cannot\",{\"0\":{\"361\":1}}],[\"cancel\",{\"1\":{\"167\":2}}],[\"case\",{\"1\":{\"245\":1}}],[\"callback\",{\"1\":{\"381\":9}}],[\"calling\",{\"1\":{\"298\":2}}],[\"called\",{\"1\":{\"231\":2}}],[\"call\",{\"1\":{\"219\":2,\"380\":2}}],[\"calloc\",{\"0\":{\"31\":1,\"33\":1},\"1\":{\"29\":1}}],[\"class\",{\"1\":{\"368\":3,\"381\":1}}],[\"class<t>\",{\"1\":{\"335\":1}}],[\"cloud\",{\"1\":{\"259\":1}}],[\"closesend\",{\"1\":{\"245\":1}}],[\"closed\",{\"1\":{\"244\":1}}],[\"close\",{\"1\":{\"165\":1,\"217\":3,\"245\":2,\"251\":1,\"271\":2,\"299\":1,\"318\":1}}],[\"cli\",{\"1\":{\"118\":2,\"165\":2,\"166\":1,\"167\":1}}],[\"clientlogprefix+\",{\"1\":{\"244\":2}}],[\"clientlogprefix\",{\"1\":{\"244\":3}}],[\"clientid\",{\"1\":{\"244\":2}}],[\"clientidcounter\",{\"1\":{\"244\":2}}],[\"clientrequest\",{\"1\":{\"243\":2,\"245\":2}}],[\"client\",{\"1\":{\"118\":6,\"165\":1,\"217\":4,\"244\":1,\"299\":1}}],[\"clientv3\",{\"1\":{\"118\":6,\"165\":3}}],[\"cluster\",{\"1\":{\"51\":1,\"589\":1}}],[\"cdn通常提供一些安全功能\",{\"1\":{\"534\":1}}],[\"cdn还会通过一些技术手段\",{\"1\":{\"534\":1}}],[\"cdn会定期检查源服务器上的内容更新\",{\"1\":{\"534\":1}}],[\"cdn会根据当前网络流量和边缘节点的负载情况\",{\"1\":{\"534\":1}}],[\"cdn会将内容从最接近用户的边缘节点提供\",{\"1\":{\"534\":1}}],[\"cdn的分布式架构使得用户能够就近访问内容\",{\"1\":{\"534\":1}}],[\"cdn在世界各地建立了多个分布式的数据中心\",{\"1\":{\"534\":1}}],[\"cdn\",{\"1\":{\"534\":1}}],[\"cdn原理示例\",{\"0\":{\"534\":1}}],[\"cd\",{\"1\":{\"104\":1,\"114\":1}}],[\"city\",{\"1\":{\"500\":1}}],[\"circle\",{\"1\":{\"272\":6}}],[\"ci\",{\"1\":{\"104\":1}}],[\"chrome\",{\"1\":{\"618\":1}}],[\"chrome资源覆盖率\",{\"0\":{\"612\":1}}],[\"chown\",{\"1\":{\"511\":1}}],[\"chan\",{\"1\":{\"312\":5,\"318\":2}}],[\"channel关闭判断方法\",{\"0\":{\"316\":1}}],[\"channel\",{\"1\":{\"312\":1}}],[\"channels\",{\"1\":{\"310\":1}}],[\"char\",{\"0\":{\"40\":1},\"1\":{\"44\":2}}],[\"ch\",{\"1\":{\"272\":36,\"317\":1,\"318\":7}}],[\"children\",{\"1\":{\"264\":2}}],[\"chunk解析\",{\"0\":{\"88\":1}}],[\"chunks的几个值\",{\"0\":{\"86\":1}}],[\"chunk\",{\"0\":{\"77\":1,\"81\":1,\"82\":1}}],[\"csp\",{\"0\":{\"76\":1}}],[\"css文件等\",{\"1\":{\"76\":1}}],[\"css中的filter属性是一个强大且灵活的工具\",{\"1\":{\"46\":1}}],[\"css\",{\"0\":{\"46\":1,\"525\":1}}],[\"current\",{\"1\":{\"61\":1}}],[\"cross\",{\"1\":{\"616\":1}}],[\"crl\",{\"0\":{\"558\":1},\"1\":{\"558\":1}}],[\"crypto\",{\"1\":{\"272\":1}}],[\"credentials\",{\"1\":{\"245\":1}}],[\"createformfile\",{\"1\":{\"217\":1}}],[\"create\",{\"0\":{\"511\":1},\"1\":{\"51\":1}}],[\"crawlerserviceserver\",{\"1\":{\"233\":1}}],[\"crc16简介\",{\"0\":{\"55\":1}}],[\"coherence\",{\"1\":{\"595\":2}}],[\"cookie的作用\",{\"0\":{\"541\":1}}],[\"cookie\",{\"0\":{\"540\":1},\"1\":{\"617\":1}}],[\"codec\",{\"0\":{\"428\":1},\"1\":{\"427\":1}}],[\"could\",{\"0\":{\"511\":1},\"1\":{\"245\":1}}],[\"copy\",{\"1\":{\"217\":2,\"582\":1,\"608\":1,\"609\":1}}],[\"concurrent包\",{\"1\":{\"376\":1}}],[\"consistency\",{\"1\":{\"512\":2}}],[\"consistenthashing\",{\"1\":{\"272\":7}}],[\"constructor\",{\"1\":{\"381\":1}}],[\"const\",{\"1\":{\"79\":10,\"155\":1,\"156\":1}}],[\"conn\",{\"1\":{\"245\":3,\"271\":7,\"299\":7,\"301\":1,\"303\":1}}],[\"connection\",{\"1\":{\"244\":1,\"251\":1}}],[\"connectserver\",{\"1\":{\"244\":1}}],[\"connect\",{\"1\":{\"118\":1,\"243\":1,\"244\":1,\"245\":3}}],[\"confirms\",{\"1\":{\"584\":2}}],[\"configuration>\",{\"1\":{\"366\":1}}],[\"config\",{\"1\":{\"118\":1,\"165\":1,\"464\":1,\"466\":1,\"468\":1,\"469\":1,\"470\":2,\"475\":1,\"482\":1,\"483\":2,\"484\":2,\"485\":4}}],[\"conf\",{\"0\":{\"97\":1}}],[\"container\",{\"0\":{\"429\":1},\"1\":{\"427\":1}}],[\"containing\",{\"1\":{\"61\":3,\"222\":1}}],[\"continue\",{\"1\":{\"271\":1,\"299\":1}}],[\"controller\",{\"1\":{\"260\":1}}],[\"control\",{\"1\":{\"260\":1}}],[\"contrast\",{\"1\":{\"47\":1,\"48\":1}}],[\"context\",{\"0\":{\"189\":1},\"1\":{\"118\":3,\"165\":1,\"166\":1,\"167\":2,\"245\":2}}],[\"content\",{\"1\":{\"76\":2,\"217\":1,\"534\":1}}],[\"compose文件\",{\"0\":{\"536\":1}}],[\"compose来配置和启动rabbitmq容器的集群\",{\"1\":{\"535\":1}}],[\"compose启动gitlab\",{\"0\":{\"110\":1}}],[\"completed\",{\"1\":{\"368\":1}}],[\"completedfuture\",{\"1\":{\"368\":1}}],[\"completablefuture\",{\"1\":{\"368\":1}}],[\"completablefuture<string>\",{\"1\":{\"368\":1}}],[\"computing\",{\"1\":{\"259\":1}}],[\"commit\",{\"1\":{\"114\":1,\"464\":1,\"468\":1}}],[\"commons\",{\"0\":{\"88\":1}}],[\"com\",{\"1\":{\"74\":1,\"76\":2,\"113\":2,\"114\":2,\"423\":1,\"424\":1,\"511\":1}}],[\"color\",{\"1\":{\"47\":1}}],[\"c语言常用类型占用大小\",{\"0\":{\"36\":1}}],[\"c内存分配\",{\"0\":{\"29\":1}}],[\"c\",{\"0\":{\"23\":1,\"557\":1},\"1\":{\"29\":1,\"245\":2,\"386\":2,\"582\":1,\"608\":1,\"609\":1}}],[\"然后负责将这些日志条目复制到集群中的所有跟随者\",{\"1\":{\"576\":1}}],[\"然后从那里开始重新复制\",{\"1\":{\"574\":1}}],[\"然后从这个位置顺时针找到的第一个服务器就是该键所属的服务器\",{\"1\":{\"272\":1}}],[\"然后使用grep的上下文显示功能\",{\"1\":{\"508\":1}}],[\"然后用grep命令过滤出以br开头的行\",{\"1\":{\"507\":1}}],[\"然后测试配置以确保访客设备不能访问主网络\",{\"1\":{\"477\":1}}],[\"然后\",{\"1\":{\"460\":1,\"462\":1,\"573\":1,\"577\":1}}],[\"然后将数据包的目标ip和端口转换为192\",{\"1\":{\"458\":1}}],[\"然后选择一个直播平台作为输出目的地\",{\"1\":{\"418\":1}}],[\"然后您的程序可以从这个缓冲区中读取数据\",{\"1\":{\"304\":1}}],[\"然后与其他语言进行通信\",{\"1\":{\"190\":1}}],[\"然后再按此方法对这两部分数据分别进行快速排序\",{\"1\":{\"145\":1}}],[\"然后再从剩余的未排序元素中寻找最小\",{\"1\":{\"143\":1}}],[\"然后放到已排序序列的末尾\",{\"1\":{\"143\":1}}],[\"然后发送多条消息\",{\"1\":{\"1\":1}}],[\"然而\",{\"1\":{\"22\":1,\"76\":1,\"297\":1,\"298\":1,\"587\":1}}],[\"中用于从字节流中加载序列化对象的函数\",{\"1\":{\"500\":1}}],[\"中操作或编辑\",{\"1\":{\"482\":1}}],[\"中继日志是从服务器上的二进制日志的一个副本\",{\"1\":{\"435\":1}}],[\"中实现异步操作通常使用\",{\"1\":{\"368\":1}}],[\"中直接使用值类型\",{\"1\":{\"313\":1}}],[\"中的路由\",{\"1\":{\"583\":1}}],[\"中的一种序列化模块\",{\"1\":{\"500\":1}}],[\"中的异步操作\",{\"1\":{\"368\":1}}],[\"中的引用类型和它们的行为对于编写高效且正确的程序非常重要\",{\"1\":{\"311\":1}}],[\"中的实际地址是分开的\",{\"1\":{\"274\":1}}],[\"中的字符串是不可变的\",{\"1\":{\"221\":1}}],[\"中被用作空白标识符\",{\"1\":{\"156\":1}}],[\"中\",{\"1\":{\"21\":1,\"159\":1,\"251\":1,\"310\":1,\"311\":1,\"315\":1}}],[\"资源抢占问题\",{\"1\":{\"21\":1}}],[\"大多数情况下客户端不会注意到任何延迟\",{\"1\":{\"21\":1}}],[\"或使用在线证书状态协议\",{\"1\":{\"558\":1}}],[\"或exec\",{\"1\":{\"492\":1}}],[\"或你的无线设备标识符\",{\"1\":{\"484\":1}}],[\"或类似系统\",{\"1\":{\"472\":1}}],[\"或您选择的任何名称\",{\"1\":{\"470\":1}}],[\"或直接编辑配置文件来添加新的网络接口\",{\"1\":{\"470\":1}}],[\"或已有的虚拟接口\",{\"1\":{\"461\":1}}],[\"或值接收者\",{\"1\":{\"227\":1}}],[\"或最大\",{\"1\":{\"143\":2}}],[\"或者二进制格式\",{\"1\":{\"597\":1}}],[\"或者通用名称\",{\"1\":{\"557\":1}}],[\"或者\",{\"1\":{\"486\":1,\"491\":1,\"492\":1}}],[\"或者对于一个vlan接口\",{\"1\":{\"461\":1}}],[\"或者使用路由协议如rip\",{\"1\":{\"393\":1}}],[\"或者使用固定精度的数值类型\",{\"1\":{\"239\":1}}],[\"或者进行其他适当的处理\",{\"1\":{\"308\":1}}],[\"或者在一个大型仓库中给不同的开发人员分配各自独立的仓库\",{\"1\":{\"99\":1}}],[\"或者你出于某种原因需要取消发送的消息\",{\"1\":{\"3\":1}}],[\"或\",{\"0\":{\"491\":1,\"492\":1},\"1\":{\"21\":1,\"233\":1,\"251\":1,\"311\":1,\"581\":2}}],[\"处理并发更新\",{\"0\":{\"605\":1}}],[\"处理并发\",{\"1\":{\"600\":1}}],[\"处理类似于外卖应用中的抢单功能时\",{\"1\":{\"598\":1}}],[\"处理其他错误\",{\"1\":{\"308\":1}}],[\"处理文件或流的结尾\",{\"1\":{\"308\":1}}],[\"处理数据\",{\"1\":{\"271\":1}}],[\"处理连接上的请求\",{\"1\":{\"271\":1}}],[\"处理多个连接\",{\"1\":{\"21\":1}}],[\"处理命令\",{\"1\":{\"19\":1}}],[\"并确保输出视频的播放更加平稳\",{\"1\":{\"582\":1}}],[\"并通知\",{\"1\":{\"573\":1}}],[\"并通过nat表中的映射来确定这个数据包应该被发送到内部网络中的哪个设备\",{\"1\":{\"457\":1}}],[\"并等待大多数\",{\"1\":{\"573\":1}}],[\"并向其他节点请求投票\",{\"1\":{\"572\":1}}],[\"并发起一次新的选举\",{\"1\":{\"572\":1}}],[\"并发连接和请求处理\",{\"0\":{\"21\":1}}],[\"并在需要时将其重新加载为\",{\"1\":{\"500\":1}}],[\"并在最后提交这个事务\",{\"1\":{\"1\":1}}],[\"并创建一个虚拟局域网\",{\"1\":{\"459\":1}}],[\"并转发给设备a\",{\"1\":{\"458\":1}}],[\"并请求从上次同步后的二进制日志位置开始的所有新的二进制日志条目\",{\"1\":{\"435\":1}}],[\"并将日志等重要文件映射到本机\",{\"1\":{\"535\":1}}],[\"并将新内容缓存到边缘节点\",{\"1\":{\"534\":1}}],[\"并将其关联到一个新的网络接口\",{\"1\":{\"470\":1}}],[\"并将其绑定到你的新桥接接口br3\",{\"1\":{\"466\":1}}],[\"并将其作为一个合成的视频流直播或录制\",{\"1\":{\"418\":1}}],[\"并将字节切片的内容复制到这个新字符串中\",{\"1\":{\"222\":1}}],[\"并将字符串的内容复制到这个新切片中\",{\"1\":{\"222\":1}}],[\"并返回相应的\",{\"1\":{\"500\":1}}],[\"并返回其地址\",{\"1\":{\"313\":1}}],[\"并返回指向它的指针\",{\"1\":{\"194\":1}}],[\"并提供在\",{\"1\":{\"259\":1}}],[\"并附带使用go语言实现的代码示例\",{\"1\":{\"141\":1}}],[\"并且版本号加一\",{\"1\":{\"601\":1}}],[\"并且能够处理并发请求\",{\"1\":{\"600\":1}}],[\"并且对网络带宽和节点之间的同步有更高的要求\",{\"1\":{\"589\":1}}],[\"并且自签发以来没有被篡改\",{\"1\":{\"560\":1}}],[\"并且返回结果\",{\"1\":{\"512\":1}}],[\"并且希望共享变量和上下文\",{\"1\":{\"491\":1}}],[\"并且可能包含多种不同类型的数据\",{\"1\":{\"429\":1}}],[\"并且允许你在创建时就初始化结构体的字段\",{\"1\":{\"315\":1}}],[\"并且这个panic没有被恢复\",{\"1\":{\"297\":1}}],[\"并且已经推送到github上\",{\"1\":{\"113\":1}}],[\"并且有些csp功能\",{\"1\":{\"76\":1}}],[\"并为它们每一个构建一个入口\",{\"1\":{\"79\":1}}],[\"并由\",{\"1\":{\"21\":1}}],[\"多协程ffmpeg\",{\"1\":{\"562\":1}}],[\"多线程环境下的变量共享\",{\"1\":{\"375\":1}}],[\"多余的数据会自动被写入到服务器的临时文件系统中\",{\"1\":{\"319\":1}}],[\"多个\",{\"0\":{\"296\":1}}],[\"多路复用和高效的内部数据结构\",{\"1\":{\"22\":1}}],[\"多路复用技术来同时处理多个网络连接\",{\"1\":{\"20\":1}}],[\"多路复用\",{\"1\":{\"20\":1}}],[\"多种消息模式\",{\"1\":{\"9\":1}}],[\"ocsp\",{\"0\":{\"558\":1},\"1\":{\"558\":1}}],[\"o线程会将这些日志写入本地的中继日志\",{\"1\":{\"435\":1}}],[\"o线程连接到主服务器\",{\"1\":{\"435\":1}}],[\"over\",{\"0\":{\"425\":1}}],[\"override\",{\"0\":{\"341\":1}}],[\"obs\",{\"1\":{\"418\":1}}],[\"obs混流基本方案\",{\"0\":{\"417\":1}}],[\"object\",{\"1\":{\"380\":6}}],[\"ok为false时channel关闭\",{\"1\":{\"317\":1}}],[\"ok\",{\"1\":{\"317\":1}}],[\"of\",{\"1\":{\"306\":1,\"366\":1}}],[\"once原理\",{\"1\":{\"562\":1}}],[\"onclick=\",{\"1\":{\"322\":1}}],[\"on\",{\"1\":{\"271\":1}}],[\"out\",{\"1\":{\"626\":1}}],[\"out=paths=source\",{\"1\":{\"266\":2}}],[\"out=\",{\"1\":{\"266\":1}}],[\"output\",{\"1\":{\"79\":1,\"485\":1,\"582\":2,\"608\":3,\"609\":3}}],[\"org\",{\"1\":{\"244\":1,\"245\":2,\"368\":4}}],[\"opkg\",{\"1\":{\"460\":2}}],[\"operation\",{\"1\":{\"368\":1}}],[\"openssl\",{\"1\":{\"626\":1}}],[\"openwrt的web界面\",{\"1\":{\"487\":1}}],[\"open\",{\"1\":{\"217\":1}}],[\"option\",{\"1\":{\"243\":1,\"470\":5,\"483\":6,\"484\":6,\"485\":12}}],[\"opacity\",{\"1\":{\"47\":1}}],[\"ospf等\",{\"1\":{\"393\":1}}],[\"os\",{\"1\":{\"217\":5,\"271\":2,\"312\":5}}],[\"o\",{\"1\":{\"20\":2,\"22\":1,\"303\":1,\"476\":1}}],[\"iwconfig\",{\"1\":{\"408\":1}}],[\"ipaddr\",{\"1\":{\"470\":1,\"483\":1}}],[\"iptables\",{\"0\":{\"398\":1},\"1\":{\"476\":5}}],[\"ip\",{\"0\":{\"395\":1,\"402\":1},\"1\":{\"393\":1,\"460\":2,\"461\":2,\"462\":2,\"463\":1,\"479\":3,\"480\":2,\"509\":1}}],[\"ipv4\",{\"1\":{\"393\":1}}],[\"isolation\",{\"1\":{\"485\":1}}],[\"isobject\",{\"1\":{\"380\":2}}],[\"isdirectory\",{\"1\":{\"79\":1}}],[\"i=\",{\"1\":{\"266\":1}}],[\"ichildren\",{\"1\":{\"264\":2}}],[\"items\",{\"1\":{\"264\":4}}],[\"item\",{\"1\":{\"264\":5}}],[\"i+1\",{\"1\":{\"145\":2}}],[\"i++\",{\"1\":{\"142\":1,\"143\":1,\"144\":1,\"145\":1}}],[\"identifier\",{\"1\":{\"465\":1}}],[\"id为100的vlan\",{\"1\":{\"462\":1}}],[\"id的虚拟接口\",{\"1\":{\"462\":1}}],[\"id=\",{\"1\":{\"322\":1}}],[\"id\",{\"1\":{\"118\":1,\"264\":4,\"462\":1}}],[\"io\",{\"0\":{\"306\":1},\"1\":{\"118\":1,\"165\":1,\"217\":3,\"244\":2,\"245\":2,\"306\":2,\"307\":2,\"308\":1,\"309\":3}}],[\"implode\",{\"1\":{\"492\":1}}],[\"import\",{\"1\":{\"118\":1,\"142\":1,\"143\":1,\"144\":1,\"145\":1,\"165\":1,\"191\":2,\"217\":1,\"244\":1,\"245\":1,\"271\":1,\"272\":1,\"368\":4,\"500\":1}}],[\"img\",{\"1\":{\"48\":1,\"76\":2}}],[\"ifconfig\",{\"1\":{\"505\":2,\"507\":1,\"508\":1}}],[\"iface\",{\"1\":{\"484\":1}}],[\"ifname\",{\"1\":{\"470\":1,\"483\":1}}],[\"ifname=\",{\"1\":{\"464\":1}}],[\"ifndef\",{\"1\":{\"381\":1}}],[\"ifdef\",{\"1\":{\"381\":1}}],[\"if\",{\"1\":{\"79\":2,\"118\":2,\"142\":1,\"143\":1,\"145\":2,\"165\":1,\"166\":1,\"167\":1,\"191\":4,\"217\":5,\"244\":5,\"245\":7,\"264\":1,\"271\":4,\"272\":3,\"298\":1,\"299\":3,\"308\":2,\"381\":1}}],[\"include\",{\"1\":{\"491\":1}}],[\"including\",{\"1\":{\"61\":3}}],[\"input\",{\"1\":{\"476\":3,\"485\":1,\"582\":2}}],[\"init\",{\"1\":{\"464\":1,\"468\":1,\"486\":2}}],[\"info\",{\"1\":{\"414\":1}}],[\"inherited\",{\"0\":{\"350\":1}}],[\"in\",{\"1\":{\"244\":2,\"245\":2,\"298\":2}}],[\"invalidate\",{\"1\":{\"364\":1}}],[\"invoker\",{\"1\":{\"219\":1}}],[\"invert\",{\"1\":{\"47\":1}}],[\"install安装依赖不会在您的项目目录中创建任何文件来记录依赖\",{\"1\":{\"495\":1}}],[\"install\",{\"1\":{\"409\":1,\"460\":1}}],[\"instanceof\",{\"1\":{\"381\":1}}],[\"insert\",{\"1\":{\"434\":1}}],[\"insertionsort\",{\"1\":{\"144\":2}}],[\"insertion\",{\"0\":{\"144\":1,\"149\":1}}],[\"insecure\",{\"1\":{\"245\":2}}],[\"insufficient\",{\"1\":{\"61\":1}}],[\"index+1\",{\"1\":{\"272\":1}}],[\"index\",{\"1\":{\"76\":3,\"79\":2,\"272\":8,\"608\":1}}],[\"interviewer\",{\"0\":{\"562\":1}}],[\"interfaces\",{\"1\":{\"310\":1}}],[\"interface\",{\"1\":{\"219\":4,\"470\":2,\"483\":1}}],[\"ints\",{\"1\":{\"272\":1}}],[\"int或big\",{\"1\":{\"239\":1}}],[\"int64\",{\"1\":{\"118\":1,\"239\":1,\"244\":1}}],[\"int为2字节\",{\"1\":{\"37\":1}}],[\"int建议为一个机器字长\",{\"1\":{\"37\":1}}],[\"int一般占用4个字节\",{\"1\":{\"37\":1}}],[\"int\",{\"0\":{\"37\":1},\"1\":{\"44\":4,\"142\":2,\"143\":2,\"144\":2,\"145\":6,\"159\":1,\"191\":2,\"194\":1,\"209\":1,\"264\":3,\"272\":9,\"311\":1,\"314\":1}}],[\"i\",{\"1\":{\"20\":2,\"22\":1,\"142\":3,\"143\":6,\"144\":4,\"145\":4,\"264\":5,\"272\":2,\"435\":1,\"476\":10,\"582\":2,\"608\":1,\"609\":1}}],[\"它就成为新的\",{\"1\":{\"572\":1}}],[\"它负责处理客户端请求和数据复制\",{\"1\":{\"571\":1}}],[\"它被设计为易于理解和实现\",{\"1\":{\"570\":1}}],[\"它被用来声明一个常量\",{\"1\":{\"156\":1}}],[\"它通常提供更现代和灵活的网络配置和查询功能\",{\"1\":{\"509\":1}}],[\"它接受一个包含序列化对象的字节流\",{\"1\":{\"500\":1}}],[\"它能够将\",{\"1\":{\"500\":1}}],[\"它没有一个与package\",{\"1\":{\"495\":1}}],[\"它提供了管理桥接接口的工具\",{\"1\":{\"460\":1}}],[\"它提供了一个动态大小的\",{\"1\":{\"310\":1}}],[\"它提供了一种高效\",{\"1\":{\"190\":1}}],[\"它会变成\",{\"1\":{\"572\":1}}],[\"它会为每个会话分配一个唯一的外部端口号\",{\"1\":{\"457\":1}}],[\"它会返回一个指向\",{\"1\":{\"312\":1}}],[\"它可以包含使用h\",{\"1\":{\"431\":1}}],[\"它允许用户捕获视频源\",{\"1\":{\"418\":1}}],[\"它告诉编译器这个变量的值可能会被某些编译器无法检测的因素\",{\"1\":{\"374\":1}}],[\"它创建了一个实际的通道实例并返回一个通道类型的引用\",{\"1\":{\"312\":1}}],[\"它从数组\",{\"1\":{\"300\":1}}],[\"它将不会有任何作用\",{\"1\":{\"298\":1}}],[\"它与物理内存\",{\"1\":{\"274\":1}}],[\"它最初由\",{\"1\":{\"259\":1}}],[\"它们之间的关系\",{\"0\":{\"430\":1}}],[\"它们之间的转换需要复制底层的数据\",{\"1\":{\"222\":1}}],[\"它们共同决定了视频文件的存储\",{\"1\":{\"427\":1}}],[\"它们各自有不同的特点和应用场景\",{\"1\":{\"422\":1}}],[\"它们首先被存放在接收缓冲区中\",{\"1\":{\"304\":1}}],[\"它们将在后续的迭代中被读取\",{\"1\":{\"301\":1}}],[\"它们会检查请求中的任期号\",{\"1\":{\"576\":1}}],[\"它们会以后进先出\",{\"1\":{\"295\":1}}],[\"它们会被放入队列中\",{\"1\":{\"21\":1}}],[\"它包含的字节序列就不能被改变\",{\"1\":{\"221\":1}}],[\"它是一个非常有用的工具\",{\"1\":{\"387\":1}}],[\"它是用来指示没有更多的数据可以读取了\",{\"1\":{\"306\":1}}],[\"它是为分布式系统的关键值数据设计的\",{\"1\":{\"176\":1}}],[\"它是句子的主语\",{\"1\":{\"61\":1}}],[\"它用于忽略值或变量\",{\"1\":{\"156\":1}}],[\"它的基本思想是将哈希空间组织成一个虚拟的圆环\",{\"1\":{\"272\":1}}],[\"它的基本思想是通过一趟排序将要排序的数据分割成独立的两部分\",{\"1\":{\"145\":1}}],[\"它的工作原理是构建有序序列\",{\"1\":{\"144\":1}}],[\"它的工作原理是每一次从待排序的数据元素中选出最小\",{\"1\":{\"143\":1}}],[\"它重复地遍历要排序的数列\",{\"1\":{\"142\":1}}],[\"它指定了字符串内容从数据的开始一直延伸到某个点\",{\"1\":{\"61\":1}}],[\"它描述了字符串包含数据的范围\",{\"1\":{\"61\":1}}],[\"它也能提供极高的性能\",{\"1\":{\"20\":1}}],[\"它遵循amqp\",{\"1\":{\"8\":1}}],[\"因为我们希望所有骑手都有平等的机会去抢单\",{\"1\":{\"599\":1}}],[\"因为任何新的领导者都会包含大多数节点已复制的所有提交条目\",{\"1\":{\"576\":1}}],[\"因为加锁就是为了保证互斥\",{\"1\":{\"563\":1}}],[\"因为数据中心通常分布在全球各地的主要城市和网络枢纽\",{\"1\":{\"534\":1}}],[\"因为现代计算机系统中通常有多个处理器或核心\",{\"1\":{\"514\":1}}],[\"因为接口的详细信息通常会跨越多行\",{\"1\":{\"508\":1}}],[\"因为您的目标是在相同的网段上实现隔离\",{\"1\":{\"473\":1}}],[\"因为你需要一个已经初始化好的通道\",{\"1\":{\"312\":1}}],[\"因为程序的控制流在遇到panic时已经被改变了\",{\"1\":{\"298\":1}}],[\"因为在panic之前\",{\"1\":{\"298\":1}}],[\"因为这样可以避免大量的数据复制\",{\"1\":{\"229\":1}}],[\"因为这样做的开销较小\",{\"1\":{\"228\":1}}],[\"因为它内置了相应的功能\",{\"1\":{\"460\":1}}],[\"因为它在panic之后声明\",{\"1\":{\"298\":2}}],[\"因为它们可以精确表示大数或有理数\",{\"1\":{\"239\":1}}],[\"因为它可以覆盖更广泛的场景\",{\"1\":{\"76\":1}}],[\"因为它避免了常见的多线程问题\",{\"1\":{\"20\":1}}],[\"因为\",{\"1\":{\"44\":1,\"312\":2}}],[\"因为所有操作都是由单个线程顺序执行的\",{\"1\":{\"21\":1}}],[\"因此浏览器对此是信任的\",{\"1\":{\"626\":1}}],[\"因此这里不再赘述\",{\"1\":{\"616\":1}}],[\"因此可能会被某些防火墙或网络设备阻挡\",{\"1\":{\"423\":1}}],[\"因此需要谨慎操作\",{\"1\":{\"413\":1}}],[\"因此它引用的data永远不会被回收\",{\"1\":{\"209\":1}}],[\"因此\",{\"1\":{\"4\":1,\"312\":1,\"315\":1,\"376\":1}}],[\"都会返回\",{\"1\":{\"380\":1}}],[\"都是用来分配内存的\",{\"1\":{\"193\":1}}],[\"都是在单个线程中执行的\",{\"1\":{\"20\":1}}],[\"都需要将事务中的所有消息写入磁盘\",{\"1\":{\"4\":1}}],[\"不重新编码\",{\"1\":{\"582\":1}}],[\"不对帧进行额外的同步\",{\"1\":{\"580\":1}}],[\"不剥夺\",{\"1\":{\"563\":1}}],[\"不释放获得的资源\",{\"1\":{\"563\":1}}],[\"不管响应是成功还是失败\",{\"1\":{\"512\":1}}],[\"不可能同时满足以下三个条件\",{\"1\":{\"512\":1}}],[\"不同的编码标准有不同的压缩效率和质量损失特性\",{\"1\":{\"432\":1}}],[\"不同的设备和播放器支持不同的容器格式和编码\",{\"1\":{\"432\":1}}],[\"不同的语言解析url函数得到的名称并不完全相同\",{\"1\":{\"73\":1}}],[\"不是同步机制\",{\"1\":{\"376\":1}}],[\"不是一个表示故障的错误\",{\"1\":{\"309\":1}}],[\"不能强行剥夺\",{\"1\":{\"563\":1}}],[\"不能直接限制上传文件的大小\",{\"1\":{\"319\":1}}],[\"不能处理并发连接或请求\",{\"1\":{\"19\":1}}],[\"不会等待从服务器确认已接收和应用了这些变更\",{\"1\":{\"438\":1}}],[\"不会执行任何defer语句\",{\"1\":{\"297\":1}}],[\"不会执行的情况\",{\"0\":{\"297\":1}}],[\"不会影响原始数据\",{\"1\":{\"230\":1}}],[\"不足的\",{\"1\":{\"61\":1}}],[\"不过\",{\"1\":{\"19\":1,\"313\":1,\"495\":1}}],[\"的格式\",{\"1\":{\"597\":1}}],[\"的输出\",{\"1\":{\"581\":2}}],[\"的分布式系统机制来实现的\",{\"1\":{\"577\":1}}],[\"的分布式消息传递系统完成\",{\"1\":{\"577\":1}}],[\"的通信机制来协调和同步状态\",{\"1\":{\"577\":1}}],[\"的消息传递机制相互通信\",{\"1\":{\"577\":1}}],[\"的消息时\",{\"1\":{\"572\":1}}],[\"的日志与自己的保持一致\",{\"1\":{\"574\":1}}],[\"的干扰\",{\"1\":{\"574\":1}}],[\"的机制\",{\"1\":{\"570\":1}}],[\"的示例步骤\",{\"1\":{\"472\":1}}],[\"的\",{\"1\":{\"430\":1}}],[\"的结构\",{\"1\":{\"429\":1}}],[\"的语法\",{\"0\":{\"389\":1}}],[\"的写法感到困惑\",{\"1\":{\"334\":1}}],[\"的工作方式\",{\"0\":{\"328\":1}}],[\"的性质\",{\"0\":{\"327\":1}}],[\"的逻辑是由go的http包内部实现的\",{\"1\":{\"319\":1}}],[\"的字段都被初始化为零值\",{\"1\":{\"314\":1}}],[\"的一个例子\",{\"1\":{\"314\":1}}],[\"的一个元素\",{\"1\":{\"143\":1}}],[\"的情况下\",{\"1\":{\"313\":1}}],[\"的零值\",{\"1\":{\"313\":1}}],[\"的零值内存并返回一个指向它的指针\",{\"1\":{\"312\":1}}],[\"的新项\",{\"1\":{\"313\":1}}],[\"的指针\",{\"1\":{\"312\":1,\"314\":2}}],[\"的首字节到最后一个字节的切片\",{\"1\":{\"300\":1}}],[\"的解释\",{\"0\":{\"300\":1}}],[\"的意思\",{\"0\":{\"299\":1}}],[\"的执行顺序\",{\"0\":{\"296\":1}}],[\"的顺序执行\",{\"1\":{\"294\":1,\"295\":1}}],[\"的核心\",{\"1\":{\"260\":1}}],[\"的基本指导\",{\"1\":{\"259\":1}}],[\"的主要组件\",{\"0\":{\"260\":1},\"1\":{\"259\":1}}],[\"的主要操作\",{\"1\":{\"19\":1}}],[\"的缩写\",{\"1\":{\"190\":1}}],[\"的元素\",{\"1\":{\"143\":1}}],[\"的作用\",{\"0\":{\"130\":1}}],[\"的具体含义\",{\"0\":{\"87\":1}}],[\"的默认入口键名是\",{\"1\":{\"80\":1}}],[\"的直接宾语\",{\"1\":{\"61\":1}}],[\"的前\",{\"1\":{\"44\":1}}],[\"的单个线程按顺序处理\",{\"1\":{\"21\":1}}],[\"的单个线程有效地监控多个网络连接\",{\"1\":{\"21\":1}}],[\"的单线程模型可能不是最优选择\",{\"1\":{\"22\":1}}],[\"的单线程模型并不妨碍它处理高并发连接和请求\",{\"1\":{\"22\":1}}],[\"的单线程模型\",{\"0\":{\"20\":1}}],[\"的单线程模型是一个关键的特性\",{\"1\":{\"19\":1}}],[\"的大部分操作\",{\"1\":{\"20\":1}}],[\"是一种网络架构\",{\"1\":{\"534\":1}}],[\"是一个典型的竞争条件问题\",{\"1\":{\"598\":1}}],[\"是一个用于在接收到特定信号时执行指定命令或脚本的\",{\"1\":{\"387\":1}}],[\"是一个特殊的错误值\",{\"1\":{\"306\":1}}],[\"是一个固定大小的数组\",{\"1\":{\"300\":1}}],[\"是一个开源的容器编排系统\",{\"1\":{\"259\":1}}],[\"是一个开源的消息队列系统\",{\"1\":{\"8\":1}}],[\"是一个分布式\",{\"1\":{\"176\":1}}],[\"是一个介词短语\",{\"1\":{\"61\":1}}],[\"是一个动名词\",{\"1\":{\"61\":1}}],[\"是否与请求的域名匹配\",{\"1\":{\"557\":1}}],[\"是否一个桥接接口\",{\"1\":{\"467\":1}}],[\"是否需要修改原始数据以及性能影响等因素\",{\"1\":{\"230\":1}}],[\"是无线局域网的名称\",{\"1\":{\"465\":1}}],[\"是定义了如何存储编码后的视频\",{\"1\":{\"429\":1}}],[\"是数字视频技术中两个基本但不同的概念\",{\"1\":{\"427\":1}}],[\"是常见的\",{\"1\":{\"313\":1}}],[\"是两个用于分配和初始化内存的内置函数\",{\"1\":{\"312\":1}}],[\"是循环读取的终止条件\",{\"1\":{\"309\":1}}],[\"是控制平面与其他组件交互的接口\",{\"1\":{\"260\":1}}],[\"是针对\",{\"1\":{\"190\":1}}],[\"是\",{\"1\":{\"61\":1,\"104\":1,\"190\":3,\"500\":2}}],[\"是在单个线程中顺序执行的\",{\"1\":{\"19\":1}}],[\"是指向\",{\"1\":{\"314\":1}}],[\"是指\",{\"1\":{\"19\":1}}],[\"rule\",{\"1\":{\"468\":6,\"485\":1}}],[\"run\",{\"0\":{\"544\":1},\"1\":{\"217\":1,\"231\":8,\"368\":1}}],[\"run运行gitlab\",{\"0\":{\"108\":1}}],[\"runner\",{\"0\":{\"104\":1,\"106\":1,\"111\":1},\"1\":{\"104\":1}}],[\"rtmp基于tcp\",{\"1\":{\"423\":1}}],[\"rtmp是由adobe开发的一种设计用于高性能传输音频\",{\"1\":{\"423\":1}}],[\"rtmp\",{\"0\":{\"423\":1},\"1\":{\"422\":1,\"423\":2}}],[\"r表示httpfunc的request\",{\"1\":{\"319\":1}}],[\"rpc\",{\"1\":{\"243\":1}}],[\"r\",{\"0\":{\"319\":1},\"1\":{\"118\":5,\"298\":3,\"319\":1,\"582\":2}}],[\"router\",{\"1\":{\"381\":2}}],[\"root\",{\"1\":{\"76\":1}}],[\"rotate\",{\"1\":{\"47\":1}}],[\"raocketmq的流式计算\",{\"0\":{\"566\":1}}],[\"rand\",{\"1\":{\"505\":1}}],[\"range只循环一次\",{\"1\":{\"318\":1}}],[\"range\",{\"0\":{\"318\":1},\"1\":{\"167\":1,\"264\":1,\"318\":1}}],[\"radio0\",{\"1\":{\"484\":1}}],[\"radius定义模糊的程度\",{\"1\":{\"47\":1}}],[\"radius\",{\"1\":{\"47\":1}}],[\"ram\",{\"1\":{\"274\":1}}],[\"rat\",{\"1\":{\"239\":1}}],[\"raft一致性\",{\"0\":{\"576\":1}}],[\"raft\",{\"0\":{\"570\":1},\"1\":{\"176\":1,\"570\":4,\"571\":1,\"574\":1,\"575\":1,\"576\":3}}],[\"rabbitmq消息的可靠性保证\",{\"0\":{\"583\":1}}],[\"rabbitmq消息可靠性保证\",{\"0\":{\"564\":1}}],[\"rabbitmq延迟队列的原理\",{\"0\":{\"579\":1}}],[\"rabbitmq延迟队列\",{\"0\":{\"578\":1}}],[\"rabbitmq集群简介\",{\"0\":{\"588\":1}}],[\"rabbitmq集群\",{\"0\":{\"577\":1}}],[\"rabbitmq集群搭建\",{\"0\":{\"535\":1}}],[\"rabbitmq事务\",{\"0\":{\"565\":1}}],[\"rabbitmq事务基本介绍和go的使用示例\",{\"0\":{\"1\":1}}],[\"rabbitmq3\",{\"0\":{\"549\":1}}],[\"rabbitmq2\",{\"0\":{\"548\":1}}],[\"rabbitmq1\",{\"0\":{\"547\":1}}],[\"rabbitmq可用于设计分布式系统的一致性\",{\"0\":{\"12\":1}}],[\"rabbitmq的功能和解决的问题包括\",{\"1\":{\"8\":1}}],[\"rabbitmq的使用场景\",{\"0\":{\"8\":1}}],[\"rabbitmq能够解决多种在应用程序和系统之间异步通信\",{\"1\":{\"8\":1}}],[\"rabbitmq\",{\"0\":{\"2\":1,\"540\":1,\"544\":1,\"591\":1},\"1\":{\"1\":1,\"2\":1,\"4\":1,\"8\":1,\"577\":3,\"589\":4}}],[\"referrer\",{\"0\":{\"523\":1}}],[\"referer\",{\"0\":{\"519\":1,\"524\":1}}],[\"refresh\",{\"1\":{\"366\":1}}],[\"reject\",{\"1\":{\"468\":1,\"476\":1,\"485\":2}}],[\"relay\",{\"1\":{\"433\":1,\"435\":1}}],[\"relaunch\",{\"1\":{\"381\":2}}],[\"relative\",{\"1\":{\"266\":2}}],[\"relative则生成到当前目录i\",{\"1\":{\"266\":1}}],[\"replication\",{\"1\":{\"438\":3}}],[\"replace\",{\"1\":{\"79\":3}}],[\"repeatable\",{\"0\":{\"353\":1}}],[\"retention\",{\"0\":{\"345\":1}}],[\"returns\",{\"1\":{\"243\":1}}],[\"return\",{\"1\":{\"79\":2,\"118\":3,\"145\":1,\"191\":4,\"217\":1,\"231\":2,\"244\":3,\"245\":1,\"264\":1,\"272\":5,\"299\":1,\"368\":1,\"380\":2}}],[\"returning\",{\"1\":{\"61\":3}}],[\"removenode\",{\"1\":{\"272\":2}}],[\"recover只有在defer函数中调用时才有效\",{\"1\":{\"298\":1}}],[\"recovered\",{\"1\":{\"298\":2}}],[\"recover\",{\"1\":{\"297\":1,\"298\":1}}],[\"received\",{\"1\":{\"245\":1,\"271\":1}}],[\"receive\",{\"1\":{\"244\":1,\"245\":1}}],[\"receiver\",{\"1\":{\"227\":2}}],[\"recvstr\",{\"1\":{\"299\":3,\"303\":1}}],[\"recv\",{\"1\":{\"244\":1,\"245\":1}}],[\"requests==2\",{\"1\":{\"496\":1}}],[\"request\",{\"1\":{\"217\":3}}],[\"requirements\",{\"1\":{\"496\":1}}],[\"requirements记录依赖\",{\"0\":{\"495\":1}}],[\"require\",{\"1\":{\"79\":2,\"491\":1}}],[\"registernotificationserviceserver\",{\"1\":{\"244\":1}}],[\"register\",{\"1\":{\"118\":1,\"191\":1}}],[\"registrar\",{\"1\":{\"118\":1}}],[\"redirectto\",{\"1\":{\"381\":2}}],[\"redis集群\",{\"0\":{\"50\":1}}],[\"redis\",{\"0\":{\"20\":1,\"177\":1,\"178\":1},\"1\":{\"19\":3,\"20\":4,\"21\":5,\"22\":4,\"51\":1}}],[\"redis单线程的一点理解\",{\"0\":{\"19\":1}}],[\"reduce\",{\"1\":{\"79\":1}}],[\"restful\",{\"1\":{\"567\":1}}],[\"restart\",{\"1\":{\"464\":1,\"468\":1,\"486\":2}}],[\"restcontroller的简单错误\",{\"1\":{\"361\":1}}],[\"restcontroller\",{\"0\":{\"361\":1}}],[\"resetcontroller定义在springboot中的spring\",{\"1\":{\"363\":1}}],[\"response\",{\"1\":{\"217\":3}}],[\"resp\",{\"1\":{\"167\":2}}],[\"resolvectl\",{\"1\":{\"392\":1}}],[\"resolver\",{\"0\":{\"119\":1}}],[\"resolve\",{\"0\":{\"361\":1},\"1\":{\"79\":2,\"361\":1,\"392\":2}}],[\"results\",{\"1\":{\"79\":5}}],[\"real\",{\"0\":{\"423\":1}}],[\"realoc\",{\"0\":{\"31\":1,\"34\":1},\"1\":{\"29\":1}}],[\"readobjectdata\",{\"1\":{\"335\":1}}],[\"read\",{\"1\":{\"299\":2,\"300\":3,\"301\":1,\"307\":1,\"308\":1}}],[\"reading\",{\"1\":{\"271\":1}}],[\"readstring\",{\"1\":{\"271\":1}}],[\"reader\",{\"1\":{\"271\":2,\"299\":2,\"300\":1,\"307\":1,\"308\":1}}],[\"readdirsync\",{\"1\":{\"79\":1}}],[\"reached\",{\"1\":{\"245\":1}}],[\"幂等性设计\",{\"0\":{\"17\":1}}],[\"53\",{\"1\":{\"476\":2}}],[\"51\",{\"1\":{\"458\":2}}],[\"5秒后停止发送消息\",{\"1\":{\"245\":1}}],[\"50051\",{\"1\":{\"244\":1,\"245\":1}}],[\"5px\",{\"1\":{\"48\":1}}],[\"5\",{\"0\":{\"17\":1,\"139\":1,\"399\":1,\"405\":1,\"451\":1,\"464\":1,\"486\":1,\"561\":1,\"575\":1},\"1\":{\"118\":1,\"165\":1,\"167\":1,\"245\":1}}],[\"404\",{\"1\":{\"635\":1}}],[\"43亿\",{\"1\":{\"37\":1}}],[\"4\",{\"0\":{\"16\":1,\"138\":1,\"398\":1,\"404\":1,\"437\":1,\"450\":1,\"463\":1,\"477\":1,\"485\":1,\"539\":1,\"560\":1,\"574\":1},\"1\":{\"37\":1}}],[\"补偿事务\",{\"0\":{\"15\":1}}],[\"30fps\",{\"1\":{\"582\":1}}],[\"30\",{\"1\":{\"191\":1,\"500\":1,\"582\":2}}],[\"34\",{\"1\":{\"142\":1,\"143\":1,\"144\":1,\"145\":1}}],[\"32位机器字长为4字节\",{\"1\":{\"37\":1}}],[\"3\",{\"0\":{\"15\":1,\"115\":1,\"124\":1,\"137\":1,\"397\":1,\"403\":1,\"436\":1,\"449\":1,\"462\":1,\"475\":1,\"484\":1,\"493\":1,\"538\":1,\"559\":1,\"573\":1},\"1\":{\"272\":1,\"463\":2,\"470\":2,\"483\":1,\"496\":1}}],[\"2>\",{\"1\":{\"608\":1,\"609\":1}}],[\"24为适合你网络环境的ip地址和子网掩码\",{\"1\":{\"479\":1}}],[\"24为内网ip范围\",{\"1\":{\"476\":1}}],[\"24是桥接接口br3的ip地址和子网掩码\",{\"1\":{\"463\":1}}],[\"24\",{\"1\":{\"463\":1,\"476\":1,\"479\":1,\"480\":1}}],[\"265\",{\"1\":{\"428\":1}}],[\"264是视频数据的压缩标准\",{\"1\":{\"431\":1}}],[\"264编码的视频数据流\",{\"1\":{\"431\":1}}],[\"264的关系\",{\"1\":{\"431\":1}}],[\"264\",{\"1\":{\"428\":1}}],[\"20\",{\"1\":{\"191\":1,\"319\":1}}],[\"20000\",{\"1\":{\"299\":1}}],[\"200\",{\"1\":{\"48\":1}}],[\"2379\",{\"1\":{\"165\":1}}],[\"232\",{\"1\":{\"37\":1}}],[\"22\",{\"1\":{\"142\":1,\"143\":1,\"144\":1,\"145\":1}}],[\"255\",{\"1\":{\"470\":3,\"483\":3}}],[\"25\",{\"1\":{\"142\":1,\"143\":1,\"144\":1,\"145\":1,\"496\":1}}],[\"295\",{\"1\":{\"37\":1}}],[\"294\",{\"1\":{\"37\":1}}],[\"2\",{\"0\":{\"14\":1,\"114\":1,\"122\":1,\"136\":1,\"396\":1,\"402\":1,\"415\":1,\"435\":1,\"448\":1,\"461\":1,\"474\":1,\"483\":1,\"492\":1,\"537\":1,\"554\":1,\"572\":1,\"600\":1},\"1\":{\"217\":1,\"251\":2,\"272\":1,\"318\":1,\"479\":2,\"480\":1,\"581\":1}}],[\"168\",{\"1\":{\"458\":3,\"463\":2,\"470\":1,\"476\":2,\"479\":2,\"480\":1,\"483\":1}}],[\"16位和32位为4字节\",{\"1\":{\"39\":1}}],[\"16位环境下\",{\"1\":{\"37\":1}}],[\"192\",{\"1\":{\"458\":2,\"463\":2,\"470\":1,\"476\":2,\"479\":1,\"480\":1,\"483\":1}}],[\"1024\",{\"1\":{\"626\":1}}],[\"108\",{\"1\":{\"222\":2}}],[\"101\",{\"1\":{\"222\":1}}],[\"104\",{\"1\":{\"222\":1}}],[\"10\",{\"1\":{\"191\":1,\"244\":1,\"319\":1,\"458\":2}}],[\"10000时\",{\"1\":{\"458\":1}}],[\"1000\",{\"1\":{\"209\":1}}],[\"100\",{\"1\":{\"48\":1,\"239\":1,\"458\":2,\"461\":2,\"462\":3,\"464\":1}}],[\"111\",{\"1\":{\"222\":1}}],[\"11\",{\"1\":{\"142\":1,\"143\":1,\"144\":1,\"145\":1,\"458\":1}}],[\"12345\",{\"1\":{\"458\":1}}],[\"127\",{\"1\":{\"299\":1}}],[\"128\",{\"0\":{\"301\":1},\"1\":{\"299\":1,\"300\":3,\"301\":5}}],[\"12\",{\"1\":{\"142\":1,\"143\":1,\"144\":1,\"145\":1}}],[\"1\",{\"0\":{\"13\":1,\"113\":1,\"120\":1,\"135\":1,\"395\":1,\"401\":1,\"414\":1,\"434\":1,\"447\":1,\"460\":1,\"473\":1,\"482\":1,\"491\":1,\"536\":1,\"553\":1,\"571\":1,\"599\":1},\"1\":{\"37\":2,\"142\":2,\"143\":2,\"144\":3,\"145\":4,\"217\":1,\"243\":2,\"244\":1,\"251\":10,\"271\":1,\"272\":2,\"299\":1,\"312\":2,\"458\":5,\"463\":2,\"468\":5,\"470\":1,\"476\":2,\"479\":2,\"480\":1,\"483\":1,\"496\":1,\"505\":1,\"581\":1,\"608\":1,\"609\":1}}],[\"在原文中\",{\"1\":{\"618\":1}}],[\"在数据库中为订单设计一个状态字段\",{\"1\":{\"601\":1}}],[\"在抢单api接口中\",{\"1\":{\"600\":1}}],[\"在使用消息队列\",{\"1\":{\"598\":1}}],[\"在内存中\",{\"1\":{\"597\":1}}],[\"在普通集群模式下\",{\"1\":{\"589\":1}}],[\"在大多数情况下\",{\"1\":{\"584\":1}}],[\"在其他情况下\",{\"1\":{\"582\":1}}],[\"在其中列出项目所需的所有包及其版本\",{\"1\":{\"496\":1}}],[\"在日志复制过程中\",{\"1\":{\"574\":1,\"576\":1}}],[\"在一定时间内没有收到来自\",{\"1\":{\"572\":1}}],[\"在一个分布式系统中\",{\"1\":{\"512\":1}}],[\"在未使用之前\",{\"1\":{\"563\":1}}],[\"在分布式系统中\",{\"1\":{\"512\":1}}],[\"在python中\",{\"1\":{\"495\":1}}],[\"在php中调用并运行另一个php脚本的常见方法有几种\",{\"1\":{\"490\":1}}],[\"在系统中增加一个新的桥接接口\",{\"1\":{\"478\":1}}],[\"在同一个物理接口上创建一个虚拟接口\",{\"1\":{\"473\":1}}],[\"在配置网络和防火墙规则时\",{\"1\":{\"471\":1}}],[\"在openwrt系统上创建一个名为br3的新桥接接口并在其上启动一个访客网络涉及几个步骤\",{\"1\":{\"481\":1}}],[\"在openwrt中添加网络接口\",{\"1\":{\"470\":1}}],[\"在openwrt等系统中\",{\"1\":{\"467\":1}}],[\"在openwrt上\",{\"1\":{\"460\":1,\"464\":1,\"466\":1}}],[\"在obs中\",{\"1\":{\"418\":1}}],[\"在默认配置下\",{\"1\":{\"438\":1}}],[\"在服务器上配置dns服务\",{\"1\":{\"393\":1}}],[\"在增加或比较并交换等复合操作中\",{\"1\":{\"376\":1}}],[\"在多线程程序中\",{\"1\":{\"375\":1}}],[\"在多次迭代中被逐渐读取并处理\",{\"1\":{\"301\":1}}],[\"在java和c\",{\"1\":{\"374\":1}}],[\"在要执行异步操作的方法上添加\",{\"1\":{\"368\":1}}],[\"在右边build\",{\"1\":{\"366\":1}}],[\"在网上很难找到合理解释\",{\"1\":{\"334\":1}}],[\"在网络编程中的使用\",{\"0\":{\"307\":1}}],[\"在某些硬件相关的编程中\",{\"1\":{\"375\":1}}],[\"在某些泛型编程场景中\",{\"1\":{\"313\":1}}],[\"在某些情况下\",{\"1\":{\"305\":1,\"582\":1}}],[\"在上面的第二种情况中\",{\"1\":{\"312\":1}}],[\"在很多场合\",{\"1\":{\"309\":1}}],[\"在很多情况下\",{\"1\":{\"80\":1}}],[\"在你的\",{\"1\":{\"307\":1}}],[\"在处理通道的情况下\",{\"1\":{\"312\":1}}],[\"在处理网络连接时\",{\"1\":{\"307\":1}}],[\"在处理用户输入的路径或者从操作系统获取的路径更合适\",{\"1\":{\"225\":1}}],[\"在高负载或网络延迟的情况下\",{\"1\":{\"439\":1}}],[\"在高性能或实时性要求较高的应用中\",{\"1\":{\"305\":1}}],[\"在高流量事件中\",{\"1\":{\"10\":1}}],[\"在每次循环迭代中\",{\"1\":{\"301\":1}}],[\"在这种模式下\",{\"1\":{\"589\":1}}],[\"在这种情况下\",{\"1\":{\"156\":1,\"251\":1,\"313\":1}}],[\"在这里\",{\"1\":{\"582\":1}}],[\"在这个系统中\",{\"1\":{\"577\":1}}],[\"在这个例案中是10mb\",{\"1\":{\"319\":1}}],[\"在这个例子中\",{\"1\":{\"296\":1,\"314\":1,\"431\":1,\"476\":1}}],[\"在这一点上网上多数博文长篇阔论\",{\"1\":{\"528\":1}}],[\"在现代计算机系统中\",{\"1\":{\"274\":1}}],[\"在发生错误或异常情况\",{\"1\":{\"251\":1}}],[\"在math\",{\"1\":{\"239\":1}}],[\"在实际开发中\",{\"1\":{\"230\":1}}],[\"在底层\",{\"1\":{\"221\":1}}],[\"在go语言中\",{\"1\":{\"295\":1}}],[\"在go语言中存储金额时\",{\"1\":{\"239\":1}}],[\"在go语言中值接收者和指针接收者有一些区别\",{\"1\":{\"227\":1}}],[\"在go语言\",{\"1\":{\"159\":1}}],[\"在已排序序列中从后向前扫描\",{\"1\":{\"144\":1}}],[\"在您的本地base仓库中\",{\"1\":{\"114\":1}}],[\"在html的标签中设置content\",{\"1\":{\"76\":1}}],[\"在此记录\",{\"1\":{\"73\":1}}],[\"在\",{\"0\":{\"114\":1,\"261\":1,\"524\":1},\"1\":{\"21\":1,\"155\":1,\"156\":1,\"193\":1,\"251\":1,\"300\":1,\"306\":1,\"310\":2,\"311\":1,\"312\":1,\"313\":1,\"315\":1,\"368\":2,\"387\":1,\"413\":1,\"484\":1}}],[\"在微服务架构中\",{\"1\":{\"10\":1}}],[\"在事务模式下\",{\"1\":{\"3\":1}}],[\"如rabbitmq\",{\"1\":{\"598\":1}}],[\"如文件\",{\"1\":{\"597\":1}}],[\"如重新编码\",{\"1\":{\"582\":1}}],[\"如ddos攻击缓解\",{\"1\":{\"534\":1}}],[\"如内容预取\",{\"1\":{\"534\":1}}],[\"如需要\",{\"1\":{\"480\":1}}],[\"如主网络\",{\"1\":{\"471\":1}}],[\"如主服务器突然崩溃\",{\"1\":{\"438\":1}}],[\"如何产生\",{\"0\":{\"617\":1}}],[\"如何保证原子性\",{\"0\":{\"604\":1}}],[\"如何生成服务器证书\",{\"0\":{\"532\":1}}],[\"如何创建访客网络接口\",{\"0\":{\"470\":1}}],[\"如何使用\",{\"0\":{\"366\":1,\"542\":1}}],[\"如设备a或设备b\",{\"1\":{\"455\":1}}],[\"如aac编码的音频\",{\"1\":{\"431\":1}}],[\"如字幕\",{\"1\":{\"429\":1,\"430\":1}}],[\"如实时转码\",{\"1\":{\"419\":1}}],[\"如ffmpeg\",{\"1\":{\"417\":1}}],[\"如obs\",{\"0\":{\"418\":1},\"1\":{\"417\":1}}],[\"如vpn\",{\"1\":{\"393\":1}}],[\"如局域网\",{\"1\":{\"393\":1}}],[\"如互联网\",{\"1\":{\"393\":1}}],[\"如图像\",{\"1\":{\"418\":1}}],[\"如图\",{\"1\":{\"357\":1}}],[\"如图片\",{\"1\":{\"46\":1}}],[\"如下所示\",{\"1\":{\"315\":1}}],[\"如通过\",{\"1\":{\"313\":1}}],[\"如结构体\",{\"1\":{\"313\":1}}],[\"如在某些系统中的tcp\",{\"1\":{\"305\":1}}],[\"如网络故障\",{\"1\":{\"251\":1}}],[\"如int64\",{\"1\":{\"239\":1}}],[\"如big\",{\"1\":{\"239\":1}}],[\"如\",{\"1\":{\"194\":2,\"251\":1,\"311\":1,\"469\":1,\"470\":1,\"471\":1}}],[\"如违规报告\",{\"1\":{\"76\":1}}],[\"如脚本\",{\"1\":{\"76\":1}}],[\"如数据竞争和锁\",{\"1\":{\"20\":1}}],[\"如读取\",{\"1\":{\"19\":1}}],[\"如秒杀活动\",{\"1\":{\"10\":1}}],[\"如发送电子邮件\",{\"1\":{\"10\":1}}],[\"如果不匹配\",{\"1\":{\"601\":1}}],[\"如果版本号匹配\",{\"1\":{\"601\":1}}],[\"如果消息无法路由到任何队列\",{\"1\":{\"585\":1}}],[\"如果消息未被确认\",{\"1\":{\"584\":1}}],[\"如果消息成功发送\",{\"1\":{\"3\":1}}],[\"如果目的是直接修正源视频中的时间戳不连续或不规则问题\",{\"1\":{\"582\":1}}],[\"如果持有队列主副本的节点发生故障\",{\"1\":{\"589\":1}}],[\"如果持有队列主副本的节点失败\",{\"1\":{\"577\":1}}],[\"如果持有锁的进程崩溃或失去连接\",{\"1\":{\"170\":1}}],[\"如果请求的任期号小于节点的当前任期号\",{\"1\":{\"576\":1}}],[\"如果请求体的内容\",{\"1\":{\"319\":1}}],[\"如果客户端连接到的是\",{\"1\":{\"575\":1}}],[\"如果客户端关闭了连接\",{\"1\":{\"307\":1}}],[\"如果发现不匹配\",{\"1\":{\"576\":1}}],[\"如果发现不一致\",{\"1\":{\"574\":1}}],[\"如果发送缓冲区不是满的\",{\"1\":{\"305\":1}}],[\"如果\",{\"1\":{\"572\":1}}],[\"如果申请不到\",{\"1\":{\"563\":1}}],[\"如果多个处理器同时对同一内存位置进行读写操作\",{\"1\":{\"514\":1}}],[\"如果需要从其他节点访问队列中的消息\",{\"1\":{\"589\":1}}],[\"如果需要的话\",{\"1\":{\"483\":1}}],[\"如果需要创建\",{\"1\":{\"482\":1}}],[\"如果需要\",{\"1\":{\"476\":1,\"479\":1}}],[\"如果可用\",{\"0\":{\"480\":1},\"1\":{\"475\":1}}],[\"如果您的设备允许\",{\"1\":{\"473\":1}}],[\"如果您通过web界面\",{\"1\":{\"471\":1}}],[\"如果您希望使用这个特定的名称\",{\"1\":{\"470\":1}}],[\"如果适用\",{\"1\":{\"470\":1}}],[\"如果没有特定的路由规则来禁止或允许流量\",{\"1\":{\"467\":1}}],[\"如果尚未安装\",{\"1\":{\"460\":1}}],[\"如果网络延迟较高\",{\"1\":{\"303\":1}}],[\"如果有更多的数据\",{\"1\":{\"301\":1}}],[\"如果从\",{\"1\":{\"301\":1}}],[\"如果panic发生在defer之后\",{\"1\":{\"298\":1}}],[\"如果defer后跟随的函数调用本身发生panic\",{\"1\":{\"297\":1}}],[\"如果一个节点在当前的\",{\"1\":{\"572\":1}}],[\"如果一个协程发生panic\",{\"1\":{\"297\":1}}],[\"如果一个函数中有多个defer语句\",{\"1\":{\"295\":1}}],[\"如果go程序因为一个未被捕获的panic而异常退出\",{\"1\":{\"297\":1}}],[\"如果超过范围\",{\"1\":{\"272\":1}}],[\"如果是可寻址的\",{\"1\":{\"229\":1}}],[\"如果它们的顺序错误就把它们交换过来\",{\"1\":{\"142\":1}}],[\"如果你只想查看带有br前缀的桥接接口的信息\",{\"1\":{\"506\":1}}],[\"如果你需要在后台运行一个独立的php脚本\",{\"1\":{\"492\":1}}],[\"如果你需要另一个脚本中的代码直接在当前脚本中执行\",{\"1\":{\"491\":1}}],[\"如果你不熟悉命令行操作\",{\"1\":{\"487\":1}}],[\"如果你的站点存在着\",{\"1\":{\"617\":1}}],[\"如果你的系统中ip命令可用\",{\"1\":{\"509\":1}}],[\"如果你的系统中安装有bridge\",{\"1\":{\"480\":1}}],[\"如果你的入口点是单一的且未指定输出文件名\",{\"1\":{\"80\":1}}],[\"如果你想要看到这些接口的详细信息\",{\"1\":{\"508\":1}}],[\"如果你想在eth0接口上创建vlan\",{\"1\":{\"462\":1}}],[\"如果你想将一个或多个物理接口\",{\"1\":{\"461\":1}}],[\"如果你尝试通过\",{\"1\":{\"312\":1}}],[\"如果你使用\",{\"1\":{\"312\":1}}],[\"如果你在没有发生panic的正常执行路径中调用recover\",{\"1\":{\"298\":1}}],[\"如果你追求高吞吐量\",{\"1\":{\"4\":1}}],[\"如果在panic发生之后再声明defer\",{\"1\":{\"298\":1}}],[\"如果在指定的超时时间内没有数据传输\",{\"1\":{\"251\":1}}],[\"如果在发送消息时遇到任何问题\",{\"1\":{\"3\":1}}],[\"如果在事务中的任何点发生错误\",{\"1\":{\"1\":1}}],[\"高级配置\",{\"1\":{\"393\":1}}],[\"高级消息队列协议\",{\"1\":{\"8\":1}}],[\"高效性\",{\"1\":{\"190\":1}}],[\"高效的数据结构和算法\",{\"1\":{\"20\":1}}],[\"高可用和集群\",{\"1\":{\"9\":1}}],[\"发现这个端口号与设备a的通信会话匹配\",{\"1\":{\"458\":1}}],[\"发生panic且未恢复\",{\"1\":{\"297\":1}}],[\"发送或接收数据\",{\"1\":{\"312\":1}}],[\"发送数据包到198\",{\"1\":{\"458\":1}}],[\"发送数据包使用的端口号\",{\"1\":{\"456\":1}}],[\"发送数据包的设备的私有ip地址\",{\"1\":{\"456\":1}}],[\"发送数据\",{\"1\":{\"299\":1}}],[\"发送请求到服务器\",{\"1\":{\"245\":2}}],[\"发送post请求\",{\"1\":{\"217\":1}}],[\"发送消息\",{\"1\":{\"3\":1}}],[\"发布订单消息\",{\"1\":{\"600\":1}}],[\"发布订单到所有骑手\",{\"0\":{\"600\":1}}],[\"发布\",{\"1\":{\"9\":1}}],[\"支持多种集群模式\",{\"1\":{\"589\":1}}],[\"支持从简单的视频点播到高质量的直播\",{\"1\":{\"425\":1}}],[\"支持动态比特率适配\",{\"1\":{\"424\":1}}],[\"支持事务\",{\"1\":{\"176\":1}}],[\"支持部署为高可用性和集群模式\",{\"1\":{\"9\":1}}],[\"支持点对点\",{\"1\":{\"9\":1}}],[\"支持将消息存储到磁盘\",{\"1\":{\"9\":1}}],[\"各个微服务或系统组件可以通过消息队列进行通信\",{\"1\":{\"9\":1}}],[\"允许跨节点的进程间通信就像是同一个节点上的进程间通信一样\",{\"1\":{\"577\":1}}],[\"允许访客网络访问dhcp和dns\",{\"1\":{\"476\":1}}],[\"允许访客网络访问外部互联网\",{\"1\":{\"476\":1}}],[\"允许访客接入网络而不访问内网资源\",{\"1\":{\"472\":1}}],[\"允许高质量的流媒体通过互联网传输\",{\"1\":{\"425\":1}}],[\"允许您对元素\",{\"1\":{\"46\":1}}],[\"允许应用将耗时的任务委托给后台进程异步处理\",{\"1\":{\"9\":1}}],[\"允许生产者保证消息的发布过程中的原子性\",{\"1\":{\"1\":1}}],[\"异步处理执行结果\",{\"0\":{\"371\":1}}],[\"异步处理任务\",{\"1\":{\"10\":1}}],[\"异步处理\",{\"1\":{\"9\":1}}],[\"功能将合成的视频流直播出去\",{\"1\":{\"418\":1}}],[\"功能来管理这种结构\",{\"1\":{\"112\":1}}],[\"功能\",{\"0\":{\"9\":1}}],[\"标准\",{\"1\":{\"8\":1}}],[\"标记为事务模式\",{\"1\":{\"2\":1}}],[\"确定后重启idea报错消失\",{\"1\":{\"364\":1}}],[\"确认机制\",{\"1\":{\"584\":1}}],[\"确认和删除\",{\"1\":{\"577\":1}}],[\"确认和重试机制\",{\"0\":{\"16\":1}}],[\"确认收到\",{\"1\":{\"573\":1}}],[\"确认模式\",{\"0\":{\"5\":1}}],[\"确保只有第一个成功的骑手能抢到订单\",{\"1\":{\"600\":1}}],[\"确保只有一个骑手能成功抢单\",{\"1\":{\"598\":1}}],[\"确保交换机到队列的消息不会因为服务器重启而丢失\",{\"1\":{\"587\":1}}],[\"确保队列是持久化的\",{\"1\":{\"585\":1}}],[\"确保rabbitmq中消息的可靠性涉及到多个环节\",{\"1\":{\"583\":1}}],[\"确保所有副本都有相同的消息顺序和内容\",{\"1\":{\"577\":1}}],[\"确保所有在事务内发送的消息都被确认\",{\"1\":{\"2\":1}}],[\"确保了领导者的唯一性\",{\"1\":{\"576\":1}}],[\"确保了分布式系统中数据的一致性和系统的高可用性\",{\"1\":{\"575\":1}}],[\"确保了myservice\",{\"1\":{\"233\":1}}],[\"确保数据的一致性和安全性\",{\"1\":{\"574\":1}}],[\"确保数据一致性\",{\"1\":{\"10\":1}}],[\"确保每个证书都由上一级证书签发\",{\"1\":{\"559\":1}}],[\"确保每次访问变量时都直接从内存中读取\",{\"1\":{\"374\":1}}],[\"确保证书当前是有效的\",{\"1\":{\"555\":1}}],[\"确保各个cpu核心的缓存中存储的相同内存地址的数据是一致的问题\",{\"1\":{\"514\":1}}],[\"确保br3接口尚未创建\",{\"1\":{\"482\":1}}],[\"确保访客设备能够从同一个dhcp服务器获取ip地址\",{\"1\":{\"474\":1}}],[\"确保访客网络的隔离\",{\"1\":{\"470\":1}}],[\"确保使用正确的接口名称\",{\"1\":{\"471\":1}}],[\"确保无线客户端连接到这个ssid时\",{\"1\":{\"466\":1}}],[\"确保linux内核支持ip转发\",{\"1\":{\"393\":1}}],[\"确保操作完成的意义\",{\"0\":{\"378\":1}}],[\"确保在应用任何改动之前备份相关配置文件\",{\"1\":{\"468\":1}}],[\"确保在volatile变量读写操作之前的所有操作都在内存中完成\",{\"1\":{\"375\":1}}],[\"确保在网络分区或节点故障的情况下\",{\"1\":{\"170\":1}}],[\"确保结构体实现接口\",{\"0\":{\"233\":1}}],[\"确保锁的分配是公平的\",{\"1\":{\"170\":1}}],[\"确保任何时候只有一个客户端可以持有锁\",{\"1\":{\"170\":1}}],[\"确保编译器在编译时能够验证代码依赖的库版本\",{\"1\":{\"155\":1}}],[\"确保即使在系统故障的情况下也不会丢失消息\",{\"1\":{\"9\":1}}],[\"提前获取和缓存可能被请求的内容\",{\"1\":{\"534\":1}}],[\"提供的一种高可用性方案\",{\"1\":{\"589\":1}}],[\"提供域名解析服务\",{\"1\":{\"393\":1}}],[\"提供强一致性保证和较高的可用性\",{\"1\":{\"176\":1}}],[\"提供了灵活的选项来处理时间戳问题\",{\"1\":{\"582\":1}}],[\"提供了多种方式来处理和修正视频文件中的时间戳问题\",{\"1\":{\"580\":1}}],[\"提供了图形化的配置选项\",{\"1\":{\"487\":1}}],[\"提供了更方便的方式来初始化变量\",{\"1\":{\"313\":1}}],[\"提供了\",{\"1\":{\"190\":1}}],[\"提供了消息的事务机制\",{\"1\":{\"9\":1}}],[\"提供了基本的事务机制\",{\"1\":{\"1\":1}}],[\"提高用户体验\",{\"1\":{\"534\":1}}],[\"提高性能\",{\"1\":{\"230\":1}}],[\"提高效率\",{\"1\":{\"229\":1}}],[\"提高扩展性和灵活性\",{\"0\":{\"136\":1}}],[\"提高系统的可靠性和可用性\",{\"1\":{\"9\":1}}],[\"提高系统处理能力\",{\"1\":{\"9\":1}}],[\"提交数据\",{\"1\":{\"618\":1}}],[\"提交当前的版本号\",{\"1\":{\"601\":1}}],[\"提交与应用日志条目\",{\"1\":{\"576\":1}}],[\"提交这些条目\",{\"1\":{\"573\":1}}],[\"提交条目\",{\"1\":{\"573\":1}}],[\"提交更改\",{\"1\":{\"114\":1}}],[\"提交或回滚\",{\"1\":{\"3\":1}}],[\"通知进程某个事件已经发生\",{\"1\":{\"388\":1}}],[\"通常情况下\",{\"1\":{\"626\":1}}],[\"通常处于被动接收状态\",{\"1\":{\"571\":1}}],[\"通常你会直接在web界面\",{\"1\":{\"482\":1}}],[\"通常是字节\",{\"1\":{\"597\":1}}],[\"通常是通过麦克风捕获\",{\"1\":{\"418\":1}}],[\"通常是使用摄像头捕获的\",{\"1\":{\"418\":1}}],[\"通常是更好的选择\",{\"1\":{\"376\":1}}],[\"通常用于区分不同的网络\",{\"1\":{\"471\":1}}],[\"通常用于重启进程\",{\"1\":{\"388\":1}}],[\"通常用于确保正在使用的\",{\"1\":{\"155\":1}}],[\"通常需要以下几个步骤\",{\"1\":{\"368\":1}}],[\"通常推荐使用\",{\"1\":{\"312\":1}}],[\"通常并不是一个真正的\",{\"1\":{\"306\":1}}],[\"通常在处理文件读取\",{\"1\":{\"306\":1}}],[\"通常简称为\",{\"1\":{\"259\":1}}],[\"通常会发生内存的重新分配\",{\"1\":{\"221\":1}}],[\"通常不作为高性能数据缓存使用\",{\"1\":{\"176\":1}}],[\"通常不会出现资源抢占问题\",{\"1\":{\"21\":1}}],[\"通过运行脚本代码\",{\"1\":{\"617\":1}}],[\"通过设置持久化消息和持久化队列\",{\"1\":{\"587\":1}}],[\"通过设置消息的delivery\",{\"1\":{\"585\":1}}],[\"通过使用\",{\"1\":{\"582\":1}}],[\"通过使用git的子模块\",{\"1\":{\"112\":1}}],[\"通过在必要时重复或丢弃帧来确保每个输出帧都有连续的时间戳\",{\"1\":{\"581\":1}}],[\"通过在defer函数中恢复panic\",{\"1\":{\"298\":1}}],[\"通过这些机制\",{\"1\":{\"576\":1}}],[\"通过任期概念\",{\"1\":{\"576\":1}}],[\"通过任期概念来避免旧\",{\"1\":{\"574\":1}}],[\"通过共识\",{\"1\":{\"570\":1}}],[\"通过验证数字签名\",{\"1\":{\"560\":1}}],[\"通过新的ssid连接的设备\",{\"1\":{\"467\":1}}],[\"通过配置这些规则\",{\"1\":{\"467\":1}}],[\"通过\",{\"1\":{\"418\":1}}],[\"通过添加\",{\"1\":{\"418\":1}}],[\"通过指针接收者做的任何修改都会直接影响到原始数据\",{\"1\":{\"229\":1}}],[\"通过http响应头直接设置csp通常被认为是更优的做法\",{\"1\":{\"76\":1}}],[\"通过标签设置csp不会改变服务器的http响应头部\",{\"1\":{\"76\":1}}],[\"通过有效地使用\",{\"1\":{\"22\":1}}],[\"通过消息队列广播这个订单给所有附近的骑手\",{\"1\":{\"600\":1}}],[\"通过消息队列来解耦各个服务之间的直接依赖\",{\"1\":{\"10\":1}}],[\"通过消息队列分配任务给多个工作节点\",{\"1\":{\"9\":1}}],[\"通过调用txselect方法在一个channel上开启事务\",{\"1\":{\"3\":1}}],[\"通道的指针\",{\"1\":{\"312\":2}}],[\"通道\",{\"1\":{\"2\":1,\"310\":1}}],[\"首先确保project1和project2各自已经是独立的git仓库\",{\"1\":{\"113\":1}}],[\"首先\",{\"1\":{\"3\":1,\"386\":1,\"414\":1,\"418\":1,\"460\":1,\"482\":1}}],[\"取消事务内进行的所有消息发送\",{\"1\":{\"2\":1}}],[\"事务简介\",{\"0\":{\"590\":1}}],[\"事务\",{\"1\":{\"584\":1,\"600\":1}}],[\"事务支持\",{\"1\":{\"9\":1}}],[\"事务的主要操作包括\",{\"0\":{\"591\":1}}],[\"事务的性能影响\",{\"0\":{\"4\":1}}],[\"事务的基本操作\",{\"0\":{\"2\":1}}],[\"事务机制包含三个基本操作\",{\"1\":{\"2\":1}}],[\"这就是序列化的作用\",{\"1\":{\"597\":1}}],[\"这需要重新编码\",{\"1\":{\"582\":1}}],[\"这指示\",{\"1\":{\"581\":1}}],[\"这在源视频的帧率确实变化时有用\",{\"1\":{\"581\":1}}],[\"这在你需要一个指向某类型零值的指针\",{\"1\":{\"313\":1}}],[\"这允许\",{\"1\":{\"581\":1}}],[\"这对于确保输出视频与预期的帧率匹配非常有用\",{\"1\":{\"581\":1}}],[\"这会使\",{\"1\":{\"581\":1}}],[\"这会导致相比非事务发送操作有较大的延迟\",{\"1\":{\"4\":1}}],[\"这通过\",{\"1\":{\"577\":1}}],[\"这通常不是你想要的\",{\"1\":{\"312\":2}}],[\"这通常是处理网络连接中断或结束的一个重要信号\",{\"1\":{\"307\":1}}],[\"这保证了即使在发生故障转移的情况下\",{\"1\":{\"576\":1}}],[\"这保证了在任何给定的任期内\",{\"1\":{\"576\":1}}],[\"这确保了消息一旦被消费者成功处理\",{\"1\":{\"586\":1}}],[\"这确保了消息已经成功到达服务器\",{\"1\":{\"584\":1}}],[\"这确保了所有的跟随者最终将具有与领导者相同的日志顺序\",{\"1\":{\"576\":1}}],[\"这确保了只有当前任期的领导者能够影响集群状态\",{\"1\":{\"576\":1}}],[\"这确保了证书是为当前正在访问的网站颁发的\",{\"1\":{\"557\":1}}],[\"这将在命令行环境中启动一个新的php进程来运行指定的脚本\",{\"1\":{\"492\":1}}],[\"这将确保访客网络的用户只能访问互联网\",{\"1\":{\"485\":1}}],[\"这一步骤不是必须的\",{\"1\":{\"473\":1}}],[\"这一属性为网页设计师提供了一种在不使用图像编辑软件的情况下直接通过css代码对元素进行视觉效果调整的方法\",{\"1\":{\"46\":1}}],[\"这可能有助于修正源视频中由于帧过多而导致的时间戳不连续问题\",{\"1\":{\"581\":1}}],[\"这可能导致在某些情况下\",{\"1\":{\"438\":1}}],[\"这可以通过发布\",{\"1\":{\"600\":1}}],[\"这可以通过指定与源相同的编解码器但输出到新容器实现\",{\"1\":{\"582\":1}}],[\"这可以通过查询证书撤销列表\",{\"1\":{\"558\":1}}],[\"这可以通过ip命令完成\",{\"1\":{\"480\":1}}],[\"这可以通过\",{\"1\":{\"418\":1}}],[\"这可以通过使用直播软件\",{\"1\":{\"417\":1}}],[\"这可以提供安全保护并允许多个设备共享一个公网ip地址\",{\"1\":{\"393\":1}}],[\"这次的数据同步过程就完成了\",{\"1\":{\"437\":1}}],[\"这些都是真实的ca颁发的\",{\"1\":{\"626\":1}}],[\"这些消息会通过集群内部的网络传输\",{\"1\":{\"589\":1}}],[\"这些心跳也是通过\",{\"1\":{\"577\":1}}],[\"这些副本会订阅到主副本的状态变更事件\",{\"1\":{\"577\":1}}],[\"这些\",{\"1\":{\"577\":1}}],[\"这些节点存储了网站\",{\"1\":{\"534\":1}}],[\"这些命令创建了一个新的桥接接口br3并启动了它\",{\"1\":{\"460\":1}}],[\"这些步骤包括创建桥接接口\",{\"1\":{\"459\":1}}],[\"这些方法可能需要对系统级的设置进行更改\",{\"1\":{\"413\":1}}],[\"这些工具提供了更丰富的同步机制\",{\"1\":{\"376\":1}}],[\"这些引用类型的行为更像是内置的指针\",{\"1\":{\"311\":1}}],[\"这些机制允许\",{\"1\":{\"21\":1}}],[\"这表明\",{\"1\":{\"298\":1}}],[\"这展示了defer语句的lifo执行顺序\",{\"1\":{\"296\":1}}],[\"这提高了语言的灵活性和易用性\",{\"1\":{\"230\":1}}],[\"这两种接收者在使用时有本质的不同\",{\"1\":{\"227\":1}}],[\"这种模式提高了消息的可靠性\",{\"1\":{\"589\":1}}],[\"这种模式主要提高了系统的可用性和负载均衡能力\",{\"1\":{\"589\":1}}],[\"这种通信机制是透明的\",{\"1\":{\"577\":1}}],[\"这种机制确保了集群中大多数节点存有相同的日志副本\",{\"1\":{\"576\":1}}],[\"这种配置的关键在于正确设置防火墙规则\",{\"1\":{\"477\":1}}],[\"这种配置通常在企业或高级家庭网络中使用\",{\"1\":{\"472\":1}}],[\"这种操作通常涉及到视频流的捕获\",{\"1\":{\"417\":1}}],[\"这种方法适用于脚本之间密切相关\",{\"1\":{\"491\":1}}],[\"这种方法更加直观\",{\"1\":{\"315\":1}}],[\"这种方法可以避免浮点数运算中的舍入误差\",{\"1\":{\"239\":1}}],[\"这种地址空间是由操作系统和cpu的\",{\"1\":{\"274\":1}}],[\"这种写法\",{\"1\":{\"155\":1}}],[\"这种设计简化了数据处理\",{\"1\":{\"20\":1}}],[\"这段代码会递归地查找所有符合模式的文件\",{\"1\":{\"79\":1}}],[\"这是并发计算中一个非常重要的概念\",{\"1\":{\"514\":1}}],[\"这是通过使用证书链中上一级证书的公钥来完成的\",{\"1\":{\"560\":1}}],[\"这是通过使用如\",{\"1\":{\"21\":1}}],[\"这是通过修改内核参数\",{\"1\":{\"393\":1}}],[\"这是由于linux内核具有灵活的网络功能\",{\"1\":{\"393\":1}}],[\"这是最常见的原因\",{\"1\":{\"363\":1}}],[\"这是一个js类的写法\",{\"1\":{\"381\":1}}],[\"这是一个更精确的方法\",{\"1\":{\"380\":1}}],[\"这是一个匿名常量\",{\"1\":{\"156\":1}}],[\"这是一种编程模式\",{\"1\":{\"155\":1}}],[\"这是一种在客户端实施安全策略的方式\",{\"1\":{\"76\":1}}],[\"这是因为\",{\"1\":{\"80\":1}}],[\"这是提高网站安全性的一个重要手段\",{\"1\":{\"76\":1}}],[\"这实际上是一种在页面级别应用内容安全策略的方法\",{\"1\":{\"76\":1}}],[\"这个ca是真实的颁发机构\",{\"1\":{\"626\":1}}],[\"这个抢单的api需要设计成幂等的\",{\"1\":{\"600\":1}}],[\"这个格式通常是一串字节或者一种通用的数据格式\",{\"1\":{\"597\":1}}],[\"这个节点负责将消息分发到其他拥有镜像副本的节点\",{\"1\":{\"577\":1}}],[\"这个命令会列出所有以br开头的接口名称\",{\"1\":{\"507\":1}}],[\"这个基本指南应该能帮助你在openwrt系统上为访客创建一个隔离的网络环境\",{\"1\":{\"487\":1}}],[\"这个名称随后用于系统的其他配置部分\",{\"1\":{\"469\":1}}],[\"这个过程同样依赖于\",{\"1\":{\"577\":1}}],[\"这个过程涉及到使用docker\",{\"1\":{\"535\":1}}],[\"这个过程主要通过二进制日志\",{\"1\":{\"433\":1}}],[\"这个过程是自动进行的\",{\"1\":{\"319\":1}}],[\"这个注解告诉\",{\"1\":{\"368\":2}}],[\"这个方法会检查请求体的大小\",{\"1\":{\"319\":1}}],[\"这个\",{\"1\":{\"319\":1}}],[\"这个函数调用设定的是服务器处理multipart\",{\"1\":{\"319\":1}}],[\"这个指针指向的通道是\",{\"1\":{\"312\":1}}],[\"这个通道是已经初始化好的\",{\"1\":{\"312\":1}}],[\"这个值在\",{\"1\":{\"306\":1}}],[\"这个缓冲区的存在意味着数据不是立即发送到网络的\",{\"1\":{\"303\":1}}],[\"这个缓冲区是由操作系统管理的\",{\"1\":{\"303\":1}}],[\"这个切片引用了相同的底层数组\",{\"1\":{\"300\":1}}],[\"这个新的defer是不会被执行的\",{\"1\":{\"298\":1}}],[\"这个defer不会被执行\",{\"1\":{\"298\":1}}],[\"这个位置根据服务器的哈希值决定\",{\"1\":{\"272\":1}}],[\"这个goroutine不会退出\",{\"1\":{\"209\":1}}],[\"这个时候git的子模块就很有用了\",{\"1\":{\"99\":1}}],[\"这个点由\",{\"1\":{\"61\":1}}],[\"这个例子会将所有img元素转换为灰度图像\",{\"1\":{\"48\":1}}],[\"这里我引用learnku的两张图来说明\",{\"1\":{\"618\":1}}],[\"这里有两种常用方法来实现这一点\",{\"1\":{\"506\":1}}],[\"这里有几种常见的情况\",{\"1\":{\"251\":1}}],[\"这里涉及两个关键概念\",{\"1\":{\"455\":1}}],[\"这里执行异步操作\",{\"1\":{\"368\":1}}],[\"这里记录如何解决这个报错\",{\"1\":{\"361\":1}}],[\"这里是\",{\"1\":{\"300\":1}}],[\"这里是一个使用\",{\"1\":{\"79\":1}}],[\"这里简单地回显\",{\"1\":{\"271\":1}}],[\"这里\",{\"1\":{\"61\":1,\"463\":1,\"470\":1,\"508\":1}}],[\"这里的defer不会执行\",{\"1\":{\"298\":1}}],[\"这里的\",{\"1\":{\"19\":1}}],[\"这使得即使是值类型\",{\"1\":{\"311\":1}}],[\"这使得即使在单线程模型下\",{\"1\":{\"20\":1}}],[\"这使得\",{\"1\":{\"22\":1}}],[\"这消除了传统多线程应用中的锁和竞争条件问题\",{\"1\":{\"21\":1}}],[\"这意味着队列将在服务器重启后继续存在\",{\"1\":{\"585\":1}}],[\"这意味着系统的状态变更\",{\"1\":{\"576\":1}}],[\"这意味着主服务器在将事件写入二进制日志后就立即返回\",{\"1\":{\"438\":1}}],[\"这意味着视频可以根据用户的网络速度动态调整质量\",{\"1\":{\"424\":1}}],[\"这意味着当这些类型的变量被赋值给另一个变量时\",{\"1\":{\"310\":1}}],[\"这意味着如果客户端发送一个超过\",{\"1\":{\"301\":1}}],[\"这意味着通过这个切片对底层数组所做的任何更改都会反映在原始数组\",{\"1\":{\"300\":1}}],[\"这意味着对于每个新请求\",{\"1\":{\"251\":1}}],[\"这意味着一旦一个字符串被创建\",{\"1\":{\"221\":1}}],[\"这意味着\",{\"1\":{\"20\":1,\"300\":1}}],[\"这意味着在任何给定时刻\",{\"1\":{\"20\":1}}],[\"这意味着你可以在发送消息之前开始一个事务\",{\"1\":{\"1\":1}}],[\"这并不意味着\",{\"1\":{\"19\":1}}],[\"这样即使一个节点失败\",{\"1\":{\"586\":1}}],[\"这样即使rabbitmq服务器重启\",{\"1\":{\"585\":1}}],[\"这样当消息被rabbitmq服务器接收后\",{\"1\":{\"584\":1}}],[\"这样可以确保各个节点的负载均衡\",{\"1\":{\"534\":1}}],[\"这样可以减少数据传输的延迟和丢包率\",{\"1\":{\"534\":1}}],[\"这样可以减少响应时间和网络拥塞\",{\"1\":{\"534\":1}}],[\"这样\",{\"1\":{\"457\":1}}],[\"这样就大大减少了因服务器增减导致的数据迁移量\",{\"1\":{\"272\":1}}],[\"这样就好像这些消息从未被发送过一样\",{\"1\":{\"1\":1}}],[\"这样做可以减少建立和关闭连接的开销\",{\"1\":{\"251\":1}}],[\"这样做可以让你定义哪些类型的资源\",{\"1\":{\"76\":1}}],[\"这样的机制来实现的\",{\"1\":{\"21\":1}}],[\"这样事务中的所有消息发送操作都会被取消\",{\"1\":{\"3\":1}}],[\"这时消息会被实际发送到队列中\",{\"1\":{\"3\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n,id:o}})=>{const u=bt[s];e==="suggest"?self.postMessage([e,o,tt(t,u,n)]):e==="search"?self.postMessage([e,o,Z(t,u,n)]):self.postMessage({suggestions:[e,o,tt(t,u,n)],results:[e,o,Z(t,u,n)]})};
//# sourceMappingURL=index.js.map
