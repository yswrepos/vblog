import{_ as n,o as s,c as a,e as t}from"./app-CzTFaVnz.js";const e={},p=t(`<div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code>
<span class="token keyword">type</span> Invoker <span class="token keyword">interface</span> <span class="token punctuation">{</span>
    <span class="token function">Call</span><span class="token punctuation">(</span>p <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> FnCaller <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>


<span class="token keyword">func</span> <span class="token punctuation">(</span>f FnCaller<span class="token punctuation">)</span> <span class="token function">Call</span><span class="token punctuation">(</span>p <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">f</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token comment">// main.go</span>

<span class="token keyword">var</span> i Invoker 

i <span class="token operator">=</span> <span class="token function">FnCaller</span><span class="token punctuation">(</span><span class="token keyword">func</span><span class="token punctuation">(</span>v <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    log<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%v&quot;</span><span class="token punctuation">,</span> v<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

i<span class="token punctuation">.</span><span class="token function">Call</span><span class="token punctuation">(</span><span class="token string">&quot;Hello go func&quot;</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),o=[p];function c(l,i){return s(),a("div",null,o)}const k=n(e,[["render",c],["__file","go函数体实现接口.html.vue"]]),d=JSON.parse('{"path":"/posts/go/go%E5%87%BD%E6%95%B0%E4%BD%93%E5%AE%9E%E7%8E%B0%E6%8E%A5%E5%8F%A3.html","title":"go函数体实现接口","lang":"zh-CN","frontmatter":{"layout":"posts","title":"go函数体实现接口","date":"2024-01-09T14:47:49.000Z","tags":["go"],"categories":["go"]},"headers":[],"git":{"updatedTime":1712251162000,"contributors":[{"name":"yushen","email":"85443289+yushenw@users.noreply.github.com","commits":1}]},"filePathRelative":"posts/go/go函数体实现接口.md","excerpt":"<div class=\\"language-go\\" data-ext=\\"go\\" data-title=\\"go\\"><pre class=\\"language-go\\"><code>\\n<span class=\\"token keyword\\">type</span> Invoker <span class=\\"token keyword\\">interface</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token function\\">Call</span><span class=\\"token punctuation\\">(</span>p <span class=\\"token keyword\\">interface</span><span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">type</span> FnCaller <span class=\\"token keyword\\">func</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">interface</span><span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n\\n\\n<span class=\\"token keyword\\">func</span> <span class=\\"token punctuation\\">(</span>f FnCaller<span class=\\"token punctuation\\">)</span> <span class=\\"token function\\">Call</span><span class=\\"token punctuation\\">(</span>p <span class=\\"token keyword\\">interface</span><span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token function\\">f</span><span class=\\"token punctuation\\">(</span>p<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n</code></pre></div>"}');export{k as comp,d as data};
