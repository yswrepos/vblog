import{_ as n,o as s,c as a,e}from"./app-CzTFaVnz.js";const t={},p=e(`<p>beautifulsoup4是一个轻量级的python库，能够解析html代码，以下是基本使用方法</p><h2 id="基本使用" tabindex="-1"><a class="header-anchor" href="#基本使用"><span>基本使用</span></a></h2><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> requests
<span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSoup

url <span class="token operator">=</span> <span class="token string">&#39;https://a&#39;</span>

headers <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;User-Agent&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.102 Safari/537.36&#39;</span>
<span class="token punctuation">}</span>

response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span> headers<span class="token punctuation">)</span>
<span class="token comment"># file.write(soup.prettify())</span>
<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;origin.html&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;w&#39;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">file</span><span class="token punctuation">:</span>
    <span class="token builtin">file</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span>response<span class="token punctuation">.</span>text<span class="token punctuation">)</span>

<span class="token comment"># 解析HTML</span>
soup <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>response<span class="token punctuation">.</span>content<span class="token punctuation">,</span> <span class="token string">&#39;html.parser&#39;</span><span class="token punctuation">)</span>

s <span class="token operator">=</span> soup<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&#39;span&#39;</span><span class="token punctuation">,</span> class_<span class="token operator">=</span><span class="token string">&#39;DS-EntryPoint1-1&#39;</span><span class="token punctuation">)</span>
divs <span class="token operator">=</span> soup<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">,</span> class_<span class="token operator">=</span><span class="token string">&#39;DS-EntryPoint1-1&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># 遍历找到的div元素</span>
<span class="token keyword">for</span> div <span class="token keyword">in</span> divs<span class="token punctuation">:</span>
    <span class="token comment"># 在每个div中查找所有的span元素</span>
    spans <span class="token operator">=</span> div<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">&#39;span&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>spans<span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">2</span><span class="token punctuation">:</span> 
        second_span_content <span class="token operator">=</span> spans<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>get_text<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>second_span_content<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="常用api" tabindex="-1"><a class="header-anchor" href="#常用api"><span>常用API</span></a></h2><ul><li><p><strong>find()</strong> 作用：查找与指定条件匹配的第一个元素。 用法示例：soup.find(&#39;tag_name&#39;), soup.find(&#39;tag_name&#39;, class_=&#39;class_name&#39;)</p></li><li><p><strong>find_all()</strong> 作用：查找与指定条件匹配的所有元素。 用法示例：soup.find_all(&#39;tag_name&#39;), soup.find_all(&#39;tag_name&#39;, class_=&#39;class_name&#39;)</p></li><li><p><strong>select()</strong> 作用：使用CSS选择器查找元素。 用法示例：soup.select(&#39;tag_name&#39;), soup.select(&#39;.class_name&#39;), soup.select(&#39;#id_name&#39;)</p></li><li><p><strong>select_one()</strong> 作用：使用CSS选择器查找第一个匹配的元素。 用法示例：soup.select_one(&#39;.class_name&#39;), soup.select_one(&#39;#id_name&#39;)</p></li><li><p><strong>find_parent() / find_parents()</strong> 作用：查找元素的父元素（find_parent）或所有父元素（find_parents）。 用法示例：element.find_parent(&#39;tag_name&#39;), element.find_parents(&#39;tag_name&#39;)</p></li><li><p><strong>find_next_sibling() / find_next_siblings()</strong> 作用：查找元素的下一个兄弟元素（find_next_sibling）或所有后续兄弟元素（find_next_siblings）。 用法示例：element.find_next_sibling(&#39;tag_name&#39;), element.find_next_siblings(&#39;tag_name&#39;)</p></li><li><p><strong>find_previous_sibling() / find_previous_siblings()</strong> 作用：查找元素的上一个兄弟元素（find_previous_sibling）或所有之前的兄弟元素（find_previous_siblings）。 用法示例：element.find_previous_sibling(&#39;tag_name&#39;), element.find_previous_siblings(&#39;tag_name&#39;)</p></li><li><p><strong>find_all_next() / find_next()</strong> 作用：查找元素之后的所有符合条件的元素（find_all_next）或下一个符合条件的元素（find_next）。 用法示例：element.find_all_next(&#39;tag_name&#39;), element.find_next(&#39;tag_name&#39;)</p></li><li><p><strong>find_all_previous() / find_previous()</strong> 作用：查找元素之前的所有符合条件的元素（find_all_previous）或上一个符合条件的元素（find_previous）。 用法示例：element.find_all_previous(&#39;tag_name&#39;), element.find_previous(&#39;tag_name&#39;)</p></li></ul>`,5),i=[p];function l(o,c){return s(),a("div",null,i)}const r=n(t,[["render",l],["__file","常用beautifulsoup4操作.html.vue"]]),d=JSON.parse('{"path":"/posts/python/%E5%B8%B8%E7%94%A8beautifulsoup4%E6%93%8D%E4%BD%9C.html","title":"常用beautifulsoup4操作","lang":"zh-CN","frontmatter":{"layout":"posts","title":"常用beautifulsoup4操作","date":"2024-01-022 21:52:49","tags":["python"],"categories":["python"]},"headers":[{"level":2,"title":"基本使用","slug":"基本使用","link":"#基本使用","children":[]},{"level":2,"title":"常用API","slug":"常用api","link":"#常用api","children":[]}],"git":{"updatedTime":1712251162000,"contributors":[{"name":"yushen","email":"85443289+yushenw@users.noreply.github.com","commits":1}]},"filePathRelative":"posts/python/常用beautifulsoup4操作.md","excerpt":"<p>beautifulsoup4是一个轻量级的python库，能够解析html代码，以下是基本使用方法</p>\\n"}');export{r as comp,d as data};
