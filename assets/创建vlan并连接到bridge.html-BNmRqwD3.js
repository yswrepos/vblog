import{_ as e,o as n,c as s,e as a}from"./app-CinGCuEv.js";const t={},i=a(`<p>要在一个基于Linux的系统上（比如OpenWrt）新建一个名为<code>br3</code>的桥接接口，并创建一个虚拟局域网（VLAN），你需要执行几个步骤。这些步骤包括创建桥接接口、将物理接口或已有的虚拟接口添加到桥接中，以及配置VLAN。以下是一个基本的指南：</p><h3 id="_1-创建桥接接口" tabindex="-1"><a class="header-anchor" href="#_1-创建桥接接口"><span>1. 创建桥接接口</span></a></h3><p>首先，你需要安装<code>bridge-utils</code>包（如果尚未安装），它提供了管理桥接接口的工具。在OpenWrt上，你通常不需要手动安装，因为它内置了相应的功能。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>opkg update
opkg <span class="token function">install</span> bridge-utils
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>然后，创建桥接接口<code>br3</code>：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">ip</span> <span class="token function">link</span> <span class="token function">add</span> name br3 <span class="token builtin class-name">type</span> bridge
<span class="token function">ip</span> <span class="token function">link</span> <span class="token builtin class-name">set</span> br3 up
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>这些命令创建了一个新的桥接接口<code>br3</code>并启动了它。</p><h3 id="_2-添加接口到桥接中" tabindex="-1"><a class="header-anchor" href="#_2-添加接口到桥接中"><span>2. 添加接口到桥接中</span></a></h3><p>如果你想将一个或多个物理接口（比如<code>eth0</code>）或已有的虚拟接口（比如一个已配置的VLAN接口<code>eth0.100</code>）加入到桥接中，使用如下命令：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">ip</span> <span class="token function">link</span> <span class="token builtin class-name">set</span> eth0 master br3
<span class="token comment"># 或者对于一个VLAN接口</span>
<span class="token function">ip</span> <span class="token function">link</span> <span class="token builtin class-name">set</span> eth0.100 master br3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-创建并配置vlan" tabindex="-1"><a class="header-anchor" href="#_3-创建并配置vlan"><span>3. 创建并配置VLAN</span></a></h3><p>创建VLAN通常意味着你在物理接口上创建一个带VLAN ID的虚拟接口。例如，如果你想在<code>eth0</code>接口上创建VLAN ID为100的VLAN，可以这样做：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">ip</span> <span class="token function">link</span> <span class="token function">add</span> <span class="token function">link</span> eth0 name eth0.100 <span class="token builtin class-name">type</span> vlan <span class="token function">id</span> <span class="token number">100</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后，你可以将这个VLAN接口添加到桥接中：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">ip</span> <span class="token function">link</span> <span class="token builtin class-name">set</span> eth0.100 master br3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_4-配置ip地址-可选" tabindex="-1"><a class="header-anchor" href="#_4-配置ip地址-可选"><span>4. 配置IP地址（可选）</span></a></h3><p>你可能还想为<code>br3</code>接口配置一个IP地址，使其能够在网络中通信：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">ip</span> addr <span class="token function">add</span> <span class="token number">192.168</span>.3.1/24 dev br3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这里，<code>192.168.3.1/24</code>是桥接接口<code>br3</code>的IP地址和子网掩码，你应该根据你的网络配置来调整这个地址。</p><h3 id="_5-保存配置" tabindex="-1"><a class="header-anchor" href="#_5-保存配置"><span>5. 保存配置</span></a></h3><p>在OpenWrt上，你需要使用<code>/etc/config/network</code>文件或<code>uci</code>命令来保存这些更改，以确保在重启后配置仍然有效。例如，使用<code>uci</code>命令设置桥接接口和VLAN：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>uci <span class="token builtin class-name">set</span> <span class="token assign-left variable">network.br3</span><span class="token operator">=</span>interface
uci <span class="token builtin class-name">set</span> <span class="token assign-left variable">network.br3.type</span><span class="token operator">=</span><span class="token string">&#39;bridge&#39;</span>
uci <span class="token builtin class-name">set</span> <span class="token assign-left variable">network.br3.ifname</span><span class="token operator">=</span><span class="token string">&#39;eth0.100&#39;</span>
uci commit network
/etc/init.d/network restart
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>请注意，具体的命令和步骤可能会根据你的系统和版本有所不同。上述步骤提供了一个基本的指导，你可能需要根据你的具体需求调整命令。</p><h2 id="网桥间的访问" tabindex="-1"><a class="header-anchor" href="#网桥间的访问"><span>网桥间的访问</span></a></h2><p>创建一个新的桥接接口<code>br3</code>并设置一个虚拟局域网（VLAN）本身不会自动产生一个新的SSID（Service Set Identifier，服务集标识符）。SSID通常与无线网络相关，是无线局域网的名称。要在OpenWrt等路由器操作系统上创建一个新的SSID并将其与特定的桥接接口（比如<code>br3</code>）关联，你需要进行一些额外的配置。</p><h3 id="创建新ssid并关联到桥接接口" tabindex="-1"><a class="header-anchor" href="#创建新ssid并关联到桥接接口"><span>创建新SSID并关联到桥接接口</span></a></h3><ol><li><p><strong>配置无线网络</strong>：在OpenWrt上，你可以通过编辑<code>/etc/config/wireless</code>文件或使用<code>uci</code>命令来配置无线网络。你需要为新的SSID指定无线接口配置，并将其绑定到你的新桥接接口<code>br3</code>。</p></li><li><p><strong>无线接口与桥接</strong>：无线接口配置中，你可以通过设置<code>option network &#39;br3&#39;</code>来指定该无线网络应该关联的桥接接口，确保无线客户端连接到这个SSID时，其流量会通过<code>br3</code>进行路由。</p></li></ol><h3 id="控制桥接接口之间的访问" tabindex="-1"><a class="header-anchor" href="#控制桥接接口之间的访问"><span>控制桥接接口之间的访问</span></a></h3><p>是否一个桥接接口（比如<code>br3</code>）能访问其他桥接接口（比如<code>br0</code>或<code>br1</code>）主要由路由和防火墙规则决定：</p><ul><li><p><strong>路由规则</strong>：控制数据包从一个网络接口到另一个网络接口的流动。如果没有特定的路由规则来禁止或允许流量，那么这些桥接接口之间的通信将取决于默认的路由策略。</p></li><li><p><strong>防火墙规则</strong>：在OpenWrt等系统中，防火墙规则是用来细致控制网络间通信的。你可以设置规则来允许或阻止来自某个桥接接口的流量访问另一个接口。通过配置这些规则，你可以实现网络隔离，比如阻止访客网络（通过新的SSID连接的设备）访问内部网络。</p></li></ul><h3 id="示例-设置防火墙规则以隔离网络" tabindex="-1"><a class="header-anchor" href="#示例-设置防火墙规则以隔离网络"><span>示例：设置防火墙规则以隔离网络</span></a></h3><p>你可以使用OpenWrt的<code>/etc/config/firewall</code>文件或<code>uci</code>命令来创建防火墙规则，以防止<code>br3</code>上的设备访问<code>br0</code>上的设备。例如，创建一个规则禁止从<code>br3</code>到<code>br0</code>的所有流量：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>uci <span class="token function">add</span> firewall rule
uci <span class="token builtin class-name">set</span> firewall.@rule<span class="token punctuation">[</span>-1<span class="token punctuation">]</span>.name<span class="token operator">=</span><span class="token string">&quot;Deny-Access-From-br3-to-br0&quot;</span>
uci <span class="token builtin class-name">set</span> firewall.@rule<span class="token punctuation">[</span>-1<span class="token punctuation">]</span>.src<span class="token operator">=</span><span class="token string">&quot;br3&quot;</span>
uci <span class="token builtin class-name">set</span> firewall.@rule<span class="token punctuation">[</span>-1<span class="token punctuation">]</span>.dest<span class="token operator">=</span><span class="token string">&quot;br0&quot;</span>
uci <span class="token builtin class-name">set</span> firewall.@rule<span class="token punctuation">[</span>-1<span class="token punctuation">]</span>.proto<span class="token operator">=</span><span class="token string">&quot;all&quot;</span>
uci <span class="token builtin class-name">set</span> firewall.@rule<span class="token punctuation">[</span>-1<span class="token punctuation">]</span>.target<span class="token operator">=</span><span class="token string">&quot;REJECT&quot;</span>
uci commit firewall
/etc/init.d/firewall restart
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>请注意，具体的配置可能需要根据你的网络设置和OpenWrt版本进行调整。确保在应用任何改动之前备份相关配置文件。</p>`,34),l=[i];function c(o,p){return n(),s("div",null,l)}const r=e(t,[["render",c],["__file","创建vlan并连接到bridge.html.vue"]]),u=JSON.parse('{"path":"/posts/net/%E5%88%9B%E5%BB%BAvlan%E5%B9%B6%E8%BF%9E%E6%8E%A5%E5%88%B0bridge.html","title":"创建vlan并连接到bridge","lang":"zh-CN","frontmatter":{"title":"创建vlan并连接到bridge","date":"2024-02-27T23:46:15.000Z","tags":null,"description":"要在一个基于Linux的系统上（比如OpenWrt）新建一个名为br3的桥接接口，并创建一个虚拟局域网（VLAN），你需要执行几个步骤。这些步骤包括创建桥接接口、将物理接口或已有的虚拟接口添加到桥接中，以及配置VLAN。以下是一个基本的指南： 1. 创建桥接接口 首先，你需要安装bridge-utils包（如果尚未安装），它提供了管理桥接接口的工具。在...","head":[["meta",{"property":"og:url","content":"https://b.yongzhenxin.com/posts/net/%E5%88%9B%E5%BB%BAvlan%E5%B9%B6%E8%BF%9E%E6%8E%A5%E5%88%B0bridge.html"}],["meta",{"property":"og:site_name","content":"Yunshenw"}],["meta",{"property":"og:title","content":"创建vlan并连接到bridge"}],["meta",{"property":"og:description","content":"要在一个基于Linux的系统上（比如OpenWrt）新建一个名为br3的桥接接口，并创建一个虚拟局域网（VLAN），你需要执行几个步骤。这些步骤包括创建桥接接口、将物理接口或已有的虚拟接口添加到桥接中，以及配置VLAN。以下是一个基本的指南： 1. 创建桥接接口 首先，你需要安装bridge-utils包（如果尚未安装），它提供了管理桥接接口的工具。在..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-04T17:19:22.000Z"}],["meta",{"property":"article:published_time","content":"2024-02-27T23:46:15.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-04T17:19:22.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"创建vlan并连接到bridge\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-02-27T23:46:15.000Z\\",\\"dateModified\\":\\"2024-04-04T17:19:22.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":3,"title":"1. 创建桥接接口","slug":"_1-创建桥接接口","link":"#_1-创建桥接接口","children":[]},{"level":3,"title":"2. 添加接口到桥接中","slug":"_2-添加接口到桥接中","link":"#_2-添加接口到桥接中","children":[]},{"level":3,"title":"3. 创建并配置VLAN","slug":"_3-创建并配置vlan","link":"#_3-创建并配置vlan","children":[]},{"level":3,"title":"4. 配置IP地址（可选）","slug":"_4-配置ip地址-可选","link":"#_4-配置ip地址-可选","children":[]},{"level":3,"title":"5. 保存配置","slug":"_5-保存配置","link":"#_5-保存配置","children":[]},{"level":2,"title":"网桥间的访问","slug":"网桥间的访问","link":"#网桥间的访问","children":[{"level":3,"title":"创建新SSID并关联到桥接接口","slug":"创建新ssid并关联到桥接接口","link":"#创建新ssid并关联到桥接接口","children":[]},{"level":3,"title":"控制桥接接口之间的访问","slug":"控制桥接接口之间的访问","link":"#控制桥接接口之间的访问","children":[]},{"level":3,"title":"示例：设置防火墙规则以隔离网络","slug":"示例-设置防火墙规则以隔离网络","link":"#示例-设置防火墙规则以隔离网络","children":[]}]}],"git":{"updatedTime":1712251162000,"contributors":[{"name":"yushen","email":"85443289+yushenw@users.noreply.github.com","commits":1}]},"autoDesc":true,"filePathRelative":"posts/net/创建vlan并连接到bridge.md","excerpt":"<p>要在一个基于Linux的系统上（比如OpenWrt）新建一个名为<code>br3</code>的桥接接口，并创建一个虚拟局域网（VLAN），你需要执行几个步骤。这些步骤包括创建桥接接口、将物理接口或已有的虚拟接口添加到桥接中，以及配置VLAN。以下是一个基本的指南：</p>\\n<h3>1. 创建桥接接口</h3>\\n<p>首先，你需要安装<code>bridge-utils</code>包（如果尚未安装），它提供了管理桥接接口的工具。在OpenWrt上，你通常不需要手动安装，因为它内置了相应的功能。</p>\\n<div class=\\"language-bash\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"language-bash\\"><code>opkg update\\nopkg <span class=\\"token function\\">install</span> bridge-utils\\n</code></pre></div>"}');export{r as comp,u as data};
