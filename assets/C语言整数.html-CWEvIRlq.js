import{_ as n,o as s,c as a,e}from"./app-CzTFaVnz.js";const t={},o=e(`<h3 id="int" tabindex="-1"><a class="header-anchor" href="#int"><span>int</span></a></h3><p>现代操作系统中，<code>int</code>一般占用<code>4</code>个字节(Byte), 共32位。若不考虑正负数， 当所有的位都为 1 时它的值最大，为 232-1 = 4,294,967,295 ≈ 43亿。 <strong>int建议为一个机器字长，32位机器字长为4字节，64位机器字长为8字节</strong> 16位环境下,int为2字节。</p><h3 id="short" tabindex="-1"><a class="header-anchor" href="#short"><span>short</span></a></h3><p>短整型，占用2个字节</p><h3 id="long" tabindex="-1"><a class="header-anchor" href="#long"><span>long</span></a></h3><p>长整型，16位和32位为4字节。</p><h3 id="char" tabindex="-1"><a class="header-anchor" href="#char"><span>char</span></a></h3><p>占用1个字节</p><h3 id="_64位环境占用字节情况" tabindex="-1"><a class="header-anchor" href="#_64位环境占用字节情况"><span>64位环境占用字节情况</span></a></h3><p>操作系统 short int long Win64 2 4 4 类Unix系统 2 4 8</p><h3 id="获取某数据类型长度" tabindex="-1"><a class="header-anchor" href="#获取某数据类型长度"><span>获取某数据类型长度：</span></a></h3><div class="language-c line-numbers-mode" data-ext="c" data-title="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">short</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>
   
    <span class="token keyword">int</span> short_length <span class="token operator">=</span> <span class="token keyword">sizeof</span> a<span class="token punctuation">;</span>
    <span class="token keyword">int</span> int_length <span class="token operator">=</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> long_length <span class="token operator">=</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> char_length <span class="token operator">=</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;short=%d, int=%d, long=%d, char=%d\\n&quot;</span><span class="token punctuation">,</span> short_length<span class="token punctuation">,</span> int_length<span class="token punctuation">,</span> long_length<span class="token punctuation">,</span> char_length<span class="token punctuation">)</span><span class="token punctuation">;</span>
   
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>// 32 位环境以及 Win64 环境下的运行结果 short=2, int=4, long=4, char=1 // 64 位 Linux 和 Mac OS 下的运行结果 short=2, int=4, long=8, char=1</p>`,13),p=[o];function c(l,i){return s(),a("div",null,p)}const d=n(t,[["render",c],["__file","C语言整数.html.vue"]]),h=JSON.parse('{"path":"/posts/c/C%E8%AF%AD%E8%A8%80%E6%95%B4%E6%95%B0.html","title":"C语言常用类型占用大小","lang":"zh-CN","frontmatter":{"title":"C语言常用类型占用大小","toc":true,"keywords":"c/c++,类型大小,类型占用字节","tags":["c/c++"],"categories":["片段"],"abbrlink":"79491f72","date":"2021-04-02T20:13:16.000Z"},"headers":[{"level":3,"title":"int","slug":"int","link":"#int","children":[]},{"level":3,"title":"short","slug":"short","link":"#short","children":[]},{"level":3,"title":"long","slug":"long","link":"#long","children":[]},{"level":3,"title":"char","slug":"char","link":"#char","children":[]},{"level":3,"title":"64位环境占用字节情况","slug":"_64位环境占用字节情况","link":"#_64位环境占用字节情况","children":[]},{"level":3,"title":"获取某数据类型长度：","slug":"获取某数据类型长度","link":"#获取某数据类型长度","children":[]}],"git":{"updatedTime":1712251162000,"contributors":[{"name":"yushen","email":"85443289+yushenw@users.noreply.github.com","commits":1}]},"filePathRelative":"posts/c/C语言整数.md","excerpt":"<h3>int</h3>\\n<p>现代操作系统中，<code>int</code>一般占用<code>4</code>个字节(Byte), 共32位。若不考虑正负数，\\n当所有的位都为 1 时它的值最大，为 232-1 = 4,294,967,295 ≈ 43亿。\\n<strong>int建议为一个机器字长，32位机器字长为4字节，64位机器字长为8字节</strong>\\n16位环境下,int为2字节。</p>\\n<h3>short</h3>\\n<p>短整型，占用2个字节</p>\\n<h3>long</h3>\\n<p>长整型，16位和32位为4字节。</p>\\n<h3>char</h3>\\n<p>占用1个字节</p>\\n"}');export{d as comp,h as data};
